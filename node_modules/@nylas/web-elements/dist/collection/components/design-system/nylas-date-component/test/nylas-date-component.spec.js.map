{"version":3,"file":"nylas-date-component.spec.js","sourceRoot":"","sources":["../../../../../src/components/design-system/nylas-date-component/test/nylas-date-component.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAC7D,OAAO,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAElC,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACpC,UAAU,CAAC,GAAG,EAAE;QAEd,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;QAC3D,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,kBAAkB,CAAC;YAChC,QAAQ,EAAE,GAAG,EAAE,CAAC,4BAAsB,QAAQ,EAAE,IAAI,GAAI;SACzD,CAAC,CAAC;QACH,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;QACpC,MAAM,SAAS,GAAG,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,aAAa,CAAC,OAAO,CAAqB,CAAC;QAErF,MAAM,WAAW,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAC9B,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QACjD,SAAS,CAAC,KAAK,GAAG,YAAY,CAAC;QAC/B,SAAS,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACjF,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,WAAW,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAEvC,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,sBAAsB,EAAE;YAC1D,MAAM,EAAE,EAAE;SACX,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;YAC5B,MAAM,EAAE;gBACN,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE;oBACR,KAAK,EAAE,KAAK;iBACb;aACF;SACF,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,0BAA0B,CAAC,WAAW,CAAC,CAAC;QAC1D,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { NylasDateComponent } from '../nylas-date-component';\nimport { h } from '@stencil/core';\n\ndescribe('nylas-date-component', () => {\n  beforeEach(() => {\n    // Clear and reset the mock before each test if needed\n    jest.clearAllMocks();\n  });\n\n  it('renders error if date form field is invalid', async () => {\n    const page = await newSpecPage({\n      components: [NylasDateComponent],\n      template: () => <nylas-date-component required={true} />,\n    });\n    await page.waitForChanges();\n    expect(page.root).toMatchSnapshot();\n    const dateInput = page?.root?.shadowRoot?.querySelector('input') as HTMLInputElement;\n\n    const mockOnInput = jest.fn();\n    dateInput.addEventListener('input', mockOnInput);\n    dateInput.value = '1993-02-29';\n    dateInput.dispatchEvent(new Event('input', { bubbles: true, cancelable: true }));\n    await page.waitForChanges();\n    expect(mockOnInput).toHaveBeenCalled();\n\n    const customEvent = new CustomEvent('bookingFormSubmitted', {\n      detail: {},\n    });\n    page.rootInstance.handleInput({\n      target: {\n        value: '',\n        validity: {\n          valid: false,\n        },\n      },\n    });\n    page.rootInstance.handleBookingFormSubmitted(customEvent);\n    await page.waitForChanges();\n    expect(page.rootInstance.isDateValid).toBe(false);\n    expect(page.root).toMatchSnapshot();\n  });\n});\n"]}