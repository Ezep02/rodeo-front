import { sanitize } from "../../../utils/utils";
import { h } from "@stencil/core";
export class TextareaComponent {
    constructor() {
        this.name = 'textarea';
        this.defaultValue = undefined;
        this.label = '';
        this.placeholder = '';
        this.required = false;
        this.readOnly = false;
        this.autoFocus = false;
        this.maxLength = 255;
        this.type = 'multi_line_text';
        this.tooltip = '';
        this.value = '';
        this.error = '';
    }
    componentDidLoad() {
        this.value = sanitize(this.defaultValue || '');
    }
    handleBookingFormSubmitted(event) {
        this.validate(this.value);
        if (this.error) {
            event.preventDefault();
        }
    }
    handletriggerValidation(event) {
        this.validate(this.value);
        if (this.error) {
            event.preventDefault();
        }
    }
    handleInput(e) {
        const inputElement = e.target;
        this.value = sanitize(inputElement.value);
        this.nylasFormInputChanged.emit({
            value: this.value,
            name: this.name,
            error: this.error,
            label: this.label,
            type: this.type,
        });
    }
    validate(value) {
        if (this.required && !value) {
            this.error = `${this.label} is required.`;
        }
        else if (value.length > this.maxLength) {
            this.error = `${this.label} cannot exceed ${this.maxLength} characters.`;
        }
        else {
            this.error = '';
        }
    }
    render() {
        return (h("label", { key: '18b05c7318527e7cf7215bf3825e2e65674527d9', part: "tc__label", class: { error: !!this.error } }, h("p", { key: 'ab8167c6d7f695c75ecf00f3719783fdb92b92f5' }, h("span", { key: 'f0669daea951f39a0f47929cf84fe2c573c7ab48', class: "label" }, this.label), this.required && h("span", { class: "required" }, "*"), this.tooltip && (h("tooltip-component", null, h("info-icon", { slot: "tooltip-icon" }), h("span", { slot: "tooltip-content" }, this.tooltip)))), h("textarea", { key: 'c0960b3e0662e02cd5e26586853cd1550b0fc4e5', name: this.name, placeholder: this.placeholder, readOnly: this.readOnly, autoFocus: this.autoFocus, value: this.value, maxLength: this.maxLength, onInput: e => this.handleInput(e), class: { error: !!this.error }, part: "tc__textarea" }), this.error && h("span", { class: "error help-text" }, this.error)));
    }
    static get is() { return "textarea-component"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["textarea-component.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["textarea-component.css"]
        };
    }
    static get properties() {
        return {
            "name": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "The name of the textarea, important for form submissions."
                },
                "attribute": "name",
                "reflect": false,
                "defaultValue": "'textarea'"
            },
            "defaultValue": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string | undefined",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "The default value of the textarea, appearing when the component first renders."
                },
                "attribute": "default-value",
                "reflect": false
            },
            "label": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "The label for the textarea, displayed above it."
                },
                "attribute": "label",
                "reflect": false,
                "defaultValue": "''"
            },
            "placeholder": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Placeholder text shown in the textarea when it is empty."
                },
                "attribute": "placeholder",
                "reflect": false,
                "defaultValue": "''"
            },
            "required": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Specifies if the textarea is required for form submission.\nIf true, an error message shows if left empty."
                },
                "attribute": "required",
                "reflect": false,
                "defaultValue": "false"
            },
            "readOnly": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "If true, the textarea cannot be edited by the user."
                },
                "attribute": "read-only",
                "reflect": false,
                "defaultValue": "false"
            },
            "autoFocus": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Automatically focus the textarea when the component loads."
                },
                "attribute": "auto-focus",
                "reflect": false,
                "defaultValue": "false"
            },
            "maxLength": {
                "type": "number",
                "mutable": false,
                "complexType": {
                    "original": "number",
                    "resolved": "number",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "The maximum number of characters allowed in the textarea."
                },
                "attribute": "max-length",
                "reflect": false,
                "defaultValue": "255"
            },
            "type": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "The type"
                },
                "attribute": "type",
                "reflect": false,
                "defaultValue": "'multi_line_text'"
            },
            "tooltip": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "The content of the label's tooltip"
                },
                "attribute": "tooltip",
                "reflect": false,
                "defaultValue": "''"
            }
        };
    }
    static get states() {
        return {
            "value": {},
            "error": {}
        };
    }
    static get events() {
        return [{
                "method": "nylasFormInputChanged",
                "name": "nylasFormInputChanged",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "Event emitted when the value of the textarea changes.\nUseful for parent components to capture user input."
                },
                "complexType": {
                    "original": "{ value: string; name: string; error: string; label: string; type: string }",
                    "resolved": "{ value: string; name: string; error: string; label: string; type: string; }",
                    "references": {}
                }
            }];
    }
    static get listeners() {
        return [{
                "name": "bookingFormSubmitted",
                "method": "handleBookingFormSubmitted",
                "target": "document",
                "capture": false,
                "passive": false
            }, {
                "name": "triggerValidation",
                "method": "handletriggerValidation",
                "target": "document",
                "capture": false,
                "passive": false
            }];
    }
}
//# sourceMappingURL=textarea-component.js.map
