{"version":3,"file":"nylas-scheduling.spec.js","sourceRoot":"","sources":["../../../../../src/components/scheduler/nylas-scheduling/test/nylas-scheduling.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { NylasScheduling } from '../nylas-scheduling';\nimport { NylasBookingForm } from '../../nylas-booking-form/nylas-booking-form';\nimport { NylasSelectedEventCard } from '../../nylas-selected-event-card/nylas-selected-event-card';\nimport { h } from '@stencil/core';\nimport { NylasDatePicker } from '../../nylas-date-picker/nylas-date-picker';\nimport { NylasTimeslotPicker } from '../../nylas-timeslot-picker/nylas-timeslot-picker';\nimport { NylasLocaleSwitch } from '../../nylas-locale-switch/nylas-locale-switch';\nimport { SelectDropdown } from '../../../design-system/select-dropdown/select-dropdown';\n\nconst configSettings = {\n  name: '',\n  slug: '',\n  configuration_id: '19ca4a10-be05-4d1b-a830-5b639a362cef',\n  scheduler: {\n    available_days_in_future: 30,\n    min_cancellation_notice: 0,\n    min_booking_notice: 60,\n    rescheduling_url: 'https://book.nylas.com/scheduler/reschedule/:booking_ref',\n    cancellation_url: 'https://book.nylas.com/scheduler/cancel/:booking_ref',\n    organizer_confirmation_url: 'https://book.nylas.com/scheduler/confirm/:booking_ref',\n    confirmation_redirect_url: 'https://nylas.com',\n    hide_rescheduling_options: false,\n    hide_cancellation_options: false,\n    hide_additional_guests: false,\n    cancellation_policy: '',\n    additional_fields: {\n      dropdown: {\n        label: 'Dropdown Label',\n        type: 'dropdown',\n        required: false,\n        order: 2,\n        options: ['option 1', 'option 2'],\n      },\n      short_text: {\n        label: 'Short Text Label',\n        type: 'text',\n        required: false,\n        order: 1,\n      },\n    },\n  },\n  organizer: {\n    email: 'pooja.g@nylas.com',\n    name: '',\n  },\n  booking_type: 'booking',\n  appearance: {\n    company_logo_url: '',\n  },\n};\nconst defaultSchedulerState = {\n  showBookingForm: true,\n  availability: [\n    {\n      emails: ['pooja.g@nylas.com'],\n      end_time: 1728639000 as any,\n      start_time: 1728637200 as any,\n    },\n  ],\n  selectableDates: [new Date(1728639000000)],\n  selectedDate: new Date(1728639000000),\n  selectedTimeslot: {\n    end_time: 1728639000 as any,\n    start_time: 1728637200 as any,\n    emails: ['janedoe@example.com'],\n  },\n  selectedTimezone: 'America/Los_Angeles',\n  bookingInfo: {\n    primaryParticipant: {\n      name: 'John Doe',\n      email: 'johndoe@example.com',\n    },\n    guests: [],\n    additionalFields: {\n      short_text: {\n        value: 'some value',\n        type: 'text',\n      },\n      dropdown: {\n        value: 'option 2',\n        type: 'dropdown',\n      },\n      field2: {\n        value: 'some value',\n        type: 'text',\n      },\n    },\n  },\n  configSettings: { ...configSettings },\n};\n\ndescribe('nylas-scheduling', () => {\n  const REAL_DATE = Date;\n  const testBookingRef = 'Of_H8WLEQ4aZTtx0NKajeAF1l9qpekHbo4by7AaZc8M=';\n  beforeEach(() => {\n    // Clear and reset the mock before each test if needed\n    jest.clearAllMocks();\n  });\n\n  beforeAll(() => {\n    const originalDate = Date;\n    global.Date = class extends originalDate {\n      constructor(date?: string | number) {\n        super(date ? date : '2022-01-01T00:00:00.000Z');\n      }\n    } as DateConstructor;\n  });\n\n  afterAll(() => {\n    global.Date = REAL_DATE;\n  });\n\n  it('renders', async () => {\n    const page = await newSpecPage({\n      components: [NylasScheduling],\n      html: `<nylas-scheduling></nylas-scheduling>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('listens for NylasSchedulingError event and updates state', async () => {\n    const page = await newSpecPage({\n      components: [NylasScheduling],\n      html: `<nylas-scheduling></nylas-scheduling>`,\n    });\n\n    const mockError = { title: 'Error', description: 'Test Error', type: 'error', category: 'component', ttl: 'none' };\n    const errorEvent = new CustomEvent('NylasSchedulingError', { detail: mockError, bubbles: true });\n    page.win.dispatchEvent(errorEvent);\n    await page.waitForChanges();\n\n    const notification = page?.root?.shadowRoot?.querySelector('nylas-notification');\n    expect(notification).not.toBeNull();\n    const notifRoot = notification?.shadowRoot?.querySelector('.notif');\n    expect(notifRoot).not.toBeNull();\n  });\n\n  it('shows no error when configID is set, and no sessionID is set', async () => {\n    const availability = [\n      {\n        emails: ['xyz@gmail.com'],\n        end_time: new Date(1709303400000),\n        start_time: new Date(1709301600000),\n      },\n    ];\n    const page = await newSpecPage({\n      components: [NylasScheduling],\n      template: () => (\n        <nylas-scheduling\n          config-id=\"configid\"\n          defaultSchedulerState={{\n            availability,\n          }}\n        ></nylas-scheduling>\n      ),\n    });\n\n    await page.waitForChanges();\n\n    const notification = page?.root?.shadowRoot?.querySelector('nylas-notification');\n    const notifRoot = notification?.shadowRoot?.querySelector('.notif');\n    expect(notifRoot).toBeUndefined();\n  });\n\n  it('listens for dateSelected event and updates date label', async () => {\n    const page = await newSpecPage({\n      components: [NylasScheduling],\n      html: `<nylas-scheduling></nylas-scheduling>`,\n    });\n\n    const selectedDate = new Date();\n    const dateSelectedEvent = new CustomEvent('dateSelected', { detail: selectedDate, bubbles: true });\n    page.win.dispatchEvent(dateSelectedEvent);\n    await page.waitForChanges();\n\n    const selectedDateLabel = page?.root?.shadowRoot?.querySelector('#selectedDate');\n    expect(selectedDateLabel?.textContent).toBe('No date selected');\n  });\n\n  it('conditionally renders cancel flow based on cancelBookingRef prop', async () => {\n    const page = await newSpecPage({\n      components: [NylasScheduling],\n      html: `<nylas-scheduling cancel-booking-ref=${testBookingRef}></nylas-scheduling>`,\n    });\n\n    await page.waitForChanges();\n    const cancelFlowPage = page?.root?.shadowRoot?.querySelector('.cancel-flow-page');\n    expect(cancelFlowPage).not.toBeNull();\n  });\n\n  it('renders composable UI when mode is set to composable', async () => {\n    const page = await newSpecPage({\n      components: [NylasScheduling],\n      html: `<nylas-scheduling mode=\"composable\">\n      <nylas-if-state state=\"scheduler.eventInfo\" is-state-set=\"false\">\n      <div class=\"flex\">\n        <div class=\"flex flex-col gap-4 px-6 pt-4 h-[514px] w-[433px] border-slate-200 dark:border-slate-700 border-r\">\n          <nylas-if-state state=\"scheduler.showBookingForm\" is-boolean=\"false\">\n            <nylas-date-picker></nylas-date-picker>\n            <div class=\"border-slate-200 dark:border-slate-700 border-t -mx-6 h-px\"></div>\n            <nylas-locale-switch></nylas-locale-switch>\n          </nylas-if-state>\n          <nylas-if-state state=\"scheduler.showBookingForm\" is-boolean=\"true\">\n            <div class=\"flex flex-col justify-center h-[496px]\">\n              <nylas-selected-event-card></nylas-selected-event-card>\n            </div>\n          </nylas-if-state>\n        </div>\n        <div class=\"flex flex-col items-center min-w-[360px] overflow-hidden bg-slate-50 dark:bg-slate-700\">\n          <nylas-if-state state=\"scheduler.showBookingForm\" is-boolean=\"false\" class=\"w-full\">\n            <div class=\"flex flex-col justify-start w-full\">\n              <nylas-if-state state=\"scheduler.selectableDates\" is-state-set=\"true\">\n                <h2 class=\"flex items-center justify-center text-lg font-semibold w-full text-center gap-1 mb-4 mt-6 text-slate-700 dark:text-white\">\n                  <calendar-icon></calendar-icon>\n                  <nylas-if-state state=\"scheduler.selectedDate\" is-state-set=\"false\">\n                    <span>No date selected</span>\n                  </nylas-if-state>\n                  <nylas-if-state state=\"scheduler.selectedDate\" is-state-set=\"true\">\n                    <span id=\"selectedDate\"></span>\n                  </nylas-if-state>\n                </h2>\n              </nylas-if-state>\n              <nylas-timeslot-picker></nylas-timeslot-picker>\n            </div>\n          </nylas-if-state>\n          <nylas-if-state state=\"scheduler.showBookingForm\" is-boolean=\"true\" class=\"w-full\">\n            <div class=\"flex flex-col justify-center h-[496px]\">\n              <nylas-booking-form></nylas-booking-form>\n            </div>\n          </nylas-if-state>\n        </div>\n      </div>\n    </nylas-if-state>\n      </nylas-scheduling>`,\n    });\n\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('exposes getNylasSchedulingStore method and returns store', async () => {\n    const page = await newSpecPage({\n      components: [NylasScheduling],\n      html: `<nylas-scheduling session-id=\"sessionid\"></nylas-scheduling>`,\n    });\n    const scheduler = page.rootInstance as NylasScheduling;\n\n    const store = await scheduler.getNylasSchedulerStore();\n    expect(store).toBeDefined();\n  });\n\n  it('exposes getNylasSchedulingConnector method and returns connector', async () => {\n    const page = await newSpecPage({\n      components: [NylasScheduling],\n      html: `<nylas-scheduling session-id=\"sessionid\"></nylas-scheduling>`,\n    });\n    const scheduler = page.rootInstance as NylasScheduling;\n\n    const connector = await scheduler.getNylasSchedulerConnector();\n    expect(connector).toBeDefined();\n  });\n\n  it('should render the reschedule flow when rescheduleBookingRef is set', async () => {\n    const page = await newSpecPage({\n      components: [NylasScheduling],\n      html: `<nylas-scheduling reschedule-booking-ref=${testBookingRef}></nylas-scheduling>`,\n    });\n\n    await page.waitForChanges();\n\n    const messageBanner = page?.root?.shadowRoot?.querySelector('.message-banner');\n    expect(messageBanner).not.toBeNull();\n  });\n\n  it('hides the nylas logo in the footer if nylasBranding is set', async () => {\n    const page = await newSpecPage({\n      components: [NylasScheduling],\n      template: () => <nylas-scheduling config-id=\"configid\" nylasBranding={false}></nylas-scheduling>,\n    });\n\n    await page.waitForChanges();\n\n    const footer = page?.root?.shadowRoot?.querySelector('.footer');\n    expect(footer?.textContent).not.toContain('Powered by Nylas');\n  });\n\n  it('applies themeConfig to sub components', async () => {\n    jest.spyOn(global, 'fetch').mockImplementation(url => {\n      if (url === 'https://api.us.nylas.com/v3/scheduling/ui-settings?configuration_id=19ca4a10-be05-4d1b-a830-5b639a362cef') {\n        return Promise.resolve({ request_id: 'test', data: configSettings } as any);\n      } else if (url === 'https://api.us.nylas.com/v3/scheduling/bookings?configuration_id=19ca4a10-be05-4d1b-a830-5b639a362cef') {\n        return Promise.resolve({\n          json: () =>\n            Promise.resolve({\n              request_id: '1729109187-ffa7e86e-c276-45c2-8cda-e3205e46d234',\n              data: {\n                event_id: 'jlid5nji0nmoupl87ls85iv8do',\n                booking_id: '8f9f5145-c40c-4477-8d30-5c43256ddb60',\n                title: 'm',\n                description: '',\n                organizer: {\n                  email: 'johndoe@example.com',\n                  name: '',\n                },\n                status: 'booked',\n              },\n            } as any),\n        } as Response);\n      }\n\n      return fetch(url); // Fallback for unmocked URLs\n    });\n\n    const page = await newSpecPage({\n      components: [NylasDatePicker, NylasTimeslotPicker, NylasScheduling],\n      template: () => (\n        <nylas-scheduling\n          configurationId={'19ca4a10-be05-4d1b-a830-5b639a362cef'}\n          bookingInfo={defaultSchedulerState.bookingInfo}\n          defaultSchedulerState={{ ...defaultSchedulerState, showBookingForm: false }}\n          themeConfig={{\n            '--nylas-primary': 'red',\n            '--nylas-base-500': 'orange',\n          }}\n        ></nylas-scheduling>\n      ),\n    });\n\n    await page.waitForChanges();\n\n    const datePicker = page?.root?.shadowRoot?.querySelector('nylas-date-picker') as HTMLNylasDatePickerElement;\n    const timeslotPicker = page?.root?.shadowRoot?.querySelector('nylas-timeslot-picker') as HTMLNylasTimeslotPickerElement;\n    datePicker.themeConfig = {\n      '--nylas-primary': 'red',\n      '--nylas-base-500': 'orange',\n    };\n    timeslotPicker.themeConfig = {\n      '--nylas-primary': 'red',\n      '--nylas-base-500': 'orange',\n    };\n    await page.waitForChanges();\n    expect(page.root).toMatchSnapshot();\n\n    const datePickerHost = datePicker?.shadowRoot?.host as HTMLNylasDatePickerElement;\n    expect(datePickerHost?.style.getPropertyValue('--nylas-primary')).toBe('red');\n    expect(datePickerHost?.style.getPropertyValue('--nylas-base-500')).toBe('orange');\n    const timeslotPickerHost = timeslotPicker?.shadowRoot?.host as HTMLNylasTimeslotPickerElement;\n    expect(timeslotPickerHost?.style.getPropertyValue('--nylas-primary')).toBe('red');\n    expect(timeslotPickerHost?.style.getPropertyValue('--nylas-base-500')).toBe('orange');\n  });\n\n  it('applies bookingInfo timezone and language to sub components', async () => {\n    jest.spyOn(global, 'fetch').mockImplementation(url => {\n      if (url === 'https://api.us.nylas.com/v3/scheduling/ui-settings?configuration_id=19ca4a10-be05-4d1b-a830-5b639a362cef') {\n        return Promise.resolve({ request_id: 'test', data: configSettings } as any);\n      } else if (url === 'https://api.us.nylas.com/v3/scheduling/bookings?configuration_id=19ca4a10-be05-4d1b-a830-5b639a362cef') {\n        return Promise.resolve({\n          json: () =>\n            Promise.resolve({\n              request_id: '1729109187-ffa7e86e-c276-45c2-8cda-e3205e46d234',\n              data: {\n                event_id: 'jlid5nji0nmoupl87ls85iv8do',\n                booking_id: '8f9f5145-c40c-4477-8d30-5c43256ddb60',\n                title: 'm',\n                description: '',\n                organizer: {\n                  email: 'johndoe@example.com',\n                  name: '',\n                },\n                status: 'booked',\n              },\n            } as any),\n        } as Response);\n      }\n\n      return fetch(url); // Fallback for unmocked URLs\n    });\n\n    const page = await newSpecPage({\n      components: [SelectDropdown, NylasDatePicker, NylasTimeslotPicker, NylasLocaleSwitch, NylasScheduling],\n      template: () => (\n        <nylas-scheduling\n          configurationId={'19ca4a10-be05-4d1b-a830-5b639a362cef'}\n          bookingInfo={{ ...defaultSchedulerState.bookingInfo, timezone: 'America/Toronto' }}\n          defaultSchedulerState={{ ...defaultSchedulerState, showBookingForm: false }}\n        ></nylas-scheduling>\n      ),\n    });\n\n    await page.waitForChanges();\n\n    const localeSwitch = page?.root?.shadowRoot?.querySelector('nylas-locale-switch') as HTMLNylasLocaleSwitchElement;\n    localeSwitch.bookingInfo = { ...defaultSchedulerState.bookingInfo, language: 'fr', timezone: 'America/Toronto' };\n    await page.waitForChanges();\n    expect(page.root).toMatchSnapshot();\n\n    const timezoneSelectDropdown = localeSwitch?.shadowRoot?.querySelector('.timezone select-dropdown') as HTMLSelectDropdownElement;\n    const timezoneButton = timezoneSelectDropdown?.shadowRoot?.querySelector('button');\n    expect(timezoneButton?.textContent).toContain('America / Toronto');\n\n    const languageSelectDropdown = localeSwitch?.shadowRoot?.querySelector('.language select-dropdown') as HTMLSelectDropdownElement;\n    const languageButton = languageSelectDropdown?.shadowRoot?.querySelector('button');\n    expect(languageButton?.textContent).toContain('Français');\n  });\n\n  it('redirects with the query params when redirectUrl is set', async () => {\n    jest.spyOn(global, 'fetch').mockImplementation(url => {\n      if (url === 'https://api.us.nylas.com/v3/scheduling/ui-settings?configuration_id=19ca4a10-be05-4d1b-a830-5b639a362cef') {\n        return Promise.resolve({ request_id: 'test', data: configSettings } as any);\n      } else if (url === 'https://api.us.nylas.com/v3/scheduling/bookings?configuration_id=19ca4a10-be05-4d1b-a830-5b639a362cef') {\n        return Promise.resolve({\n          json: () =>\n            Promise.resolve({\n              request_id: '1729109187-ffa7e86e-c276-45c2-8cda-e3205e46d234',\n              data: {\n                event_id: 'jlid5nji0nmoupl87ls85iv8do',\n                booking_id: '8f9f5145-c40c-4477-8d30-5c43256ddb60',\n                title: 'm',\n                description: '',\n                organizer: {\n                  email: 'johndoe@example.com',\n                  name: '',\n                },\n                status: 'booked',\n              },\n            } as any),\n        } as Response);\n      }\n\n      return fetch(url); // Fallback for unmocked URLs\n    });\n    let nylasScheduling: NylasScheduling;\n    const page = await newSpecPage({\n      components: [NylasSelectedEventCard, NylasBookingForm, NylasScheduling],\n      template: () => (\n        <nylas-scheduling\n          mode=\"app\"\n          configurationId={'19ca4a10-be05-4d1b-a830-5b639a362cef'}\n          bookingInfo={defaultSchedulerState.bookingInfo}\n          defaultSchedulerState={defaultSchedulerState}\n        ></nylas-scheduling>\n      ),\n    });\n    nylasScheduling = page.rootInstance as NylasScheduling;\n    const redirectSpy = jest.spyOn(nylasScheduling, 'redirectToCustomUrl');\n    await page.waitForChanges();\n    expect(page.root).toMatchSnapshot();\n    const nylasBookingForm = page?.root?.shadowRoot?.querySelector('nylas-booking-form') as HTMLNylasBookingFormElement;\n    nylasBookingForm.bookingInfo = defaultSchedulerState.bookingInfo;\n    await page.waitForChanges();\n    const form = nylasBookingForm?.shadowRoot?.querySelector('form');\n    expect(form).not.toBeNull();\n\n    const detailsConfirmedEvent = new CustomEvent('detailsConfirmed', {\n      detail: {\n        additionalFields: { dropdown: 'option 2', short_text: 'hello' },\n        guests: [],\n        start_time: new Date(1729013400000),\n        timezone: 'America/Toronto',\n        email_language: 'en-US',\n        end_time: new Date(1729015200000),\n        timeslot: {\n          start_time: new Date(1729013400000),\n          end_time: new Date(1729015200000),\n        },\n        primaryParticipant: { name: 'John Doe', email: 'johndoe@example.com' },\n      },\n      bubbles: true,\n    });\n\n    await nylasScheduling.bookButtonClickedHandler(detailsConfirmedEvent);\n    await page.waitForChanges();\n    expect(redirectSpy).toHaveBeenCalled();\n    // Assert that the redirect happened with the correct URL (includes field_2 in the additional_values)\n    expect(redirectSpy).toHaveBeenCalledWith(\n      'https://nylas.com?booking_id=8f9f5145-c40c-4477-8d30-5c43256ddb60&name=John+Doe&email=johndoe%40example.com&start_time=1728637.2&end_time=1728639&tz=America%2FLos_Angeles&additional_values=%7B%22dropdown%22%3A%22option+2%22%2C%22short_text%22%3A%22hello%22%2C%22field2%22%3A%22some+value%22%7D&config_id=19ca4a10-be05-4d1b-a830-5b639a362cef',\n    );\n  });\n});\n"]}