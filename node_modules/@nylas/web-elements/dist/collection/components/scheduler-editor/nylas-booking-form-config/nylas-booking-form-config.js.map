{"version":3,"file":"nylas-booking-form-config.js","sourceRoot":"","sources":["../../../../src/components/scheduler-editor/nylas-booking-form-config/nylas-booking-form-config.tsx"],"names":[],"mappings":"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","sourcesContent":["import { RegisterComponent } from '@/common/register-component';\nimport { NylasSchedulerConfigConnector } from '@/connector/nylas-scheduler-config-connector';\nimport { debug } from '@/utils/utils';\nimport { AttachInternals, Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { NylasSchedulerEditor } from '../nylas-scheduler-editor/nylas-scheduler-editor';\nimport { DEFAULT_FORM_FIELD_TYPES, FIELD_TYPES } from '@/common/constants';\nimport { Configuration } from '@nylas/core';\nimport Sortable from 'sortablejs';\nimport i18next from '@/utils/i18n';\nimport { LANGUAGE_CODE } from '@/common/constants';\n\ninterface AdditionalFields {\n  type: string;\n  required: boolean;\n  label: string;\n  order: number;\n  options?: string[];\n  key: string;\n  default?: string;\n  error?: string;\n}\ninterface AdditionalFieldsInternal extends AdditionalFields {\n  isOpen: boolean;\n  readonly?: boolean;\n  typeLabel: string;\n}\n\nconst staticFields = [\n  {\n    type: 'text',\n    label: 'Your name',\n    key: 'your_name',\n    typeLabel: 'Short text',\n    readonly: true,\n    required: true,\n    isOpen: false,\n    order: 0,\n  },\n  {\n    type: 'email',\n    label: 'Your Email',\n    key: 'your_email',\n    typeLabel: 'Email',\n    readonly: true,\n    isOpen: false,\n    required: true,\n    order: 1,\n  },\n];\n\n/**\n * The `nylas-booking-form-config` component is a form input for adding additional fields to the booking form.\n * @part nbfc__header - The header of the booking form\n * @part nbfc__add_field - The add field selection container\n * @part nbfc__add_field-button - The add field  selection button\n * @part nbfc__add_field-content - The add field  selection dropdown content\n * @part nbfc__additional_fields - The aditional fields container\n * @part nbfc__form-field - The single form container\n * @part nbfc__form-field-header - The single form header\n * @part nbfc__form-field-content - The single form content\n */\n@Component({\n  tag: 'nylas-booking-form-config',\n  styleUrl: 'nylas-booking-form-config.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class NylasBookingFormConfig {\n  /**\n   * The element <nylas-booking-form-config> itself.\n   */\n  @Element() host!: HTMLNylasBookingFormConfigElement;\n\n  /**\n   * @internal\n   * The selected configuration.\n   */\n  @Prop() selectedConfiguration?: Configuration;\n\n  /**\n   * The name of the booking form config.\n   */\n  @Prop() name: string = 'additional-fields';\n\n  /**\n   * The additional fields to be displayed on the booking form.\n   */\n  @Prop() additionalFields?: AdditionalFields[];\n\n  /**\n   * The selected language.\n   */\n  @Prop() selectedLanguage?: LANGUAGE_CODE;\n\n  /**\n   * This event is fired when the selected availability / open hours change.\n   */\n  @Event() valueChanged!: EventEmitter<{\n    value: Record<string, AdditionalFields>;\n    name: string;\n  }>;\n\n  /**\n   * The element internals.\n   */\n  @AttachInternals() internals!: ElementInternals;\n\n  @State() formFields!: AdditionalFieldsInternal[];\n\n  @State() watchFields!: {\n    title: string;\n    description: string;\n  };\n\n  /**\n   * When a name prop is passed, stencil does not automatically set the name attribute on the host element.\n   * Since this component is form-associated, the name attribute is required for form submission.\n   * This is a workaround to ensure that the name attribute is set on the host element.\n   */\n  @Watch('name')\n  elementNameChangedHandler(newValue: string) {\n    debug('nylas-calendar-picker', 'elementNameChangedHandler', newValue);\n    this.host.setAttribute('name', newValue);\n  }\n\n  @Watch('selectedConfiguration')\n  selectedConfigurationChangedHandler(newValue: Configuration) {\n    this.updateFormFields(newValue);\n  }\n\n  @Watch('selectedLanguage')\n  selectedLanguageChangedHandler(newVal: LANGUAGE_CODE, oldVal: LANGUAGE_CODE) {\n    if (newVal === oldVal) return;\n    i18next.changeLanguage(newVal);\n  }\n\n  connectedCallback() {\n    debug('nylas-booking-form-config', 'connectedCallback');\n  }\n\n  disconnectedCallback() {\n    debug('nylas-booking-form-config', 'disconnectedCallback');\n  }\n\n  componentWillLoad() {\n    debug('nylas-booking-form-config', 'componentWillLoad');\n    this.host.setAttribute('name', this.name);\n    this.formFields = [...staticFields];\n  }\n\n  componentDidLoad() {\n    debug('nylas-booking-form-config', 'componentDidLoad');\n    if (this.selectedConfiguration) {\n      this.updateFormFields(this.selectedConfiguration);\n    }\n  }\n\n  updateFormFields(config: Configuration) {\n    this.watchFields = {\n      title: config?.event_booking?.title || '',\n      description: config?.event_booking?.description || '',\n    };\n    const additionalFields =\n      Object.entries(config?.scheduler?.additional_fields || {}).map(([id, field]) => ({ ...(field as AdditionalFields), key: id })) || this.additionalFields || [];\n    this.formFields = [\n      ...staticFields,\n      ...additionalFields\n        .sort((a, b) => a.order - b.order)\n        .map((f: AdditionalFields, i) => {\n          const fieldType = FIELD_TYPES.find(field => field.type === f.type);\n          if (!fieldType) {\n            return { ...f, isOpen: false, typeLabel: 'Unknown' };\n          }\n          const typeLabel = fieldType.label;\n          f.order = i + 2;\n          return { ...f, isOpen: false, typeLabel };\n        }),\n    ];\n\n    const container = this.host.shadowRoot?.getElementById('fields');\n    Sortable.create(container, {\n      animation: 150,\n      swap: true, // Enable swap plugin\n      swapClass: 'highlight', // The class applied to the hovered swap item\n      onEnd: this.swapFields.bind(this),\n      handle: '.form-field_header', // Only allow dragging by the header\n      filter: '.fixed', // Disable dragging for elements with the 'fixed' class\n      onMove: evt => !evt.related.classList.contains('fixed'), // Prevent moving if target has 'fixed' class\n    });\n  }\n\n  @Watch('formFields')\n  watchHandler(newValue: AdditionalFieldsInternal[]) {\n    const additionalFields = newValue;\n    // Remove readonly fields, sort by order\n    const sortedFields = additionalFields\n      .filter(f => !f.readonly)\n      .sort((a, b) => a.order - b.order)\n      .map((f, i) => {\n        const field: AdditionalFields = {\n          type: f.type,\n          required: f.required,\n          label: f.label,\n          order: i + 1,\n          options: f.options,\n          key: f.key,\n          default: f.default,\n        };\n        return { ...field };\n      });\n    // Map fields to object\n    const addFieldsMap = sortedFields.reduce((acc, field) => {\n      acc[field.key] = {\n        type: field.type,\n        required: field.required,\n        order: field.order,\n        options: field.options,\n        label: field.label,\n        default: field.default,\n      };\n      return acc;\n    }, {});\n    this.valueChanged.emit({\n      value: addFieldsMap,\n      name: this.name,\n    });\n  }\n\n  /**\n   * This function finds the next missing number in an array of strings (keys of additional_fields).\n   * We use this function to generate the next consecutive index number for the key.\n   * For example,\n   * - If the keys are ['dropdown_another-one_1', 'dropdown_Whatever-choose-one_3'] the function will return 2.\n   * - If the array is empty, the function will return 1.\n   * - If there are no missing numbers in between, the function will return the next number after the last element.\n   *\n   * @param arr of keys stored in the formFields for the given field type\n   * @returns a number that is the next (consecutive) missing number in the array\n   */\n  findNextMissingNumber(arr: string[]): number {\n    if (arr.length === 0) {\n      return 1; // If the array is empty, the first number is 1\n    }\n\n    // Extract numbers from strings by splitting on underscore and popping the last element\n    const numbers = arr\n      .map(item => {\n        const parts = item.split('_'); // Split the string by '_'\n        const lastPart = parts.pop(); // Get the last part (should be the number)\n        const parsedNumber = parseInt(lastPart || '', 10);\n        return isNaN(parsedNumber) ? null : parsedNumber; // Return the parsed number or null if not a valid number\n      })\n      .filter((num): num is number => num !== null) // Filter out any null values and assert that the result is a number\n      .sort((a, b) => a - b); // Sort numbers in ascending order\n\n    // Iterate through the sorted numbers to find the missing number\n    for (let i = 0; i < numbers.length - 1; i++) {\n      if (numbers[i + 1] !== numbers[i] + 1) {\n        return numbers[i] + 1; // Return the missing number\n      }\n    }\n\n    // If no number is missing in between, return the next number after the last element\n    return numbers.length > 0 ? numbers[numbers.length - 1] + 1 : 1;\n  }\n\n  @Listen('nylasFormDropdownChanged')\n  nylasFormDropdownChangedHandler(\n    event: CustomEvent<{\n      value: string;\n      name: string;\n    }>,\n  ) {\n    const { name, value } = event.detail;\n    if (name === 'add-field') {\n      const field = FIELD_TYPES.find(f => f.type === value);\n      const maxOrder = Math.max(...this.formFields.map(f => f.order));\n      const existingFieldKeys = this.formFields.filter(f => f.type === field.type).map(f => f.key);\n      const next = this.findNextMissingNumber(existingFieldKeys);\n      const newField = { ...field, label: field.label, key: `${field.type}_${field.label.split(' ').join('-')}_${next}`, order: maxOrder + 1 }; // Copy object + Ensure unique order\n      this.formFields = [...this.formFields, newField];\n    }\n  }\n\n  @Listen('nylasFormInputChanged')\n  nylasFormInputChangedHandler(event: CustomEvent<{ value: string; name: string }>) {\n    const { name } = event.detail;\n    if (name.startsWith('default-value-')) {\n      const fieldIndex = parseInt(name.split('-').pop() || '0');\n      this.fieldDefaultValueChanged(fieldIndex, event);\n    } else {\n      const [fieldIndex, optionIndex] = name.split('_');\n      if (optionIndex) {\n        this.fieldOptionChange(parseInt(fieldIndex), parseInt(optionIndex), event);\n      } else {\n        this.fieldLabelChange(parseInt(fieldIndex), event);\n      }\n    }\n  }\n\n  @Listen('valueChanged', { target: 'document' })\n  valueChangedHandler(event: CustomEvent<{ value: string; name: string }>) {\n    const { name, value } = event.detail;\n    if (name === 'title' || name === 'description') {\n      this.watchFields = {\n        ...this.watchFields,\n        [name]: value,\n      };\n    }\n  }\n\n  swapFields(event) {\n    const { oldIndex, newIndex } = event;\n    if (oldIndex !== undefined && newIndex !== undefined && oldIndex !== newIndex) {\n      const newArray = [...this.formFields].map(f => {\n        if (f.order === oldIndex) {\n          return {\n            ...f,\n            order: newIndex,\n          };\n        }\n        if (f.order === newIndex) {\n          return {\n            ...f,\n            order: oldIndex,\n          };\n        }\n        return f;\n      });\n      this.formFields = newArray;\n    }\n  }\n\n  fieldToggle(index) {\n    this.formFields = this.formFields.map((f, i) => {\n      if (index == i) {\n        f.isOpen = !f.isOpen;\n      }\n      return f;\n    });\n  }\n  fieldRemove(index) {\n    this.formFields = this.formFields.filter((_, i) => i !== index);\n  }\n\n  fieldRequired(index) {\n    this.formFields = this.formFields.map((field, i) => {\n      if (i === index) {\n        field.required = !field.required;\n      }\n      return field;\n    });\n  }\n  fieldLabelChange(ind, event) {\n    const target = event.detail;\n    let fieldCopy = {} as AdditionalFieldsInternal;\n    this.formFields = this.formFields.map((field, i) => {\n      if (i === ind) {\n        const existingKey = field.key;\n        const indexNumber = existingKey.split('_').pop();\n        const label = target.value;\n        fieldCopy = {\n          ...field,\n          label: label,\n          key: `${field.type}_${label.split(' ').join('-')}_${indexNumber}`,\n        };\n        return fieldCopy;\n      }\n      return field;\n    });\n  }\n  fieldOptionAdd(index) {\n    this.formFields = this.formFields.map((field, i) => {\n      if (i === index) {\n        if (!field.options) {\n          field.options = [];\n        }\n        field.options = [...field.options, ''];\n      }\n      return field;\n    });\n  }\n\n  fieldOptionRemove(fieldIndex, index) {\n    this.formFields = this.formFields.map((field, i) => {\n      if (i === fieldIndex) {\n        if (!field.options) {\n          field.options = [];\n        }\n        field.options = field.options.filter((_, i) => i !== index);\n      }\n      return field;\n    });\n  }\n  fieldOptionChange(fieldIndex, index, event) {\n    this.formFields = this.formFields.map((field, i) => {\n      if (i === fieldIndex) {\n        if (!field.options) {\n          field.options = [];\n        }\n        field.options = field.options.map((o, i) => {\n          if (i === index) {\n            o = event.detail.value;\n          }\n          return o;\n        });\n      }\n      return field;\n    });\n  }\n\n  fieldDefaultValueChanged(index, event) {\n    this.formFields = this.formFields.map((field, i) => {\n      if (i === index) {\n        field.default = event.detail.value;\n      }\n      return field;\n    });\n  }\n\n  @RegisterComponent<NylasBookingFormConfig, NylasSchedulerConfigConnector, Exclude<NylasSchedulerEditor['stores'], undefined>>({\n    name: 'nylas-booking-form-config',\n    stateToProps: new Map([\n      ['schedulerConfig.selectedConfiguration', 'selectedConfiguration'],\n      ['schedulerConfig.selectedLanguage', 'selectedLanguage'],\n    ]),\n    fireRegisterEvent: true,\n  })\n  render() {\n    return (\n      <Host>\n        <div class=\"nylas-booking-form-config\" part=\"nbfc\">\n          <div class=\"header\" part=\"nbfc__header\">\n            <div class=\"header_text\">\n              <h3>{i18next.t('nylasBookingFormConfig.headerTitle')}</h3>\n              <p>{i18next.t('nylasBookingFormConfig.headerSubTitle')}</p>\n            </div>\n            <div class=\"header_action\">\n              <select-dropdown\n                name=\"add-field\"\n                exportparts=\"sd_dropdown: nbfc__add_field, sd_dropdown-button: nbfc__add_field-button, sd_dropdown-content: nbfc__add_field-dropdown-content\"\n                options={DEFAULT_FORM_FIELD_TYPES}\n                withSearch={false}\n                withChevron={false}\n                dropdownButtonText={i18next.t('nylasBookingFormConfig.dropdownButtonText')}\n              >\n                <span slot=\"select-icon\">\n                  <plus-icon width=\"15\" height=\"15\"></plus-icon>\n                </span>\n              </select-dropdown>\n            </div>\n          </div>\n          <div class=\"content\">\n            <div id=\"fields\" class=\"additional_fields\" part=\"nbfc__additional_fields\">\n              {this.formFields.map((field, i) => {\n                return (\n                  <div class={`form-field draggable ${field.readonly && 'fixed'}`} part=\"nbfc__form_field\" key={i}>\n                    <div class=\"form-field_header\" part=\"nbfc__form_field-header\">\n                      <span class=\"dragable\">\n                        <dragable-icon width=\"24\" height=\"25\"></dragable-icon>\n                      </span>\n                      <div class=\"form-field_header_text\">\n                        <h4>{field.label}</h4>\n                        <p>{field.typeLabel}</p>\n                      </div>\n                      <div class=\"form-field_header_actions\">\n                        <span class={`is-required`}>{field.required ? 'Required' : 'Optional'}</span>\n                        {!field.readonly && (\n                          <button\n                            onClick={() => {\n                              const title = this.watchFields.title;\n                              const description = this.watchFields.description;\n                              if (title && title.includes(field.key)) {\n                                field.error = 'This field is used in the event title and cannot be removed.';\n                                this.formFields = [...this.formFields];\n                                setTimeout(() => {\n                                  field.error = '';\n                                  this.formFields = [...this.formFields];\n                                }, 3000);\n                                return;\n                              }\n                              if (description && description.includes(field.key)) {\n                                field.error = 'This field is used in the event description and cannot be removed.';\n                                this.formFields = [...this.formFields];\n                                setTimeout(() => {\n                                  field.error = '';\n                                  this.formFields = [...this.formFields];\n                                }, 3000);\n                                return;\n                              }\n                              this.fieldRemove(i);\n                            }}\n                          >\n                            <close-icon />\n                          </button>\n                        )}\n                        <span\n                          class={`chevron ${field.isOpen ? 'open' : 'closed'}`}\n                          onClick={() => {\n                            this.fieldToggle(i);\n                          }}\n                        >\n                          <chevron-icon width=\"24\" height=\"24\" />\n                        </span>\n                      </div>\n                    </div>\n                    <span\n                      class={{\n                        'error': true,\n                        'fade-out': !field?.error || field.error === '',\n                      }}\n                    >\n                      {field.error}\n                    </span>\n                    <div class={`form-field_content ${!field.isOpen && 'hidden'}`} part=\"nbfc__form_field-content\">\n                      <div class=\"inputs\">\n                        <input-component class={'label-input'} name={`${i}`} key={i} label=\"Label\" required={false} readOnly={field.readonly} defaultValue={field.label}>\n                          <div class=\"required-input\" slot=\"additional-input\">\n                            <input\n                              type=\"checkbox\"\n                              name={`required_${field.order}`}\n                              id={`required_${field.order}`}\n                              onClick={() => {\n                                this.fieldRequired(i);\n                              }}\n                              checked={field.required}\n                              disabled={field.readonly}\n                            />\n\n                            <label htmlFor={`required_${field.order}`} aria-label=\"Required\">\n                              {i18next.t('required')}\n                            </label>\n                          </div>\n                        </input-component>\n                        {!field.readonly && field.type !== 'date' && (\n                          <input-component\n                            class={'default-value'}\n                            name={`default-value-${i}`}\n                            key={i}\n                            label=\"Default value\"\n                            required={false}\n                            readOnly={field.readonly}\n                            defaultValue={field.default}\n                          />\n                        )}\n                        {!field.readonly && field.type === 'date' && (\n                          <nylas-date-component\n                            class={'default-value'}\n                            name={`default-value-${i}`}\n                            key={i}\n                            label=\"Default value\"\n                            required={false}\n                            readOnly={field.readonly}\n                            defaultValue={field.default}\n                          />\n                        )}\n                      </div>\n                      {field.options != undefined && (\n                        <div class=\"options-container\">\n                          <h4>{i18next.t('nylasBookingFormConfig.allOptionsHeader')}</h4>\n                          <div class=\"options\">\n                            {field.options.map((o, j) => {\n                              return (\n                                <div class=\"option\">\n                                  <input-component key={j} name={`${i}_${j}`} label={field.typeLabel + ' option ' + (j + 1)} required={true} defaultValue={o}>\n                                    {j > 1 && (\n                                      <div class=\"required-input\" slot=\"additional-input\">\n                                        <button\n                                          onClick={() => {\n                                            this.fieldOptionRemove(i, j);\n                                          }}\n                                        >\n                                          <close-icon />\n                                        </button>\n                                      </div>\n                                    )}\n                                  </input-component>\n                                </div>\n                              );\n                            })}\n                          </div>\n                          <button\n                            onClick={() => {\n                              this.fieldOptionAdd(i);\n                            }}\n                            part=\"nap__add-time-range\"\n                          >\n                            <add-circle-icon /> {i18next.t('nylasBookingFormConfig.addOption')}\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}