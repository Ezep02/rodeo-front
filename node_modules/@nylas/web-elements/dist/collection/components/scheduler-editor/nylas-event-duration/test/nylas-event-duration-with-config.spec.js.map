{"version":3,"file":"nylas-event-duration-with-config.spec.js","sourceRoot":"","sources":["../../../../../src/components/scheduler-editor/nylas-event-duration/test/nylas-event-duration-with-config.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAC7D,OAAO,EAAE,aAAa,EAAE,MAAM,sDAAsD,CAAC;AACrF,OAAO,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAClC,OAAO,EAAE,cAAc,EAAE,MAAM,wDAAwD,CAAC;AACxF,OAAO,EAAE,qBAAqB,EAAE,MAAM,oBAAoB,CAAC;AAE3D,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACpC,MAAM,MAAM,GAAG;QACb,GAAG,qBAAqB;QACxB,YAAY,EAAE;YACZ,GAAG,qBAAqB,CAAC,YAAY;YACrC,gBAAgB,EAAE,EAAE;SACrB;KACF,CAAC;IACF,IAAI,IAAS,CAAC;IACd,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,IAAI,GAAG,MAAM,WAAW,CAAC;YACvB,UAAU,EAAE,CAAC,aAAa,EAAE,cAAc,EAAE,kBAAkB,CAAC;YAC/D,QAAQ,EAAE,GAAG,EAAE;gBACb,OAAO,4BAAsB,IAAI,EAAC,eAAe,EAAC,qBAAqB,EAAE,MAAM,GAAI,CAAC;YACtF,CAAC;SACF,CAAC,CAAC;QACH,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0FAA0F,EAAE,KAAK,IAAI,EAAE;QACxG,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;QAC3E,MAAM,KAAK,GAAG,aAAa,CAAC,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC9D,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC7B,KAAK,CAAC,KAAK,EAAE,CAAC;QACd,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { NylasEventDuration } from '../nylas-event-duration';\nimport { InputDropdown } from '../../../design-system/input-dropdown/input-dropdown';\nimport { h } from '@stencil/core';\nimport { SelectDropdown } from '../../../design-system/select-dropdown/select-dropdown';\nimport { selectedConfiguration } from '@/utils/test-utils';\n\ndescribe('nylas-event-duration', () => {\n  const config = {\n    ...selectedConfiguration,\n    availability: {\n      ...selectedConfiguration.availability,\n      duration_minutes: 60,\n    },\n  };\n  let page: any;\n  beforeEach(async () => {\n    page = await newSpecPage({\n      components: [InputDropdown, SelectDropdown, NylasEventDuration],\n      template: () => {\n        return <nylas-event-duration name=\"eventDuration\" selectedConfiguration={config} />;\n      },\n    });\n    await page.waitForChanges();\n  });\n\n  afterEach(() => {\n    page?.root?.remove();\n  });\n\n  it('renders', async () => {\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders hour duration input options with 1 hour increments when hours option is selected', async () => {\n    const inputDropdown = page.root.shadowRoot.querySelector('input-dropdown');\n    const input = inputDropdown.shadowRoot.querySelector('input');\n    expect(input).not.toBeNull();\n    input.click();\n    await page.waitForChanges();\n    expect(page.root).toMatchSnapshot();\n  });\n});\n"]}