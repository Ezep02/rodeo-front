import { newSpecPage } from "@stencil/core/testing";
import { NylasConfirmationEmail } from "../nylas-confirmation-email";
import { InputImageUrl } from "../../../design-system/input-image-url/input-image-url";
import { InputComponent } from "../../../design-system/input-component/input-component";
import { h } from "@stencil/core";
describe('nylas-confirmation-email', () => {
    let page;
    beforeEach(async () => {
        page = await newSpecPage({
            components: [InputImageUrl, InputComponent, NylasConfirmationEmail],
            template: () => {
                return h("nylas-confirmation-email", { name: "confirmationEmail", isOpen: true });
            },
        });
        await page.waitForChanges();
    });
    it('renders', async () => {
        expect(page.root).toMatchSnapshot();
    });
    it('should show error message when invalid logo url is entered', async () => {
        const inputImageUrl = page.root.shadowRoot.querySelector('input-image-url');
        const inputEvent = new CustomEvent('nylasFormInputChanged', {
            detail: {
                name: 'confirmation-email-logo',
                value: 'invalid-url',
            },
        });
        inputImageUrl.dispatchEvent(inputEvent);
        await page.waitForChanges();
        expect(page.root).toMatchSnapshot();
    });
});
//# sourceMappingURL=nylas-confirmation-email.spec.js.map
