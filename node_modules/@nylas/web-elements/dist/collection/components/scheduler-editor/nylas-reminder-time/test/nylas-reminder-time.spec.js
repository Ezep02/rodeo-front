import { newSpecPage } from "@stencil/core/testing";
import { NylasReminderTime } from "../nylas-reminder-time";
import { SelectDropdown } from "../../../design-system/select-dropdown/select-dropdown";
import { h } from "@stencil/core";
import { TimePeriodSelector } from "../../../design-system/time-period-selector/time-period-selector";
import { InputDropdown } from "../../../design-system/input-dropdown/input-dropdown";
describe('nylas-reminder-time', () => {
    let page;
    beforeEach(async () => {
        page = await newSpecPage({
            components: [TimePeriodSelector, InputDropdown, SelectDropdown, NylasReminderTime],
            template: () => {
                return h("nylas-reminder-time", { eventReminderTimeMinutes: 1320 });
            },
        });
        await page.waitForChanges();
    });
    afterEach(() => {
        page?.root?.remove();
    });
    it('renders', async () => {
        expect(page.root).toMatchSnapshot();
    });
    it('renders hour duration input options with 1 hour increments with 22 hours', async () => {
        const reminderTimeInputDropdown = page.root.shadowRoot.querySelector('input-dropdown#time-number');
        const reminderTimeInput = reminderTimeInputDropdown.shadowRoot.querySelector('input');
        expect(reminderTimeInput.value).toBe('22');
        const reminderPeriodButton = page.root.shadowRoot.querySelector('time-period-selector select-dropdown#time-period').shadowRoot.querySelector('button');
        expect(reminderPeriodButton.textContent).toBe('hours');
    });
});
//# sourceMappingURL=nylas-reminder-time.spec.js.map
