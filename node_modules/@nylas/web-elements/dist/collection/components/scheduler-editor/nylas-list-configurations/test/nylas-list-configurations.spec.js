import { newSpecPage } from "@stencil/core/testing";
import { h } from "@stencil/core";
import { NylasListConfigurations } from "../nylas-list-configurations";
describe('nylas-list-configurations', () => {
    let page;
    beforeEach(async () => {
        page = await newSpecPage({
            components: [NylasListConfigurations],
            template: () => {
                return (h("nylas-list-configurations", { configurations: [
                        {
                            id: 'e05bbe74-386c-49c1-aaa4-826e9bbe7a8e',
                            version: '1.0.0',
                            participants: [
                                {
                                    email: 'john@email.com',
                                },
                            ],
                            scheduler: {
                                available_days_in_future: 7,
                                min_cancellation_notice: 60,
                                min_booking_notice: 60,
                            },
                            availability: {
                                duration_minutes: 30,
                            },
                            event_booking: {
                                booking_type: 'booking',
                                title: 'Interview meeting',
                            },
                            slug: 'interview-meeting',
                            appearance: {
                                company_logo_url: 'https://www.example.com/logo1.png',
                                color: '#000000',
                                submit_button_label: 'Submit',
                                thank_you_message: 'Thank you for booking an interview meeting with us. We look forward to meeting you!',
                            },
                            name: 'Interview meeting',
                        },
                        {
                            id: '6ee3be0c-c14b-4ca4-8546-eecd4a538592',
                            version: '1.0.0',
                            participants: [
                                {
                                    email: 'john@email.com',
                                },
                            ],
                            scheduler: {
                                available_days_in_future: 7,
                                min_cancellation_notice: 60,
                                min_booking_notice: 60,
                            },
                            availability: {
                                duration_minutes: 15,
                            },
                            event_booking: {
                                booking_type: 'booking',
                                title: 'Coffee meeting',
                            },
                            slug: 'coffee-meeting',
                            appearance: {
                                company_logo_url: 'https://www.example.com/logo2.png',
                                color: '#FFFFFF',
                                submit_button_label: 'Submit',
                                thank_you_message: 'Coffee!',
                            },
                            name: 'Coffee',
                        },
                    ] }));
            },
        });
        await page.waitForChanges();
    });
    it('renders', async () => {
        expect(page.root).toMatchSnapshot();
    });
    it('should open modal when delete button is clicked', async () => {
        const event = new CustomEvent('nylasFormDropdownChanged', {
            detail: {
                value: 'delete-0',
            },
        });
        page.rootInstance.handleNylasFormDropdownChanged(event);
        await page.waitForChanges();
        const deleteModal = page.root.shadowRoot.querySelector('.card-modal');
        expect(deleteModal).not.toBeNull();
        expect(page.root).toMatchSnapshot();
    });
});
//# sourceMappingURL=nylas-list-configurations.spec.js.map
