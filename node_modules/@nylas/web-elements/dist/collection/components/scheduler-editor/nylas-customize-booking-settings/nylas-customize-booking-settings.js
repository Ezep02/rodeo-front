var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
import { RegisterComponent } from "../../../common/register-component";
import { debug } from "../../../utils/utils";
import { Host, h } from "@stencil/core";
import i18next from "../../../utils/i18n";
export class NylasCustomizeBookingSettings {
    constructor() {
        this.selectedConfiguration = undefined;
        this.defaultHideAdditionalGuests = this.selectedConfiguration?.scheduler?.hide_additional_guests ?? false;
        this.defaultHideCancellationOptions = this.selectedConfiguration?.scheduler?.hide_cancellation_options ?? false;
        this.defaultHideReschedulingOptions = this.selectedConfiguration?.scheduler?.hide_rescheduling_options ?? false;
        this.name = 'customize-booking-settings';
        this.selectedLanguage = undefined;
        this.allowGuestsToInvite = undefined;
        this.hideCancellationOptions = undefined;
        this.hideReschedulingOptions = undefined;
    }
    elementNameChangedHandler(newValue) {
        debug('nylas-customize-booking-settings', 'elementNameChangedHandler', newValue);
        this.host.setAttribute('name', newValue);
    }
    selectedConfigurationChangedHandler(newValue) {
        debug('nylas-customize-booking-settings', 'selectedConfigurationChangedHandler', newValue);
        this.allowGuestsToInvite = !newValue?.scheduler?.hide_additional_guests;
        this.hideCancellationOptions = newValue?.scheduler?.hide_cancellation_options ?? false;
        this.hideReschedulingOptions = newValue?.scheduler?.hide_rescheduling_options ?? false;
    }
    selectedLanguageChangedHandler(newVal, oldVal) {
        if (newVal === oldVal)
            return;
        i18next.changeLanguage(newVal);
    }
    connectedCallback() {
        debug('nylas-customize-booking-settings', 'connectedCallback');
    }
    disconnectedCallback() {
        debug('nylas-customize-booking-settings', 'disconnectedCallback');
    }
    componentWillLoad() {
        debug('nylas-customize-booking-settings', 'componentWillLoad');
        this.host.setAttribute('name', this.name);
    }
    componentDidLoad() {
        debug('nylas-customize-booking-settings', 'componentDidLoad');
        if (this.selectedConfiguration) {
            this.selectedConfigurationChangedHandler(this.selectedConfiguration);
        }
        else {
            this.allowGuestsToInvite = !this.defaultHideAdditionalGuests;
            this.hideCancellationOptions = this.defaultHideCancellationOptions;
            this.hideReschedulingOptions = this.defaultHideReschedulingOptions;
        }
    }
    componentWillUpdate() {
        debug('nylas-customize-booking-settings', 'componentWillUpdate');
    }
    componentDidUpdate() {
        debug('nylas-customize-booking-settings', 'componentDidUpdate');
    }
    componentWillRender() {
        debug('nylas-customize-booking-settings', 'componentWillRender');
    }
    componentDidRender() {
        debug('nylas-customize-booking-settings', 'componentDidRender');
    }
    checkboxToggledHandler(event) {
        const { name, checked } = event.detail;
        switch (name) {
            case 'hide_additional_guests':
                this.allowGuestsToInvite = checked;
                break;
            case 'hide_cancellation_options':
                this.hideCancellationOptions = checked;
                break;
            case 'hide_rescheduling_options':
                this.hideReschedulingOptions = checked;
                break;
        }
        this.valueChanged.emit({
            value: JSON.stringify({
                additionalGuestsHidden: !this.allowGuestsToInvite,
                hideCancellationOptions: this.hideCancellationOptions,
                hideReschedulingOptions: this.hideReschedulingOptions,
            }),
            name: this.name,
        });
        this.internals.setFormValue(JSON.stringify({
            additionalGuestsHidden: !this.allowGuestsToInvite,
            hideCancellationOptions: this.hideCancellationOptions,
            hideReschedulingOptions: this.hideReschedulingOptions,
        }), this.name);
    }
    render() {
        const showComponent = typeof this.hideCancellationOptions === 'boolean' && typeof this.hideReschedulingOptions === 'boolean' && typeof this.allowGuestsToInvite === 'boolean';
        return (h(Host, { key: '12968fb39e512320aea269d04586f2943f9f4ce7' }, showComponent && (h("div", { class: "nylas-customize-booking-settings", part: "ncbs" }, h("div", { class: "header", part: "ncbs__header" }, h("h3", null, i18next.t('nylasCustomizeBookingSettings.headerTitle')), h("p", null, i18next.t('nylasCustomizeBookingSettings.headerSubTitle'))), h("div", { class: "nylas-customize-booking-settings__settings", part: "ncbs__settings" }, h("div", { class: "nylas-customize-booking-settings__settings-div", part: "ncbs__settings-div , ncbs__additional_guests" }, h("checkbox-component", { name: "hide_additional_guests", label: i18next.t('nylasCustomizeBookingSettings.allowGuests.label'), checked: this.allowGuestsToInvite }, h("span", { slot: "label", class: "label" }, h("p", { class: "label-contents" }, i18next.t('nylasCustomizeBookingSettings.allowGuests.label', { interpolation: { escapeValue: false, escape: s => `${s}`, useRawValueToEscape: true } }))))), h("div", { class: "nylas-customize-booking-settings__settings-div", part: "ncbs__settings-div , ncbs__rescheduling_options" }, h("checkbox-component", { name: "hide_rescheduling_options", label: "Hide 'Reschedule' option on booking page and emails.", checked: this.hideReschedulingOptions }, h("span", { slot: "label", class: "label" }, h("p", { class: "label-contents" }, i18next.t('nylasCustomizeBookingSettings.hideReschedule.label')), h("tooltip-component", { id: "reschedule" }, h("info-icon", { slot: "tooltip-icon" }), h("span", { slot: "tooltip-content" }, i18next.t('nylasCustomizeBookingSettings.hideReschedule.tooltip.desc')))))), h("div", { class: "nylas-customize-booking-settings__settings-div", part: "ncbs__settings-div , ncbs__cancellation_options" }, h("checkbox-component", { name: "hide_cancellation_options", label: "Hide 'Cancel' option on booking page and emails.", checked: this.hideCancellationOptions }, h("span", { slot: "label", class: "label" }, h("p", { class: "label-contents" }, i18next.t('nylasCustomizeBookingSettings.hideCancel.label')), h("tooltip-component", { id: "cancel" }, h("info-icon", { slot: "tooltip-icon" }), h("span", { slot: "tooltip-content" }, i18next.t('nylasCustomizeBookingSettings.hideCancel.tooltip.desc')))))))))));
    }
    static get is() { return "nylas-customize-booking-settings"; }
    static get encapsulation() { return "shadow"; }
    static get formAssociated() { return true; }
    static get originalStyleUrls() {
        return {
            "$": ["nylas-customize-booking-settings.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["nylas-customize-booking-settings.css"]
        };
    }
    static get properties() {
        return {
            "selectedConfiguration": {
                "type": "unknown",
                "mutable": false,
                "complexType": {
                    "original": "Configuration",
                    "resolved": "Configuration | undefined",
                    "references": {
                        "Configuration": {
                            "location": "import",
                            "path": "@nylas/core",
                            "id": "../nylas-js-core/dist/index.d.ts::Configuration"
                        }
                    }
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [{
                            "name": "standalone",
                            "text": "The selected config"
                        }],
                    "text": ""
                }
            },
            "defaultHideAdditionalGuests": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [{
                            "name": "standalone",
                            "text": "The default additional guests hidden setting as set in the configuration."
                        }],
                    "text": ""
                },
                "attribute": "default-hide-additional-guests",
                "reflect": false,
                "defaultValue": "this.selectedConfiguration?.scheduler?.hide_additional_guests ?? false"
            },
            "defaultHideCancellationOptions": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [{
                            "name": "standalone",
                            "text": "The default hide cancellation options setting as set in the configuration."
                        }],
                    "text": ""
                },
                "attribute": "default-hide-cancellation-options",
                "reflect": false,
                "defaultValue": "this.selectedConfiguration?.scheduler?.hide_cancellation_options ?? false"
            },
            "defaultHideReschedulingOptions": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [{
                            "name": "standalone",
                            "text": "The default hide rescheduling options setting as set in the configuration."
                        }],
                    "text": ""
                },
                "attribute": "default-hide-rescheduling-options",
                "reflect": false,
                "defaultValue": "this.selectedConfiguration?.scheduler?.hide_rescheduling_options ?? false"
            },
            "name": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [{
                            "name": "standalone",
                            "text": "The name of the calendar picker."
                        }],
                    "text": ""
                },
                "attribute": "name",
                "reflect": false,
                "defaultValue": "'customize-booking-settings'"
            },
            "selectedLanguage": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "LANGUAGE_CODE",
                    "resolved": "LANGUAGE_CODE.de | LANGUAGE_CODE.en | LANGUAGE_CODE.es | LANGUAGE_CODE.fr | LANGUAGE_CODE.ja | LANGUAGE_CODE.nl | LANGUAGE_CODE.sv | LANGUAGE_CODE.zh | undefined",
                    "references": {
                        "LANGUAGE_CODE": {
                            "location": "import",
                            "path": "@/common/constants",
                            "id": "src/common/constants.ts::LANGUAGE_CODE"
                        }
                    }
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "The selected language."
                },
                "attribute": "selected-language",
                "reflect": false
            }
        };
    }
    static get states() {
        return {
            "allowGuestsToInvite": {},
            "hideCancellationOptions": {},
            "hideReschedulingOptions": {}
        };
    }
    static get events() {
        return [{
                "method": "valueChanged",
                "name": "valueChanged",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "This event is fired when the selected booking calendar changes."
                },
                "complexType": {
                    "original": "{\n    value: string;\n    name: string;\n    valueChanged?: (event: CustomEvent<{ value: string; name: string }>) => void;\n  }",
                    "resolved": "{ value: string; name: string; valueChanged?: ((event: CustomEvent<{ value: string; name: string; }>) => void) | undefined; }",
                    "references": {
                        "CustomEvent": {
                            "location": "global",
                            "id": "global::CustomEvent"
                        }
                    }
                }
            }];
    }
    static get elementRef() { return "host"; }
    static get watchers() {
        return [{
                "propName": "name",
                "methodName": "elementNameChangedHandler"
            }, {
                "propName": "selectedConfiguration",
                "methodName": "selectedConfigurationChangedHandler"
            }, {
                "propName": "selectedLanguage",
                "methodName": "selectedLanguageChangedHandler"
            }];
    }
    static get listeners() {
        return [{
                "name": "nylasFormCheckboxToggled",
                "method": "checkboxToggledHandler",
                "target": undefined,
                "capture": false,
                "passive": false
            }];
    }
    static get attachInternalsMemberName() { return "internals"; }
}
__decorate([
    RegisterComponent({
        name: 'nylas-customize-booking-settings',
        stateToProps: new Map([
            ['schedulerConfig.selectedConfiguration', 'selectedConfiguration'],
            ['schedulerConfig.selectedLanguage', 'selectedLanguage'],
        ]),
        fireRegisterEvent: true,
    }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], NylasCustomizeBookingSettings.prototype, "render", null);
//# sourceMappingURL=nylas-customize-booking-settings.js.map
