{"file":"nylas-reminder-emails.entry.cjs.js","mappings":";;;;;;;;AAAA,MAAM,sBAAsB,GAAG,gvTAAgvT;;;;;;;;;;;;;;;;MCgClwT,mBAAmB;;;;;;;;;;;;;oBAcP,oBAAoB;;yBAaqB,IAAI,CAAC,qBAAqB,EAAE,aAAa,EAAE,SAAS,IAAI,IAAI,CAAC,cAAc,IAAI,EAAE;8BAC5F,EAAE;4BAChB,IAAI,CAAC,qBAAqB,EAAE,YAAY,IAAI,EAAE;;IAYrF,iBAAiB;QACfA,WAAK,CAAC,uBAAuB,EAAE,mBAAmB,CAAC,CAAC;KACrD;IAED,oBAAoB;QAClBA,WAAK,CAAC,uBAAuB,EAAE,sBAAsB,CAAC,CAAC;KACxD;IAED,iBAAiB;QACfA,WAAK,CAAC,uBAAuB,EAAE,mBAAmB,CAAC,CAAC;QAEpD,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KAC3C;IAED,gBAAgB;QACdA,WAAK,CAAC,uBAAuB,EAAE,kBAAkB,CAAC,CAAC;QACnD,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC9B,IAAI,CAAC,mCAAmC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;SACtE;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,IAAI,EAAE,CAAC;YAC3C,IAAI,CAAC,wBAAwB,EAAE,CAAC;SACjC;KACF;IAED,mBAAmB;QACjBA,WAAK,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;KACvD;IAED,kBAAkB;QAChBA,WAAK,CAAC,uBAAuB,EAAE,oBAAoB,CAAC,CAAC;KACtD;IAED,mBAAmB;QACjBA,WAAK,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;KACvD;IAED,kBAAkB;QAChBA,WAAK,CAAC,uBAAuB,EAAE,oBAAoB,CAAC,CAAC;KACtD;IAQD,yBAAyB,CAAC,QAAgB;QACxCA,WAAK,CAAC,uBAAuB,EAAE,2BAA2B,EAAE,QAAQ,CAAC,CAAC;QACtE,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;KAC1C;IAGD,mCAAmC,CAAC,MAAqB;QACvDA,WAAK,CAAC,uBAAuB,EAAE,qCAAqC,EAAE,MAAM,CAAC,CAAC;QAC9E,IAAI,CAAC,SAAS,GAAG,MAAM,EAAE,aAAa,EAAE,SAAS,IAAI,EAAE,CAAC;QACxD,IAAI,CAAC,YAAY,GAAG,MAAM,EAAE,YAAY,IAAI,EAAE,CAAC;QAC/C,IAAI,CAAC,wBAAwB,EAAE,CAAC;KACjC;IAGD,8BAA8B,CAAC,MAAqB,EAAE,MAAqB;QACzE,IAAI,MAAM,KAAK,MAAM;YAAE,OAAO;QAC9BC,cAAO,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;KAChC;IAGD,kBAAkB,CAAC,KAAkB;QACnCD,WAAK,CAAC,uBAAuB,EAAE,oBAAoB,EAAE,KAAK,CAAC,CAAC;QAC5D,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC;QAErC,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,EAAE;YAErC,MAAM,CAAC,CAAC,EAAE,aAAa,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC/C,MAAM,gBAAgB,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YAC7C,gBAAgB,CAAC,aAAa,CAAC,CAAC,oBAAoB,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;YACvE,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,gBAAgB,CAAC,CAAC;YACvC,IAAI,CAAC,wBAAwB,EAAE,CAAC;SACjC;KACF;IAGD,8BAA8B,CAAC,KAAkB;QAC/CA,WAAK,CAAC,uBAAuB,EAAE,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACxE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE;YAClC,OAAO;SACR;QAED,MAAM,CAAC,CAAC,EAAE,aAAa,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC/C,MAAM,gBAAgB,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7C,gBAAgB,CAAC,aAAa,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;QAClD,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,gBAAgB,CAAC,CAAC;QACvC,IAAI,CAAC,wBAAwB,EAAE,CAAC;KACjC;IAGD,2BAA2B,CAAC,KAAkB;QAC5CA,WAAK,CAAC,uBAAuB,EAAE,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACrE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,EAAE;YACzC,OAAO;SACR;QAED,MAAM,CAAC,CAAC,EAAE,aAAa,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC/C,MAAM,gBAAgB,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7C,gBAAgB,CAAC,aAAa,CAAC,CAAC,aAAa,GAAG,KAAK,CAAC;QACtD,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,gBAAgB,CAAC,CAAC;QACvC,IAAI,CAAC,wBAAwB,EAAE,CAAC;KACjC;IAED,WAAW;QACTA,WAAK,CAAC,uBAAuB,EAAE,aAAa,CAAC,CAAC;QAC9C,IAAI,CAAC,SAAS,GAAG;YACf,GAAG,IAAI,CAAC,SAAS;YACjB;gBACE,IAAI,EAAE,OAAO;gBACb,oBAAoB,EAAE,EAAE;gBACxB,OAAO,EAAE,IAAI;gBACb,SAAS,EAAE,KAAK;aACjB;SACF,CAAC;QACF,IAAI,CAAC,wBAAwB,EAAE,CAAC;KACjC;IAED,cAAc,CAAC,KAAa;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QACnF,IAAI,CAAC,wBAAwB,EAAE,CAAC;KACjC;IAED,IAAI,oBAAoB;QACtB,OAAO,IAAI,CAAC,SAAS,KAAK,SAAS,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,KAAK,UAAU,CAAC;KAC1F;IAED,wBAAwB;QACtBA,WAAK,CAAC,uBAAuB,EAAE,0BAA0B,CAAC,CAAC;QAC3D,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ;YAChD,MAAM,GAAG,GAAG,EAAE,GAAG,QAAQ,EAAE,CAAC;YAC5B,GAAG,EAAE,OAAO,IAAI,OAAO,GAAG,CAAC,OAAO,CAAC;YACnC,OAAO,GAAG,CAAC;SACZ,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACrB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;YACrC,IAAI,EAAE,oBAAoB;SAC3B,CAAC,CAAC;QACH,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,oBAAoB,CAAC,CAAC;KAChH;IAED,kBAAkB,CAAC,YAAoB;QACrC,QAAQ,IAAI;YACV,KAAK,YAAY,GAAG,EAAE,GAAG,EAAE;gBACzB,OAAO,GAAG,YAAY,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC;YAC1C,KAAK,YAAY,KAAK,EAAE,GAAG,EAAE;gBAC3B,OAAO,OAAO,CAAC;YACjB,KAAK,YAAY,GAAG,EAAE,IAAI,YAAY,KAAK,EAAE;gBAC3C,OAAO,GAAG,YAAY,GAAG,EAAE,QAAQ,CAAC;YACtC;gBACE,OAAO,GAAG,YAAY,UAAU,YAAY,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC;SAClE;KACF;IAsBD,MAAM;QACJ,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC;QACxE,MAAM,gBAAgB,GAAG;YACvB;gBACE,KAAK,EAAEC,cAAO,CAAC,CAAC,CAAC,sCAAsC,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;gBAC5E,KAAK,EAAE,KAAK;aACb;YACD;gBACE,KAAK,EAAEA,cAAO,CAAC,CAAC,CAAC,sCAAsC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;gBAC9E,KAAK,EAAE,OAAO;aACf;YACD;gBACE,KAAK,EAAEA,cAAO,CAAC,CAAC,CAAC,sCAAsC,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC;gBAC7E,KAAK,EAAE,MAAM;aACd;SACF,CAAC;QAEF,QACEC,QAACC,UAAI,uDACHD,kEAAK,KAAK,EAAC,iBAAiB,IACzB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAEE,OAAK;YAClC,OAAO,QAAQ,CAAC,IAAI,KAAK,SAAS,IAChCF,iBAAK,KAAK,EAAC,sBAAsB,EAAC,IAAI,EAAC,KAAK,IAC1CA,iBAAK,KAAK,EAAC,QAAQ,EAAC,IAAI,EAAC,aAAa,IACpCA,qBACEA,oBAAKD,cAAO,CAAC,CAAC,CAAC,iCAAiC,EAAE,EAAE,aAAa,EAAE,aAAa,GAAG,SAAS,aAAa,GAAG,GAAG,EAAE,EAAE,CAAC,CAAM,EAC1HC,mBAAID,cAAO,CAAC,CAAC,CAAC,oCAAoC,CAAC,CAAK,CACpD,EACL,CAAC,QAAQ,CAAC,OAAO,IAChBC,8BACE,OAAO,EAAE,OAAO,EAChB,GAAG,EAAE,QAAQE,OAAK,GAAG,EACrB,YAAY,EAAE,KAAK;oBACjB,KAAK,CAAC,cAAc,EAAE,CAAC;oBACvB,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;oBACxB,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;iBACtC,IAEDF,uBAAW,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,GAAa,EAC7CD,cAAO,CAAC,CAAC,CAAC,oCAAoC,CAAC,CAC/B,KAEnBC,iBAAK,KAAK,EAAC,4BAA4B,IACrCA,8BACE,OAAO,EAAE,OAAO,EAChB,KAAK,EAAC,YAAY,EAClB,OAAO,EAAC,iBAAiB,EACzB,GAAG,EAAE,WAAWE,OAAK,GAAG,EACxB,YAAY,EAAE,KAAK;oBACjB,KAAK,CAAC,cAAc,EAAE,CAAC;oBACvB,IAAI,CAAC,cAAc,CAACA,OAAK,CAAC,CAAC;iBAC5B,IAEDF,wBAAY,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,GAAc,CAC/B,EACnBA,kBACE,KAAK,EAAE,WAAW,QAAQ,CAAC,OAAO,GAAG,MAAM,GAAG,QAAQ,EAAE,EACxD,OAAO,EAAE;oBACP,QAAQ,CAAC,OAAO,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC;oBACrC,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;iBACtC,IAEDA,0BAAc,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,GAAG,CAClC,CACH,CACP,CACG,EAEL,QAAQ,CAAC,OAAO,IACfA,iBAAK,KAAK,EAAC,4BAA4B,EAAC,IAAI,EAAC,WAAW,IACtDA,iBAAK,KAAK,EAAC,+BAA+B,IACxCA,iBAAK,KAAK,EAAC,2BAA2B,IACpCA,uBAAQD,cAAO,CAAC,CAAC,CAAC,2CAA2C,CAAC,CAAS,EACvEC,6BACE,IAAI,EAAE,aAAaE,OAAK,EAAE,EAC1B,OAAO,EAAE,gBAAgB,EACzB,qBAAqB,EAAE,gBAAgB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,QAAQ,CAAC,SAAS,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAC,EACxG,UAAU,EAAE,KAAK,GACjB,CACE,EACNF,iBAAK,KAAK,EAAC,2BAA2B,IACpCA,uBACGD,cAAO,CAAC,CAAC,CAAC,4CAA4C,CAAC,EACxDC,kBAAM,KAAK,EAAC,YAAY,IACtBA,mCACEA,uBAAW,IAAI,EAAC,cAAc,GAAG,EACjCA,kBAAM,IAAI,EAAC,iBAAiB,IAAED,cAAO,CAAC,CAAC,CAAC,mDAAmD,CAAC,CAAQ,CAClF,CACf,CACD,EACRC,iCACE,IAAI,EAAE,iBAAiBE,OAAK,EAAE,EAC9B,wBAAwB,EAAE,QAAQ,CAAC,oBAAoB,EACvD,WAAW,EAAC,kMAAkM,GAC9M,CACE,EACNF,iBAAK,KAAK,EAAC,6BAA6B,IACtCA,uBAAQD,cAAO,CAAC,CAAC,CAAC,wCAAwC,CAAC,CAAS,EACpEC,6BACE,IAAI,EAAE,oBAAoBE,OAAK,EAAE,EACjC,SAAS,EAAE,EAAE,EACb,WAAW,EAAEH,cAAO,CAAC,CAAC,CAAC,8CAA8C,EAAE,EAAE,aAAa,EAAE,aAAa,GAAG,SAAS,aAAa,EAAE,GAAG,EAAE,EAAE,CAAC,EACxI,YAAY,EAAE,QAAQ,EAAE,aAAa,IAAI,EAAE,GAC3C,CACE,CACF,CACF,KAENC,iBAAK,KAAK,EAAC,+BAA+B,EAAC,IAAI,EAAC,cAAc,IAC5DA,mBACEA,kBAAM,KAAK,EAAC,cAAc,IACxBA,sCAA+C,CAC1C,EACN,gBAAgB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,QAAQ,CAAC,SAAS,CAAC,EAAE,KAAK,CAChE,EACJA,mBACEA,kBAAM,KAAK,EAAC,cAAc,IACxBA,2BAAyB,CACpB,EACN,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,sBACrD,CACA,CACP,CACG,IACJ,IAAI,CAAC;SACV,CAAC,CACE,EAENA,+EACE,KAAK,EAAC,iBAAiB,EACvB,OAAO,EAAE,OAAO,EAChB,YAAY,EAAE,KAAK;gBACjB,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB,IAEDA,wEAAW,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,GAAa,EAC7CD,cAAO,CAAC,CAAC,CAAC,2CAA2C,CAAC,CACtC,CACd,EACP;KACH;;;;;;;;;AA7ID;IApBCI,mCAAiB,CAAyG;QACzH,IAAI,EAAE,uBAAuB;QAC7B,YAAY,EAAE,IAAI,GAAG,CAAC;YACpB,CAAC,uCAAuC,EAAE,uBAAuB,CAAC;YAClE,CAAC,kCAAkC,EAAE,kBAAkB,CAAC;SACzD,CAAC;QACF,YAAY,EAAE;YACZ,YAAY,EAAE,OACZ,KAAiI,EACjI,8BAA6D;gBAE7D,MAAM,EAAE,YAAY,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC;gBAEtC,IAAI,YAAY,EAAE;oBAChB,YAAY,CAAC,KAAK,CAAC,CAAC;iBACrB;aACF;SACF;QACD,iBAAiB,EAAE,IAAI;KACxB,CAAC;;;;iDA8ID;;;;;","names":["debug","i18next","h","Host","index","RegisterComponent"],"sources":["src/components/scheduler-editor/nylas-reminder-emails/nylas-reminder-emails.scss?tag=nylas-reminder-emails&encapsulation=shadow","src/components/scheduler-editor/nylas-reminder-emails/nylas-reminder-emails.tsx"],"sourcesContent":["@import '../../../common/styles/variables.scss';\n\n:host {\n  display: block;\n  @include default-css-variables;\n  width: inherit;\n}\n\n.cards-container {\n  margin-bottom: 4rem;\n\n  .nylas-reminder-email {\n    width: inherit;\n    display: flex;\n    flex-direction: column;\n    margin: 1rem;\n    border-radius: var(--nylas-border-radius-2x);\n    border: 1px solid var(--nylas-base-200);\n    text-align: left;\n\n    .reminder-open-close-toggle {\n      display: flex;\n      gap: 16px;\n\n      .chevron {\n        display: flex;\n        align-self: center;\n        cursor: pointer;\n\n        &:hover,\n        &:active {\n          color: var(--nylas-primary);\n        }\n\n        &.open {\n          transform: rotate(90deg);\n        }\n\n        &.closed {\n          transform: rotate(270deg);\n        }\n\n        &.disabled {\n          cursor: not-allowed;\n          color: var(--nylas-base-300);\n\n          &:hover {\n            color: var(--nylas-base-300);\n          }\n        }\n      }\n    }\n\n    .header {\n      padding: 1rem;\n      display: grid;\n      grid-template-columns: 1fr auto;\n      border-bottom: 1px solid var(--nylas-base-200);\n\n      h3 {\n        border-radius: var(--nylas-border-radius-2x);\n        margin: 0;\n        font-size: 16px;\n        font-weight: 600;\n        line-height: 20px;\n        color: var(--nylas-base-900);\n        text-align: left;\n      }\n\n      p {\n        margin: 0.25rem 0 0 0;\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 20px;\n        color: var(--nylas-base-600);\n        text-align: left;\n      }\n\n      .confirmation-email-toggle {\n        display: flex;\n        gap: 24px;\n        align-items: center;\n\n        .chevron {\n          display: flex;\n          align-self: center;\n          cursor: pointer;\n\n          &:hover,\n          &:active {\n            color: var(--nylas-primary);\n          }\n\n          &.open {\n            transform: rotate(90deg);\n          }\n\n          &.closed {\n            transform: rotate(270deg);\n          }\n\n          &.disabled {\n            cursor: not-allowed;\n            color: var(--nylas-base-300);\n\n            &:hover {\n              color: var(--nylas-base-300);\n            }\n          }\n        }\n      }\n    }\n\n    .nylas-reminder-email__body {\n      display: grid;\n      grid-template-columns: 1fr auto;\n      background-color: var(--nylas-base-25);\n      border-radius: var(--nylas-border-radius-2x);\n\n      @media #{$mobile} {\n        grid-template-columns: 1fr;\n      }\n\n      .nylas-reminder-email__section {\n        padding: 1rem;\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n        color: var(--nylas-base-800);\n\n        @media #{$mobile} {\n          border: none;\n        }\n\n        .nylas-reminder-email__block {\n          display: flex;\n          flex-direction: column;\n          gap: 0.5rem;\n          border-top: 1px solid var(--nylas-base-200);\n          padding-top: 1rem;\n          margin-top: 0.5rem;\n        }\n\n        .nylas-reminder-email__row {\n          display: grid;\n          grid-template-columns: 1fr auto;\n          align-items: center;\n          gap: 1rem;\n\n          &.full-width-col {\n            grid-template-columns: 1fr;\n          }\n\n          label {\n            display: flex;\n            align-items: center;\n\n            span.required {\n              color: var(--nylas-error, #cc4841);\n            }\n\n            span.label-icon {\n              margin-left: 4px;\n\n              tooltip-component {\n                display: flex;\n              }\n            }\n          }\n\n          p {\n            margin: 0.25rem 0 0 0;\n            font-size: 16px;\n            font-weight: 500;\n            line-height: 24px;\n            color: var(--nylas-base-900);\n          }\n\n          .company-logo-container {\n            display: flex;\n            gap: 32px;\n            width: 100%;\n\n            .input-container {\n              display: flex;\n              flex-direction: column;\n              flex: 1;\n            }\n\n            .company-logo {\n              display: flex;\n              justify-content: center;\n              align-items: center;\n              width: 200px;\n              height: 100px;\n              border: var(--nylas-base-200) solid 1px;\n              border-radius: var(--nylas-border-radius-2x);\n              overflow: hidden;\n              padding: 10px;\n            }\n\n            .company-logo img {\n              max-height: 100%;\n              max-width: 100%;\n              object-fit: contain;\n              object-position: center;\n            }\n          }\n\n          span.selected-value {\n            font-weight: 500;\n          }\n        }\n\n        .subsection {\n          display: flex;\n          flex-direction: column;\n          gap: 1rem;\n\n          h3 {\n            margin: 0;\n            font-size: 16px;\n            font-weight: 600;\n            line-height: 20px;\n            color: var(--nylas-base-900);\n            text-align: left;\n          }\n\n          .input-container {\n            display: flex;\n            flex-direction: column;\n            gap: 0.25rem;\n\n            textarea {\n              padding: 12px 16px;\n              border-width: 1;\n              resize: vertical;\n              border-radius: 8px;\n              font-family: var(--nylas-font-family);\n              font-size: 16px;\n              line-height: 24px;\n              border: 1px solid var(--nylas-base-200);\n            }\n          }\n        }\n      }\n\n      .nylas-reminder-email__preview {\n        width: 208px;\n        background: var(--nylas-base-25);\n        border-bottom-right-radius: var(--nylas-border-radius-2x);\n\n        @media #{$mobile} {\n          width: inherit;\n          border-bottom-left-radius: var(--nylas-border-radius-2x);\n        }\n\n        h4 {\n          font-size: 14px;\n          line-height: 24px;\n          color: var(--nylas-base-600);\n          font-family: var(--nylas-font-family);\n          font-weight: 500;\n          text-align: center;\n          margin: 0.75rem 0;\n        }\n\n        .preview-container {\n          padding: 0 2rem 1rem;\n\n          .slot {\n            background-color: transparent;\n            border-top: 1px solid var(--nylas-base-300);\n\n            &.active {\n              background-color: var(--nylas-base-100);\n            }\n\n            &:last-of-type {\n              border-bottom: 1px solid var(--nylas-base-300);\n            }\n          }\n\n          .event-slot {\n            background-color: var(--nylas-base-600);\n            border-top: 1px solid var(--nylas-base-300);\n          }\n        }\n      }\n\n      span.error-message {\n        color: var(--nylas-error);\n      }\n\n      span.help-text {\n        margin: 0.25rem 0 0 0;\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 20px;\n        color: var(--nylas-base-600);\n        text-align: left;\n      }\n    }\n\n    .nylas-reminder-email__summary {\n      padding: 0.75rem 1rem;\n      display: grid;\n      grid-template-columns: auto 1fr;\n      column-gap: 1rem;\n\n      p {\n        margin: 0;\n        display: flex;\n        align-items: center;\n        column-gap: 4px;\n        font-size: 0.875rem;\n        font-weight: 400;\n        line-height: 21px;\n        color: var(--nylas-base-600);\n        text-align: left;\n\n        span.summary-icon {\n          display: flex;\n          justify-content: center;\n          min-width: 20px;\n        }\n      }\n    }\n  }\n}\n\nsp-divider {\n  background-color: var(--nylas-base-200);\n  height: 1px;\n  margin: 0.25rem 0;\n}\n\nbutton-component.create-reminder button {\n  margin: 1rem;\n  width: calc(100% - 2rem);\n}\n\nbutton-component.delete-btn button {\n  color: var(--nylas-error) !important;\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { NylasSchedulerConfigConnector } from '@/connector/nylas-scheduler-config-connector';\nimport { debug } from '@/utils/utils';\nimport { AttachInternals, Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { NylasSchedulerEditor } from '../nylas-scheduler-editor/nylas-scheduler-editor';\nimport { Configuration, EventReminder, Participant } from '@nylas/core';\nimport i18next from '@/utils/i18n';\nimport { LANGUAGE_CODE } from '@/common/constants';\n\n/**\n * The `nylas-reminder-emails` component is a UI component that allows users to set buffer time before and after an event.\n *\n * @part nre__tab-heading - The nylas-reminder-emails main tab heading\n * @part nre - The nylas-reminder-emails container\n * @part nre__header - The header of the event communication section\n * @part nre__body - The body of the event communication section\n * @part nre__summary - The reminder card summary container\n * @part nrt - The event reminder container\n * @part nrt__number-dropdown - The number dropdown container\n * @part nrt__number-dropdown-button - The number dropdown button\n * @part nrt__number-dropdown-content - The number dropdown content\n * @part nrt__period-dropdown - The period dropdown container\n * @part nrt__period-dropdown-button - The period dropdown button\n * @part nrt__period-dropdown-content - The period dropdown content\n * @part nrt__time-period-selector - The time period selector\n **/\n@Component({\n  tag: 'nylas-reminder-emails',\n  styleUrl: 'nylas-reminder-emails.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class NylasReminderEmails {\n  @Element() host!: HTMLNylasReminderEmailsElement;\n\n  /**\n   * The selected configuration.\n   */\n  @Prop() selectedConfiguration?: Configuration;\n  /**\n   * The event reminders prop.\n   */\n  @Prop() eventReminders?: (EventReminder & { editing?: boolean })[];\n  /**\n   * The name of the component\n   */\n  @Prop() name: string = 'reminder-overrides';\n  /**\n   * The selected language.\n   */\n  @Prop() selectedLanguage?: LANGUAGE_CODE;\n  /**\n   * The element internals.\n   */\n  @AttachInternals() internals!: ElementInternals;\n\n  /**\n   * The event reminders state. Defaults to an empty array if no event reminders are present.\n   */\n  @State() reminders: (EventReminder & { editing?: boolean })[] = this.selectedConfiguration?.event_booking?.reminders ?? this.eventReminders ?? [];\n  @State() reminderErrors: { [key: string]: string } = {};\n  @State() participants: Participant[] = this.selectedConfiguration?.participants ?? [];\n\n  /**\n   * This event is fired when the email reminders change.\n   */\n  @Event() valueChanged!: EventEmitter<{\n    value: string;\n    name: string;\n    valueChanged?: (event: CustomEvent<{ value: string; name: string }>) => void;\n  }>;\n\n  // Lifecycle methods\n  connectedCallback() {\n    debug('nylas-reminder-emails', 'connectedCallback');\n  }\n\n  disconnectedCallback() {\n    debug('nylas-reminder-emails', 'disconnectedCallback');\n  }\n\n  componentWillLoad() {\n    debug('nylas-reminder-emails', 'componentWillLoad');\n    // See comment in the @Watch('name') decorator for more information.\n    this.host.setAttribute('name', this.name);\n  }\n\n  componentDidLoad() {\n    debug('nylas-reminder-emails', 'componentDidLoad');\n    if (this.selectedConfiguration) {\n      this.selectedConfigurationChangedHandler(this.selectedConfiguration);\n    } else {\n      this.reminders = this.eventReminders ?? [];\n      this.updateRemindersFormValue();\n    }\n  }\n\n  componentWillUpdate() {\n    debug('nylas-reminder-emails', 'componentWillUpdate');\n  }\n\n  componentDidUpdate() {\n    debug('nylas-reminder-emails', 'componentDidUpdate');\n  }\n\n  componentWillRender() {\n    debug('nylas-reminder-emails', 'componentWillRender');\n  }\n\n  componentDidRender() {\n    debug('nylas-reminder-emails', 'componentDidRender');\n  }\n\n  /**\n   * When a name prop is passed, stencil does not automatically set the name attribute on the host element.\n   * Since this component is form-associated, the name attribute is required for form submission.\n   * This is a workaround to ensure that the name attribute is set on the host element.\n   */\n  @Watch('name')\n  elementNameChangedHandler(newValue: string) {\n    debug('nylas-reminder-emails', 'elementNameChangedHandler', newValue);\n    this.host.setAttribute('name', newValue);\n  }\n\n  @Watch('selectedConfiguration')\n  selectedConfigurationChangedHandler(newVal: Configuration) {\n    debug('nylas-reminder-emails', 'selectedConfigurationChangedHandler', newVal);\n    this.reminders = newVal?.event_booking?.reminders ?? [];\n    this.participants = newVal?.participants ?? [];\n    this.updateRemindersFormValue();\n  }\n\n  @Watch('selectedLanguage')\n  selectedLanguageChangedHandler(newVal: LANGUAGE_CODE, oldVal: LANGUAGE_CODE) {\n    if (newVal === oldVal) return;\n    i18next.changeLanguage(newVal);\n  }\n\n  @Listen('valueChanged')\n  handleValueChanged(event: CustomEvent) {\n    debug('nylas-reminder-emails', 'handleValueChanged', event);\n    const { name, value } = event.detail;\n\n    if (name.startsWith('reminder-time-')) {\n      // Extract the reminder index from the name attribute (e.g. reminder-time-0)\n      const [_, reminderIndex] = name.split(/(\\d+)/);\n      const updatedReminders = [...this.reminders];\n      updatedReminders[reminderIndex].minutes_before_event = parseInt(value);\n      this.reminders = [...updatedReminders];\n      this.updateRemindersFormValue();\n    }\n  }\n\n  @Listen('nylasFormDropdownChanged')\n  handleNylasFormDropdownChanged(event: CustomEvent) {\n    debug('nylas-reminder-emails', 'handleNylasFormDropdownChanged', event);\n    const { name, value } = event.detail;\n    if (!name.startsWith('recipient-')) {\n      return;\n    }\n    // Extract the reminder index from the name attribute (e.g. recipient-0)\n    const [_, reminderIndex] = name.split(/(\\d+)/);\n    const updatedReminders = [...this.reminders];\n    updatedReminders[reminderIndex].recipient = value;\n    this.reminders = [...updatedReminders];\n    this.updateRemindersFormValue();\n  }\n\n  @Listen('nylasFormInputChanged')\n  handleNylasFormInputChanged(event: CustomEvent) {\n    debug('nylas-reminder-emails', 'handleNylasFormInputChanged', event);\n    const { name, value } = event.detail;\n    if (!name.startsWith('reminder-subject-')) {\n      return;\n    }\n    // Extract the reminder index from the name attribute (e.g. reminder-subject-0)\n    const [_, reminderIndex] = name.split(/(\\d+)/);\n    const updatedReminders = [...this.reminders];\n    updatedReminders[reminderIndex].email_subject = value;\n    this.reminders = [...updatedReminders];\n    this.updateRemindersFormValue();\n  }\n\n  addReminder() {\n    debug('nylas-reminder-emails', 'addReminder');\n    this.reminders = [\n      ...this.reminders,\n      {\n        type: 'email',\n        minutes_before_event: 30,\n        editing: true,\n        recipient: 'all',\n      },\n    ];\n    this.updateRemindersFormValue();\n  }\n\n  deleteReminder(index: number) {\n    this.reminders = this.reminders.filter((_, i) => i !== index).map(p => ({ ...p }));\n    this.updateRemindersFormValue();\n  }\n\n  get isInternalsAvailable() {\n    return this.internals !== undefined && typeof this.internals.setFormValue === 'function';\n  }\n\n  updateRemindersFormValue() {\n    debug('nylas-reminder-emails', 'updateRemindersFormValue');\n    const eventReminders = this.reminders.map(reminder => {\n      const rem = { ...reminder };\n      rem?.editing && delete rem.editing;\n      return rem;\n    });\n    this.valueChanged.emit({\n      value: JSON.stringify(eventReminders),\n      name: 'reminder-overrides',\n    });\n    this.isInternalsAvailable && this.internals.setFormValue(JSON.stringify(eventReminders), 'reminder-overrides');\n  }\n\n  formatReminderTime(reminderTime: number) {\n    switch (true) {\n      case reminderTime > 24 * 60:\n        return `${reminderTime / 60 / 24} days`;\n      case reminderTime === 24 * 60:\n        return '1 day';\n      case reminderTime > 90 || reminderTime === 60:\n        return `${reminderTime / 60} hours`;\n      default:\n        return `${reminderTime} minute${reminderTime > 1 ? 's' : ''} `;\n    }\n  }\n\n  @RegisterComponent<NylasReminderEmails, NylasSchedulerConfigConnector, Exclude<NylasSchedulerEditor['stores'], undefined>>({\n    name: 'nylas-reminder-emails',\n    stateToProps: new Map([\n      ['schedulerConfig.selectedConfiguration', 'selectedConfiguration'],\n      ['schedulerConfig.selectedLanguage', 'selectedLanguage'],\n    ]),\n    eventToProps: {\n      valueChanged: async (\n        event: CustomEvent<{ value: string; name: string; valueChanged?: (event: CustomEvent<{ value: string; name: string }>) => void }>,\n        _nylasSchedulerConfigConnector: NylasSchedulerConfigConnector,\n      ) => {\n        const { valueChanged } = event.detail;\n        // If a handler is passed, call it.\n        if (valueChanged) {\n          valueChanged(event);\n        }\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    const organizerName = this.participants.find(p => p.is_organizer)?.name;\n    const recipientOptions = [\n      {\n        label: i18next.t('nylasReminderEmails.recipientOptions', { context: 'all' }),\n        value: 'all',\n      },\n      {\n        label: i18next.t('nylasReminderEmails.recipientOptions', { context: 'guest' }),\n        value: 'guest',\n      },\n      {\n        label: i18next.t('nylasReminderEmails.recipientOptions', { context: 'host' }),\n        value: 'host',\n      },\n    ];\n\n    return (\n      <Host>\n        <div class=\"cards-container\">\n          {this.reminders.map((reminder, index) => {\n            return reminder.type !== 'webhook' ? (\n              <div class=\"nylas-reminder-email\" part=\"nre\">\n                <div class=\"header\" part=\"nre__header\">\n                  <div>\n                    <h3>{i18next.t('nylasReminderEmails.headerTitle', { organizerName: organizerName ? ` with ${organizerName} ` : '' })}</h3>\n                    <p>{i18next.t('nylasReminderEmails.headerSubTitle')}</p>\n                  </div>\n                  {!reminder.editing ? (\n                    <button-component\n                      variant={'basic'}\n                      key={`edit-${index} `}\n                      clickHandler={event => {\n                        event.preventDefault();\n                        reminder.editing = true;\n                        this.reminders = [...this.reminders];\n                      }}\n                    >\n                      <edit-icon width=\"16\" height=\"16\"></edit-icon>\n                      {i18next.t('nylasReminderEmails.editButtonText')}\n                    </button-component>\n                  ) : (\n                    <div class=\"reminder-open-close-toggle\">\n                      <button-component\n                        variant={'basic'}\n                        class=\"delete-btn\"\n                        tooltip=\"Delete reminder\"\n                        key={`delete -${index} `}\n                        clickHandler={event => {\n                          event.preventDefault();\n                          this.deleteReminder(index);\n                        }}\n                      >\n                        <trash-icon width=\"16\" height=\"16\"></trash-icon>\n                      </button-component>\n                      <span\n                        class={`chevron ${reminder.editing ? 'open' : 'closed'}`}\n                        onClick={() => {\n                          reminder.editing = !reminder.editing;\n                          this.reminders = [...this.reminders];\n                        }}\n                      >\n                        <chevron-icon width=\"24\" height=\"24\" />\n                      </span>\n                    </div>\n                  )}\n                </div>\n\n                {reminder.editing ? (\n                  <div class=\"nylas-reminder-email__body\" part=\"nre__body\">\n                    <div class=\"nylas-reminder-email__section\">\n                      <div class=\"nylas-reminder-email__row\">\n                        <label>{i18next.t('nylasReminderEmails.emailRecipients.label')}</label>\n                        <select-dropdown\n                          name={`recipient-${index}`}\n                          options={recipientOptions}\n                          defaultSelectedOption={recipientOptions.find(i => i.value === reminder.recipient) ?? recipientOptions[0]}\n                          withSearch={false}\n                        />\n                      </div>\n                      <div class=\"nylas-reminder-email__row\">\n                        <label>\n                          {i18next.t('nylasReminderEmails.sendConfirmation.label')}\n                          <span class=\"label-icon\">\n                            <tooltip-component>\n                              <info-icon slot=\"tooltip-icon\" />\n                              <span slot=\"tooltip-content\">{i18next.t('nylasReminderEmails.sendConfirmation.tooltip.desc')}</span>\n                            </tooltip-component>\n                          </span>\n                        </label>\n                        <nylas-reminder-time\n                          name={`reminder-time-${index}`}\n                          eventReminderTimeMinutes={reminder.minutes_before_event}\n                          exportparts=\"nrt, nrt__number-dropdown, nrt__number-dropdown-button, nrt__number-dropdown-content, nrt__period-dropdown, nrt__period-dropdown-button, nrt__period-dropdown-content, nrt__time-period-selector\"\n                        />\n                      </div>\n                      <div class=\"nylas-reminder-email__block\">\n                        <label>{i18next.t('nylasReminderEmails.emailSubject.label')}</label>\n                        <input-component\n                          name={`reminder-subject-${index}`}\n                          maxLength={60}\n                          placeholder={i18next.t('nylasReminderEmails.emailSubject.placeholder', { organizerName: organizerName ? ` with ${organizerName}` : '' })}\n                          defaultValue={reminder?.email_subject || ''}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <div class=\"nylas-reminder-email__summary\" part=\"nre__summary\">\n                    <p>\n                      <span class=\"summary-icon\">\n                        <person-clipboard-icon></person-clipboard-icon>\n                      </span>\n                      {recipientOptions.find(i => i.value === reminder.recipient)?.label}\n                    </p>\n                    <p>\n                      <span class=\"summary-icon\">\n                        <clock-icon></clock-icon>\n                      </span>\n                      {this.formatReminderTime(reminder.minutes_before_event)} before the event\n                    </p>\n                  </div>\n                )}\n              </div>\n            ) : null;\n          })}\n        </div>\n\n        <button-component\n          class=\"create-reminder\"\n          variant={'basic'}\n          clickHandler={event => {\n            event.preventDefault();\n            this.addReminder();\n          }}\n        >\n          <plus-icon width=\"16\" height=\"16\"></plus-icon>\n          {i18next.t('nylasReminderEmails.newReminderButtonText')}\n        </button-component>\n      </Host>\n    );\n  }\n}\n"],"version":3}