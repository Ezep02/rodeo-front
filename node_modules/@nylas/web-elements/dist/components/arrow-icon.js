import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';

const iconCss = ".sc-arrow-icon-h{display:flex}";

const ArrowIcon$1 = proxyCustomElement(class ArrowIcon extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.width = '15';
        this.height = '15';
    }
    render() {
        return (h("svg", { key: 'e3684fc6dc67f53d0786dd97fdbc8a2b6efba8ad', width: this.width, height: this.height, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, h("path", { key: 'a7050792b3f68c6661c53acd944666d2a11ec66a', d: "M5 12H19M12 5L19 12L12 19", stroke: "currentColor", "stroke-width": "2", "stroke-linecap": "round", "stroke-linejoin": "round" })));
    }
    static get style() { return iconCss; }
}, [2, "arrow-icon", {
        "width": [1],
        "height": [1]
    }]);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["arrow-icon"];
    components.forEach(tagName => { switch (tagName) {
        case "arrow-icon":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ArrowIcon$1);
            }
            break;
    } });
}

const ArrowIcon = ArrowIcon$1;
const defineCustomElement = defineCustomElement$1;

export { ArrowIcon, defineCustomElement };

//# sourceMappingURL=arrow-icon.js.map