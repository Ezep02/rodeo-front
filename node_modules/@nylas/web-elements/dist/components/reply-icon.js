import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';

const iconCss = ".sc-reply-icon-h{display:flex}";

const ReplyIcon$1 = proxyCustomElement(class ReplyIcon extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.width = '15';
        this.height = '15';
    }
    render() {
        return (h("svg", { key: '18be7bd8957b2b4e5531ac731dc5368d8189bed5', fill: "auto", width: this.width, height: this.height, viewBox: "0 0 1920 1920", xmlns: "http://www.w3.org/2000/svg" }, h("path", { key: 'a420fae211dab532a422e6c9521f4a104275d4ed', d: "M835.942 632.563H244.966l478.08-478.08-90.496-90.496L-.026 696.563 632.55 1329.14l90.496-90.496-478.08-478.08h590.976c504.448 0 914.816 410.368 914.816 914.816v109.184h128V1675.38c0-574.976-467.84-1042.816-1042.816-1042.816", "fill-rule": "evenodd" })));
    }
    static get style() { return iconCss; }
}, [2, "reply-icon", {
        "width": [1],
        "height": [1]
    }]);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["reply-icon"];
    components.forEach(tagName => { switch (tagName) {
        case "reply-icon":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ReplyIcon$1);
            }
            break;
    } });
}

const ReplyIcon = ReplyIcon$1;
const defineCustomElement = defineCustomElement$1;

export { ReplyIcon, defineCustomElement };

//# sourceMappingURL=reply-icon.js.map