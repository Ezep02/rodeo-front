import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';

const iconCss = ".sc-italic-icon-h{display:flex}";

const ItalicIcon$1 = proxyCustomElement(class ItalicIcon extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.width = '15';
        this.height = '15';
    }
    render() {
        return (h("svg", { key: 'ccf9dbecc9187261cf82a794eb7fb38bd83a56ee', width: this.width, height: this.height, viewBox: "0 0 24 24", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, h("path", { key: '3ab4e5ba544361bc9a7a58a5056674701d528f5b', stroke: "currentColor", "stroke-linecap": "round", "stroke-linejoin": "round", "stroke-width": "2", d: "m10 20 4-16m2 0h-4m0 16H8" })));
    }
    static get style() { return iconCss; }
}, [2, "italic-icon", {
        "width": [1],
        "height": [1]
    }]);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["italic-icon"];
    components.forEach(tagName => { switch (tagName) {
        case "italic-icon":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ItalicIcon$1);
            }
            break;
    } });
}

const ItalicIcon = ItalicIcon$1;
const defineCustomElement = defineCustomElement$1;

export { ItalicIcon, defineCustomElement };

//# sourceMappingURL=italic-icon.js.map