import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';

const iconCss = ".sc-reply-all-icon-h{display:flex}";

const ReplyAllIcon$1 = proxyCustomElement(class ReplyAllIcon extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.width = '15';
        this.height = '15';
    }
    render() {
        return (h("svg", { key: '6758c13e87a248f0b4fd59f6760b87277d26d1d0', fill: "auto", width: this.width, height: this.height, viewBox: "0 0 1920 1920", xmlns: "http://www.w3.org/2000/svg" }, h("path", { key: '063ac866425fc57eb4cb0d1d90ca4215080f6160', d: "m1030.975 188 81.249 81.249-429.228 429.228h300.747c516.223 0 936.257 420.034 936.257 936.257v98.028h-114.92v-98.028c0-452.901-368.436-821.337-821.337-821.337H682.996l429.228 429.229-81.25 81.248-567.936-567.937L1030.975 188Zm-463.038.011 81.249 81.25-486.688 486.688 486.688 486.688-81.249 81.249L0 755.949 567.937 188.01Z", "fill-rule": "evenodd" })));
    }
    static get style() { return iconCss; }
}, [2, "reply-all-icon", {
        "width": [1],
        "height": [1]
    }]);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["reply-all-icon"];
    components.forEach(tagName => { switch (tagName) {
        case "reply-all-icon":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, ReplyAllIcon$1);
            }
            break;
    } });
}

const ReplyAllIcon = ReplyAllIcon$1;
const defineCustomElement = defineCustomElement$1;

export { ReplyAllIcon, defineCustomElement };

//# sourceMappingURL=reply-all-icon.js.map