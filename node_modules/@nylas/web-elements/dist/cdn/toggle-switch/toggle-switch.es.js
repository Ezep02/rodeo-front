const k = {
  allRenderFn: !1,
  cmpDidLoad: !0,
  cmpDidUnload: !1,
  cmpDidUpdate: !0,
  cmpDidRender: !0,
  cmpWillLoad: !0,
  cmpWillUpdate: !0,
  cmpWillRender: !0,
  connectedCallback: !0,
  disconnectedCallback: !0,
  element: !0,
  event: !0,
  hasRenderFn: !0,
  lifecycle: !0,
  hostListener: !0,
  hostListenerTargetWindow: !0,
  hostListenerTargetDocument: !0,
  hostListenerTargetBody: !0,
  hostListenerTargetParent: !1,
  hostListenerTarget: !0,
  member: !0,
  method: !0,
  mode: !0,
  observeAttribute: !0,
  prop: !0,
  propMutable: !0,
  reflect: !0,
  scoped: !0,
  shadowDom: !0,
  slot: !0,
  cssAnnotations: !0,
  state: !0,
  style: !0,
  formAssociated: !1,
  svg: !0,
  updatable: !0,
  vdomAttribute: !0,
  vdomXlink: !0,
  vdomClass: !0,
  vdomFunctional: !0,
  vdomKey: !0,
  vdomListener: !0,
  vdomRef: !0,
  vdomPropOrAttr: !0,
  vdomRender: !0,
  vdomStyle: !0,
  vdomText: !0,
  watchCallback: !0,
  taskQueue: !0,
  hotModuleReplacement: !1,
  isDebug: !1,
  isDev: !1,
  isTesting: !1,
  hydrateServerSide: !1,
  hydrateClientSide: !1,
  lifecycleDOMEvents: !1,
  lazyLoad: !1,
  profile: !1,
  slotRelocation: !0,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  appendChildSlotFix: !1,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  cloneNodeFix: !1,
  hydratedAttribute: !1,
  hydratedClass: !0,
  scriptDataOpts: !1,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  scopedSlotTextContentFix: !1,
  // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
  shadowDomShim: !1,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  slotChildNodesFix: !1,
  invisiblePrehydration: !0,
  propBoolean: !0,
  propNumber: !0,
  propString: !0,
  constructableCSS: !0,
  cmpShouldUpdate: !0,
  devTools: !1,
  shadowDelegatesFocus: !0,
  initializeNextTick: !1,
  asyncLoading: !1,
  asyncQueue: !1,
  transformTagName: !1,
  attachStyles: !0,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  experimentalSlotFixes: !1
};
let L, H, w, oe = !1, U = !1, N = !1, b = !1, X = null, M = !1;
const x = (e, t = "") => () => {
}, Se = "slot-fb{display:contents}slot-fb[hidden]{display:none}", Q = "http://www.w3.org/1999/xlink", G = {}, me = "http://www.w3.org/2000/svg", ke = "http://www.w3.org/1999/xhtml", Te = (e) => e != null, z = (e) => (e = typeof e, e === "object" || e === "function");
function xe(e) {
  var t, n, s;
  return (s = (n = (t = e.head) === null || t === void 0 ? void 0 : t.querySelector('meta[name="csp-nonce"]')) === null || n === void 0 ? void 0 : n.getAttribute("content")) !== null && s !== void 0 ? s : void 0;
}
const C = (e, t, ...n) => {
  let s = null, l = null, r = null, o = !1, c = !1;
  const i = [], u = (a) => {
    for (let d = 0; d < a.length; d++)
      s = a[d], Array.isArray(s) ? u(s) : s != null && typeof s != "boolean" && ((o = typeof e != "function" && !z(s)) && (s = String(s)), o && c ? i[i.length - 1].$text$ += s : i.push(o ? P(null, s) : s), c = o);
  };
  if (u(n), t) {
    t.key && (l = t.key), t.name && (r = t.name);
    {
      const a = t.className || t.class;
      a && (t.class = typeof a != "object" ? a : Object.keys(a).filter((d) => a[d]).join(" "));
    }
  }
  if (typeof e == "function")
    return e(t === null ? {} : t, i, _e);
  const f = P(e, null);
  return f.$attrs$ = t, i.length > 0 && (f.$children$ = i), f.$key$ = l, f.$name$ = r, f;
}, P = (e, t) => {
  const n = {
    $flags$: 0,
    $tag$: e,
    $text$: t,
    $elm$: null,
    $children$: null
  };
  return n.$attrs$ = null, n.$key$ = null, n.$name$ = null, n;
}, Le = {}, Ee = (e) => e && e.$tag$ === Le, _e = {
  forEach: (e, t) => e.map(I).forEach(t),
  map: (e, t) => e.map(I).map(t).map(Ce)
}, I = (e) => ({
  vattrs: e.$attrs$,
  vchildren: e.$children$,
  vkey: e.$key$,
  vname: e.$name$,
  vtag: e.$tag$,
  vtext: e.$text$
}), Ce = (e) => {
  if (typeof e.vtag == "function") {
    const n = Object.assign({}, e.vattrs);
    return e.vkey && (n.key = e.vkey), e.vname && (n.name = e.vname), C(e.vtag, n, ...e.vchildren || []);
  }
  const t = P(e.vtag, e.vtext);
  return t.$attrs$ = e.vattrs, t.$children$ = e.vchildren, t.$key$ = e.vkey, t.$name$ = e.vname, t;
}, we = (e) => ot.map((t) => t(e)).find((t) => !!t), Ae = (e, t) => e != null && !z(e) ? t & 4 ? e === "false" ? !1 : e === "" || !!e : t & 2 ? parseFloat(e) : t & 1 ? String(e) : e : e, Re = (e) => e, Oe = (e, t, n) => {
  const s = Re(e);
  return {
    emit: (l) => Fe(s, t, {
      bubbles: !!(n & 4),
      composed: !!(n & 2),
      cancelable: !!(n & 1),
      detail: l
    })
  };
}, Fe = (e, t, n) => {
  const s = p.ce(t, n);
  return e.dispatchEvent(s), s;
}, K = /* @__PURE__ */ new WeakMap(), Ue = (e, t, n) => {
  let s = B.get(e);
  at && n ? (s = s || new CSSStyleSheet(), typeof s == "string" ? s = t : s.replaceSync(t)) : s = t, B.set(e, s);
}, Pe = (e, t, n) => {
  var s;
  const l = ie(t, n), r = B.get(l);
  if (e = e.nodeType === 11 ? e : v, r)
    if (typeof r == "string") {
      e = e.head || e;
      let o = K.get(e), c;
      if (o || K.set(e, o = /* @__PURE__ */ new Set()), !o.has(l)) {
        {
          c = v.createElement("style"), c.innerHTML = r;
          const i = (s = p.$nonce$) !== null && s !== void 0 ? s : xe(v);
          i != null && c.setAttribute("nonce", i), e.insertBefore(c, e.querySelector("link"));
        }
        t.$flags$ & 4 && (c.innerHTML += Se), o && o.add(l);
      }
    } else e.adoptedStyleSheets.includes(r) || (e.adoptedStyleSheets = [...e.adoptedStyleSheets, r]);
  return l;
}, je = (e) => {
  const t = e.$cmpMeta$, n = e.$hostElement$, s = t.$flags$, l = x("attachStyles", t.$tagName$), r = Pe(n.shadowRoot ? n.shadowRoot : n.getRootNode(), t, e.$modeName$);
  s & 10 && (n["s-sc"] = r, n.classList.add(r + "-h"), s & 2 && n.classList.add(r + "-s")), l();
}, ie = (e, t) => "sc-" + (t && e.$flags$ & 32 ? e.$tagName$ + "-" + t : e.$tagName$), J = (e, t, n, s, l, r) => {
  if (n !== s) {
    let o = te(e, t), c = t.toLowerCase();
    if (t === "class") {
      const i = e.classList, u = Y(n), f = Y(s);
      i.remove(...u.filter((a) => a && !f.includes(a))), i.add(...f.filter((a) => a && !u.includes(a)));
    } else if (t === "style") {
      for (const i in n)
        (!s || s[i] == null) && (i.includes("-") ? e.style.removeProperty(i) : e.style[i] = "");
      for (const i in s)
        (!n || s[i] !== n[i]) && (i.includes("-") ? e.style.setProperty(i, s[i]) : e.style[i] = s[i]);
    } else if (t !== "key")
      if (t === "ref")
        s && s(e);
      else if (!e.__lookupSetter__(t) && t[0] === "o" && t[1] === "n") {
        if (t[2] === "-" ? t = t.slice(3) : te(D, c) ? t = c.slice(2) : t = c[2] + t.slice(3), n || s) {
          const i = t.endsWith(re);
          t = t.replace(De, ""), n && p.rel(e, t, n, i), s && p.ael(e, t, s, i);
        }
      } else {
        const i = z(s);
        if ((o || i && s !== null) && !l)
          try {
            if (e.tagName.includes("-"))
              e[t] = s;
            else {
              const f = s ?? "";
              t === "list" ? o = !1 : (n == null || e[t] != f) && (e[t] = f);
            }
          } catch {
          }
        let u = !1;
        c !== (c = c.replace(/^xlink\:?/, "")) && (t = c, u = !0), s == null || s === !1 ? (s !== !1 || e.getAttribute(t) === "") && (u ? e.removeAttributeNS(Q, t) : e.removeAttribute(t)) : (!o || r & 4 || l) && !i && (s = s === !0 ? "" : s, u ? e.setAttributeNS(Q, t, s) : e.setAttribute(t, s));
      }
  }
}, Be = /\s/, Y = (e) => e ? e.split(Be) : [], re = "Capture", De = new RegExp(re + "$"), ce = (e, t, n, s) => {
  const l = t.$elm$.nodeType === 11 && t.$elm$.host ? t.$elm$.host : t.$elm$, r = e && e.$attrs$ || G, o = t.$attrs$ || G;
  for (s in r)
    s in o || J(l, s, r[s], void 0, n, t.$flags$);
  for (s in o)
    J(l, s, r[s], o[s], n, t.$flags$);
}, j = (e, t, n, s) => {
  const l = t.$children$[n];
  let r = 0, o, c, i;
  if (oe || (N = !0, l.$tag$ === "slot" && (L && s.classList.add(L + "-s"), l.$flags$ |= l.$children$ ? (
    // slot element has fallback content
    2
  ) : (
    // slot element does not have fallback content
    1
  ))), l.$text$ !== null)
    o = l.$elm$ = v.createTextNode(l.$text$);
  else if (l.$flags$ & 1)
    o = l.$elm$ = v.createTextNode("");
  else {
    if (b || (b = l.$tag$ === "svg"), o = l.$elm$ = v.createElementNS(b ? me : ke, l.$flags$ & 2 ? "slot-fb" : l.$tag$), b && l.$tag$ === "foreignObject" && (b = !1), ce(null, l, b), Te(L) && o["s-si"] !== L && o.classList.add(o["s-si"] = L), l.$children$)
      for (r = 0; r < l.$children$.length; ++r)
        c = j(e, l, r, o), c && o.appendChild(c);
    l.$tag$ === "svg" ? b = !1 : o.tagName === "foreignObject" && (b = !0);
  }
  return o["s-hn"] = w, l.$flags$ & 3 && (o["s-sr"] = !0, o["s-cr"] = H, o["s-sn"] = l.$name$ || "", i = e && e.$children$ && e.$children$[n], i && i.$tag$ === l.$tag$ && e.$elm$ && A(e.$elm$, !1)), o;
}, A = (e, t) => {
  p.$flags$ |= 1;
  const n = e.childNodes;
  for (let s = n.length - 1; s >= 0; s--) {
    const l = n[s];
    l["s-hn"] !== w && l["s-ol"] && (fe(l).insertBefore(l, q(l)), l["s-ol"].remove(), l["s-ol"] = void 0, l["s-sh"] = void 0, N = !0), t && A(l, t);
  }
  p.$flags$ &= -2;
}, ae = (e, t, n, s, l, r) => {
  let o = e["s-cr"] && e["s-cr"].parentNode || e, c;
  for (o.shadowRoot && o.tagName === w && (o = o.shadowRoot); l <= r; ++l)
    s[l] && (c = j(null, n, l, e), c && (s[l].$elm$ = c, o.insertBefore(c, q(t))));
}, $e = (e, t, n) => {
  for (let s = t; s <= n; ++s) {
    const l = e[s];
    if (l) {
      const r = l.$elm$;
      he(l), r && (U = !0, r["s-ol"] ? r["s-ol"].remove() : A(r, !0), r.remove());
    }
  }
}, He = (e, t, n, s, l = !1) => {
  let r = 0, o = 0, c = 0, i = 0, u = t.length - 1, f = t[0], a = t[u], d = s.length - 1, $ = s[0], h = s[d], y, g;
  for (; r <= u && o <= d; )
    if (f == null)
      f = t[++r];
    else if (a == null)
      a = t[--u];
    else if ($ == null)
      $ = s[++o];
    else if (h == null)
      h = s[--d];
    else if (F(f, $, l))
      E(f, $, l), f = t[++r], $ = s[++o];
    else if (F(a, h, l))
      E(a, h, l), a = t[--u], h = s[--d];
    else if (F(f, h, l))
      (f.$tag$ === "slot" || h.$tag$ === "slot") && A(f.$elm$.parentNode, !1), E(f, h, l), e.insertBefore(f.$elm$, a.$elm$.nextSibling), f = t[++r], h = s[--d];
    else if (F(a, $, l))
      (f.$tag$ === "slot" || h.$tag$ === "slot") && A(a.$elm$.parentNode, !1), E(a, $, l), e.insertBefore(a.$elm$, f.$elm$), a = t[--u], $ = s[++o];
    else {
      for (c = -1, i = r; i <= u; ++i)
        if (t[i] && t[i].$key$ !== null && t[i].$key$ === $.$key$) {
          c = i;
          break;
        }
      c >= 0 ? (g = t[c], g.$tag$ !== $.$tag$ ? y = j(t && t[o], n, c, e) : (E(g, $, l), t[c] = void 0, y = g.$elm$), $ = s[++o]) : (y = j(t && t[o], n, o, e), $ = s[++o]), y && fe(f.$elm$).insertBefore(y, q(f.$elm$));
    }
  r > u ? ae(e, s[d + 1] == null ? null : s[d + 1].$elm$, n, s, o, d) : o > d && $e(t, r, u);
}, F = (e, t, n = !1) => e.$tag$ === t.$tag$ ? e.$tag$ === "slot" ? e.$name$ === t.$name$ : n ? !0 : e.$key$ === t.$key$ : !1, q = (e) => e && e["s-ol"] || e, fe = (e) => (e["s-ol"] ? e["s-ol"] : e).parentNode, E = (e, t, n = !1) => {
  const s = t.$elm$ = e.$elm$, l = e.$children$, r = t.$children$, o = t.$tag$, c = t.$text$;
  let i;
  c === null ? (b = o === "svg" ? !0 : o === "foreignObject" ? !1 : b, o === "slot" || ce(e, t, b), l !== null && r !== null ? He(s, l, t, r, n) : r !== null ? (e.$text$ !== null && (s.textContent = ""), ae(s, null, t, r, 0, r.length - 1)) : l !== null && $e(l, 0, l.length - 1), b && o === "svg" && (b = !1)) : (i = s["s-cr"]) ? i.parentNode.textContent = c : e.$text$ !== c && (s.data = c);
}, de = (e) => {
  const t = e.childNodes;
  for (const n of t)
    if (n.nodeType === 1) {
      if (n["s-sr"]) {
        const s = n["s-sn"];
        n.hidden = !1;
        for (const l of t)
          if (l !== n) {
            if (l["s-hn"] !== n["s-hn"] || s !== "") {
              if (l.nodeType === 1 && (s === l.getAttribute("slot") || s === l["s-sn"])) {
                n.hidden = !0;
                break;
              }
            } else if (l.nodeType === 1 || l.nodeType === 3 && l.textContent.trim() !== "") {
              n.hidden = !0;
              break;
            }
          }
      }
      de(n);
    }
}, S = [], ue = (e) => {
  let t, n, s;
  for (const l of e.childNodes) {
    if (l["s-sr"] && (t = l["s-cr"]) && t.parentNode) {
      n = t.parentNode.childNodes;
      const r = l["s-sn"];
      for (s = n.length - 1; s >= 0; s--)
        if (t = n[s], !t["s-cn"] && !t["s-nr"] && t["s-hn"] !== l["s-hn"] && !k.experimentalSlotFixes)
          if (Z(t, r)) {
            let o = S.find((c) => c.$nodeToRelocate$ === t);
            U = !0, t["s-sn"] = t["s-sn"] || r, o ? (o.$nodeToRelocate$["s-sh"] = l["s-hn"], o.$slotRefNode$ = l) : (t["s-sh"] = l["s-hn"], S.push({
              $slotRefNode$: l,
              $nodeToRelocate$: t
            })), t["s-sr"] && S.map((c) => {
              Z(c.$nodeToRelocate$, t["s-sn"]) && (o = S.find((i) => i.$nodeToRelocate$ === t), o && !c.$slotRefNode$ && (c.$slotRefNode$ = o.$slotRefNode$));
            });
          } else S.some((o) => o.$nodeToRelocate$ === t) || S.push({
            $nodeToRelocate$: t
          });
    }
    l.nodeType === 1 && ue(l);
  }
}, Z = (e, t) => e.nodeType === 1 ? e.getAttribute("slot") === null && t === "" || e.getAttribute("slot") === t : e["s-sn"] === t ? !0 : t === "", he = (e) => {
  e.$attrs$ && e.$attrs$.ref && e.$attrs$.ref(null), e.$children$ && e.$children$.map(he);
}, Me = (e, t, n = !1) => {
  var s, l, r, o, c;
  const i = e.$hostElement$, u = e.$cmpMeta$, f = e.$vnode$ || P(null, null), a = Ee(t) ? t : C(null, null, t);
  if (w = i.tagName, u.$attrsToReflect$ && (a.$attrs$ = a.$attrs$ || {}, u.$attrsToReflect$.map(([d, $]) => a.$attrs$[$] = i[d])), n && a.$attrs$)
    for (const d of Object.keys(a.$attrs$))
      i.hasAttribute(d) && !["key", "ref", "style", "class"].includes(d) && (a.$attrs$[d] = i[d]);
  a.$tag$ = null, a.$flags$ |= 4, e.$vnode$ = a, a.$elm$ = f.$elm$ = i.shadowRoot || i, L = i["s-sc"], H = i["s-cr"], oe = (u.$flags$ & 1) !== 0, U = !1, E(f, a, n);
  {
    if (p.$flags$ |= 1, N) {
      ue(a.$elm$);
      for (const d of S) {
        const $ = d.$nodeToRelocate$;
        if (!$["s-ol"]) {
          const h = v.createTextNode("");
          h["s-nr"] = $, $.parentNode.insertBefore($["s-ol"] = h, $);
        }
      }
      for (const d of S) {
        const $ = d.$nodeToRelocate$, h = d.$slotRefNode$;
        if (h) {
          const y = h.parentNode;
          let g = h.nextSibling;
          {
            let T = (s = $["s-ol"]) === null || s === void 0 ? void 0 : s.previousSibling;
            for (; T; ) {
              let m = (l = T["s-nr"]) !== null && l !== void 0 ? l : null;
              if (m && m["s-sn"] === $["s-sn"] && y === m.parentNode && (m = m.nextSibling, !m || !m["s-nr"])) {
                g = m;
                break;
              }
              T = T.previousSibling;
            }
          }
          (!g && y !== $.parentNode || $.nextSibling !== g) && $ !== g && (!$["s-hn"] && $["s-ol"] && ($["s-hn"] = $["s-ol"].parentNode.nodeName), y.insertBefore($, g), $.nodeType === 1 && ($.hidden = (r = $["s-ih"]) !== null && r !== void 0 ? r : !1));
        } else
          $.nodeType === 1 && (n && ($["s-ih"] = (o = $.hidden) !== null && o !== void 0 ? o : !1), $.hidden = !0);
      }
    }
    U && de(a.$elm$), p.$flags$ &= -2, S.length = 0;
  }
  if (k.experimentalScopedSlotChanges && u.$flags$ & 2)
    for (const d of a.$elm$.childNodes)
      d["s-hn"] !== w && !d["s-sh"] && (n && d["s-ih"] == null && (d["s-ih"] = (c = d.hidden) !== null && c !== void 0 ? c : !1), d.hidden = !0);
  H = void 0;
}, We = (e, t) => {
}, pe = (e, t) => (e.$flags$ |= 16, We(e, e.$ancestorComponent$), dt(() => Ne(e, t))), Ne = (e, t) => {
  const n = e.$hostElement$, s = x("scheduleUpdate", e.$cmpMeta$.$tagName$), l = n;
  let r;
  return t ? r = _(l, "componentWillLoad") : r = _(l, "componentWillUpdate"), r = V(r, () => _(l, "componentWillRender")), s(), V(r, () => qe(e, l, t));
}, V = (e, t) => ze(e) ? e.then(t) : t(), ze = (e) => e instanceof Promise || e && e.then && typeof e.then == "function", qe = async (e, t, n) => {
  const s = e.$hostElement$, l = x("update", e.$cmpMeta$.$tagName$);
  s["s-rc"], n && je(e);
  const r = x("render", e.$cmpMeta$.$tagName$);
  Xe(e, t, s, n), r(), l(), Qe(e);
}, Xe = (e, t, n, s) => {
  try {
    X = t, t = t.render && t.render(), e.$flags$ &= -17, e.$flags$ |= 2, (k.hasRenderFn || k.reflect) && (k.vdomRender || k.reflect) && (k.hydrateServerSide || Me(e, t, s));
  } catch (i) {
    O(i, e.$hostElement$);
  }
  return X = null, null;
}, Qe = (e) => {
  const t = e.$cmpMeta$.$tagName$, n = e.$hostElement$, s = x("postUpdate", t), l = n;
  e.$ancestorComponent$, _(l, "componentDidRender"), e.$flags$ & 64 ? (_(l, "componentDidUpdate"), s()) : (e.$flags$ |= 64, _(l, "componentDidLoad"), s());
}, _ = (e, t, n) => {
  if (e && e[t])
    try {
      return e[t](n);
    } catch (s) {
      O(s);
    }
}, Ge = (e, t) => R(e).$instanceValues$.get(t), Ie = (e, t, n, s) => {
  const l = R(e), r = e, o = l.$instanceValues$.get(t), c = l.$flags$, i = r;
  n = Ae(n, s.$members$[t][0]);
  const u = Number.isNaN(o) && Number.isNaN(n);
  if (n !== o && !u) {
    l.$instanceValues$.set(t, n);
    {
      if (s.$watchers$ && c & 128) {
        const a = s.$watchers$[t];
        a && a.map((d) => {
          try {
            i[d](n, o, t);
          } catch ($) {
            O($, r);
          }
        });
      }
      if ((c & 18) === 2) {
        if (i.componentShouldUpdate && i.componentShouldUpdate(n, o, t) === !1)
          return;
        pe(l, !1);
      }
    }
  }
}, Ke = (e, t, n) => {
  var s;
  const l = e.prototype;
  if (t.$members$) {
    e.watchers && (t.$watchers$ = e.watchers);
    const r = Object.entries(t.$members$);
    r.map(([o, [c]]) => {
      (c & 31 || c & 32) && Object.defineProperty(l, o, {
        get() {
          return Ge(this, o);
        },
        set(i) {
          Ie(this, o, i, t);
        },
        configurable: !0,
        enumerable: !0
      });
    });
    {
      const o = /* @__PURE__ */ new Map();
      l.attributeChangedCallback = function(c, i, u) {
        p.jmp(() => {
          var f;
          const a = o.get(c);
          if (this.hasOwnProperty(a))
            u = this[a], delete this[a];
          else {
            if (l.hasOwnProperty(a) && typeof this[a] == "number" && this[a] == u)
              return;
            if (a == null) {
              const d = R(this), $ = d == null ? void 0 : d.$flags$;
              if ($ && !($ & 8) && $ & 128 && u !== i) {
                const y = this, g = (f = t.$watchers$) === null || f === void 0 ? void 0 : f[c];
                g == null || g.forEach((T) => {
                  y[T] != null && y[T].call(y, u, i, c);
                });
              }
              return;
            }
          }
          this[a] = u === null && typeof this[a] == "boolean" ? !1 : u;
        });
      }, e.observedAttributes = Array.from(/* @__PURE__ */ new Set([
        ...Object.keys((s = t.$watchers$) !== null && s !== void 0 ? s : {}),
        ...r.filter(
          ([c, i]) => i[0] & 15
          /* MEMBER_FLAGS.HasAttribute */
        ).map(([c, i]) => {
          var u;
          const f = i[1] || c;
          return o.set(f, c), i[0] & 512 && ((u = t.$attrsToReflect$) === null || u === void 0 || u.push([c, f])), f;
        })
      ]));
    }
  }
  return e;
}, Je = async (e, t, n, s) => {
  let l;
  if (!(t.$flags$ & 32) && (t.$flags$ |= 32, l = e.constructor, customElements.whenDefined(n.$tagName$).then(() => t.$flags$ |= 128), l.style)) {
    let o = l.style;
    typeof o != "string" && (o = o[t.$modeName$ = we(e)]);
    const c = ie(n, t.$modeName$);
    if (!B.has(c)) {
      const i = x("registerStyles", n.$tagName$);
      Ue(c, o, !!(n.$flags$ & 1)), i();
    }
  }
  t.$ancestorComponent$, pe(t, !0);
}, ee = (e) => {
}, Ye = (e) => {
  if (!(p.$flags$ & 1)) {
    const t = R(e), n = t.$cmpMeta$, s = x("connectedCallback", n.$tagName$);
    t.$flags$ & 1 ? (ge(e, t, n.$listeners$), t != null && t.$lazyInstance$ ? ee(t.$lazyInstance$) : t != null && t.$onReadyPromise$ && t.$onReadyPromise$.then(() => ee(t.$lazyInstance$))) : (t.$flags$ |= 1, // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
    n.$flags$ & 12 && Ze(e), n.$members$ && Object.entries(n.$members$).map(([l, [r]]) => {
      if (r & 31 && e.hasOwnProperty(l)) {
        const o = e[l];
        delete e[l], e[l] = o;
      }
    }), Je(e, t, n)), s();
  }
}, Ze = (e) => {
  const t = e["s-cr"] = v.createComment("");
  t["s-cn"] = !0, e.insertBefore(t, e.firstChild);
}, Ve = async (e) => {
  if (!(p.$flags$ & 1)) {
    const t = R(e);
    t.$rmListeners$ && (t.$rmListeners$.map((n) => n()), t.$rmListeners$ = void 0);
  }
}, et = (e, t) => {
  const n = {
    $flags$: t[0],
    $tagName$: t[1]
  };
  n.$members$ = t[2], n.$listeners$ = t[3], n.$watchers$ = e.$watchers$, n.$attrsToReflect$ = [], !se && n.$flags$ & 1 && (n.$flags$ |= 8);
  const s = e.prototype.connectedCallback, l = e.prototype.disconnectedCallback;
  return Object.assign(e.prototype, {
    __registerHost() {
      lt(this, n);
    },
    connectedCallback() {
      Ye(this), s && s.call(this);
    },
    disconnectedCallback() {
      Ve(this), l && l.call(this);
    },
    __attachShadow() {
      se ? this.attachShadow({
        mode: "open",
        delegatesFocus: !!(n.$flags$ & 16)
      }) : this.shadowRoot = this;
    }
  }), e.is = n.$tagName$, Ke(e, n);
}, ge = (e, t, n, s) => {
  n && n.map(([l, r, o]) => {
    const c = st(e, l), i = tt(t, o), u = nt(l);
    p.ael(c, r, i, u), (t.$rmListeners$ = t.$rmListeners$ || []).push(() => p.rel(c, r, i, u));
  });
}, tt = (e, t) => (n) => {
  try {
    k.lazyLoad || e.$hostElement$[t](n);
  } catch (s) {
    O(s);
  }
}, st = (e, t) => t & 4 ? v : t & 8 ? D : t & 16 ? v.body : e, nt = (e) => rt ? {
  passive: (e & 1) !== 0,
  capture: (e & 2) !== 0
} : (e & 2) !== 0, ye = /* @__PURE__ */ new WeakMap(), R = (e) => ye.get(e), lt = (e, t) => {
  const n = {
    $flags$: 0,
    $hostElement$: e,
    $cmpMeta$: t,
    $instanceValues$: /* @__PURE__ */ new Map()
  };
  return ge(e, n, t.$listeners$), ye.set(e, n);
}, te = (e, t) => t in e, O = (e, t) => (0, console.error)(e, t), B = /* @__PURE__ */ new Map(), ot = [], D = typeof window < "u" ? window : {}, v = D.document || { head: {} }, it = D.HTMLElement || class {
}, p = {
  $flags$: 0,
  $resourcesUrl$: "",
  jmp: (e) => e(),
  raf: (e) => requestAnimationFrame(e),
  ael: (e, t, n, s) => e.addEventListener(t, n, s),
  rel: (e, t, n, s) => e.removeEventListener(t, n, s),
  ce: (e, t) => new CustomEvent(e, t)
}, se = (
  // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
  !0
), rt = /* @__PURE__ */ (() => {
  let e = !1;
  try {
    v.addEventListener("e", null, Object.defineProperty({}, "passive", {
      get() {
        e = !0;
      }
    }));
  } catch {
  }
  return e;
})(), ct = (e) => Promise.resolve(e), at = /* @__PURE__ */ (() => {
  try {
    return new CSSStyleSheet(), typeof new CSSStyleSheet().replaceSync == "function";
  } catch {
  }
  return !1;
})(), ne = [], be = [], $t = (e, t) => (n) => {
  e.push(n), M || (M = !0, t && p.$flags$ & 4 ? ft(W) : p.raf(W));
}, le = (e) => {
  for (let t = 0; t < e.length; t++)
    try {
      e[t](performance.now());
    } catch (n) {
      O(n);
    }
  e.length = 0;
}, W = () => {
  le(ne), le(be), (M = ne.length > 0) && p.raf(W);
}, ft = (e) => ct().then(e), dt = /* @__PURE__ */ $t(be, !0), ut = '.switch{--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:"Inter", sans-serif;display:inline-block;height:34px;position:relative;width:60px}.switch input{display:none}.slider{background-color:var(--nylas-base-300);bottom:0;cursor:pointer;left:0;position:absolute;right:0;top:0;transition:0.4s}.slider:before{background-color:var(--nylas-base-0);bottom:4px;content:"";height:32px;left:4px;position:absolute;transition:0.4s;width:32px}input:checked+.slider{background-color:var(--nylas-success)}input:checked+.slider:before{transform:translateX(32px)}.slider.round{border-radius:35px;width:72px;height:40px}.slider.round:before{border-radius:50%}', ht = ut, ve = et(class extends it {
  constructor() {
    super(), this.__registerHost(), this.__attachShadow(), this.nylasFormSwitchToggled = Oe(this, "nylasFormSwitchToggled", 7), this.name = "toggle-switch", this.checked = !1, this.label = "", this.isChecked = this.checked;
  }
  componentWillLoad() {
    this.isChecked = this.checked;
  }
  toggleCheck() {
    this.isChecked = !this.isChecked, this.nylasFormSwitchToggled.emit({
      checked: this.isChecked,
      name: this.name,
      label: this.label
    });
  }
  render() {
    return C("label", { key: "1586b4b0484716254ad8befbd9f99f7956e9c129", class: "switch", part: "ts_label" }, C("input", { key: "c7e9432dfe88d4c27bb146c3816f750fb7dc6851", type: "checkbox", part: "ts_input", name: this.name, checked: this.isChecked, onChange: () => this.toggleCheck() }), C("div", { key: "08980c1db3849f197b1780caa55bfe8e84ce0a92", class: "slider round", part: "ts_slider" }));
  }
  static get style() {
    return ht;
  }
}, [1, "toggle-switch", {
  name: [1],
  checked: [4],
  label: [1],
  isChecked: [32]
}]);
function pt() {
  if (typeof customElements > "u")
    return;
  ["toggle-switch"].forEach((t) => {
    switch (t) {
      case "toggle-switch":
        customElements.get(t) || customElements.define(t, ve);
        break;
    }
  });
}
const yt = ve, bt = pt;
export {
  yt as ToggleSwitch,
  bt as defineCustomElement
};
