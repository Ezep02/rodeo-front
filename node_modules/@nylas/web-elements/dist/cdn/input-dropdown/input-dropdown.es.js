const k = {
  allRenderFn: !1,
  cmpDidLoad: !0,
  cmpDidUnload: !1,
  cmpDidUpdate: !0,
  cmpDidRender: !0,
  cmpWillLoad: !0,
  cmpWillUpdate: !0,
  cmpWillRender: !0,
  connectedCallback: !0,
  disconnectedCallback: !0,
  element: !0,
  event: !0,
  hasRenderFn: !0,
  lifecycle: !0,
  hostListener: !0,
  hostListenerTargetWindow: !0,
  hostListenerTargetDocument: !0,
  hostListenerTargetBody: !0,
  hostListenerTargetParent: !1,
  hostListenerTarget: !0,
  member: !0,
  method: !0,
  mode: !0,
  observeAttribute: !0,
  prop: !0,
  propMutable: !0,
  reflect: !0,
  scoped: !0,
  shadowDom: !0,
  slot: !0,
  cssAnnotations: !0,
  state: !0,
  style: !0,
  formAssociated: !1,
  svg: !0,
  updatable: !0,
  vdomAttribute: !0,
  vdomXlink: !0,
  vdomClass: !0,
  vdomFunctional: !0,
  vdomKey: !0,
  vdomListener: !0,
  vdomRef: !0,
  vdomPropOrAttr: !0,
  vdomRender: !0,
  vdomStyle: !0,
  vdomText: !0,
  watchCallback: !0,
  taskQueue: !0,
  hotModuleReplacement: !1,
  isDebug: !1,
  isDev: !1,
  isTesting: !1,
  hydrateServerSide: !1,
  hydrateClientSide: !1,
  lifecycleDOMEvents: !1,
  lazyLoad: !1,
  profile: !1,
  slotRelocation: !0,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  appendChildSlotFix: !1,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  cloneNodeFix: !1,
  hydratedAttribute: !1,
  hydratedClass: !0,
  scriptDataOpts: !1,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  scopedSlotTextContentFix: !1,
  // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
  shadowDomShim: !1,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  slotChildNodesFix: !1,
  invisiblePrehydration: !0,
  propBoolean: !0,
  propNumber: !0,
  propString: !0,
  constructableCSS: !0,
  cmpShouldUpdate: !0,
  devTools: !1,
  shadowDelegatesFocus: !0,
  initializeNextTick: !1,
  asyncLoading: !1,
  asyncQueue: !1,
  transformTagName: !1,
  attachStyles: !0,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  experimentalSlotFixes: !1
};
let T, U, E, ie = !1, I = !1, M = !1, b = !1, N = null, j = !1;
const w = (t, e = "") => () => {
}, xe = "slot-fb{display:contents}slot-fb[hidden]{display:none}", q = "http://www.w3.org/1999/xlink", Q = {}, me = "http://www.w3.org/2000/svg", ke = "http://www.w3.org/1999/xhtml", Se = (t) => t != null, W = (t) => (t = typeof t, t === "object" || t === "function");
function Oe(t) {
  var e, s, n;
  return (n = (s = (e = t.head) === null || e === void 0 ? void 0 : e.querySelector('meta[name="csp-nonce"]')) === null || s === void 0 ? void 0 : s.getAttribute("content")) !== null && n !== void 0 ? n : void 0;
}
const O = (t, e, ...s) => {
  let n = null, o = null, l = null, i = !1, a = !1;
  const r = [], p = (c) => {
    for (let $ = 0; $ < c.length; $++)
      n = c[$], Array.isArray(n) ? p(n) : n != null && typeof n != "boolean" && ((i = typeof t != "function" && !W(n)) && (n = String(n)), i && a ? r[r.length - 1].$text$ += n : r.push(i ? H(null, n) : n), a = i);
  };
  if (p(s), e) {
    e.key && (o = e.key), e.name && (l = e.name);
    {
      const c = e.className || e.class;
      c && (e.class = typeof c != "object" ? c : Object.keys(c).filter(($) => c[$]).join(" "));
    }
  }
  if (typeof t == "function")
    return t(e === null ? {} : e, r, Le);
  const f = H(t, null);
  return f.$attrs$ = e, r.length > 0 && (f.$children$ = r), f.$key$ = o, f.$name$ = l, f;
}, H = (t, e) => {
  const s = {
    $flags$: 0,
    $tag$: t,
    $text$: e,
    $elm$: null,
    $children$: null
  };
  return s.$attrs$ = null, s.$key$ = null, s.$name$ = null, s;
}, we = {}, Te = (t) => t && t.$tag$ === we, Le = {
  forEach: (t, e) => t.map(X).forEach(e),
  map: (t, e) => t.map(X).map(e).map(Ce)
}, X = (t) => ({
  vattrs: t.$attrs$,
  vchildren: t.$children$,
  vkey: t.$key$,
  vname: t.$name$,
  vtag: t.$tag$,
  vtext: t.$text$
}), Ce = (t) => {
  if (typeof t.vtag == "function") {
    const s = Object.assign({}, t.vattrs);
    return t.vkey && (s.key = t.vkey), t.vname && (s.name = t.vname), O(t.vtag, s, ...t.vchildren || []);
  }
  const e = H(t.vtag, t.vtext);
  return e.$attrs$ = t.vattrs, e.$children$ = t.vchildren, e.$key$ = t.vkey, e.$name$ = t.vname, e;
}, Ee = (t) => it.map((e) => e(t)).find((e) => !!e), Ae = (t, e) => t != null && !W(t) ? e & 4 ? t === "false" ? !1 : t === "" || !!t : e & 2 ? parseFloat(t) : e & 1 ? String(t) : t : t, Re = (t) => t, De = (t, e, s) => {
  const n = Re(t);
  return {
    emit: (o) => _e(n, e, {
      bubbles: !!(s & 4),
      composed: !!(s & 2),
      cancelable: !!(s & 1),
      detail: o
    })
  };
}, _e = (t, e, s) => {
  const n = h.ce(e, s);
  return t.dispatchEvent(n), n;
}, G = /* @__PURE__ */ new WeakMap(), Ie = (t, e, s) => {
  let n = P.get(t);
  ct && s ? (n = n || new CSSStyleSheet(), typeof n == "string" ? n = e : n.replaceSync(e)) : n = e, P.set(t, n);
}, He = (t, e, s) => {
  var n;
  const o = le(e, s), l = P.get(o);
  if (t = t.nodeType === 11 ? t : v, l)
    if (typeof l == "string") {
      t = t.head || t;
      let i = G.get(t), a;
      if (i || G.set(t, i = /* @__PURE__ */ new Set()), !i.has(o)) {
        {
          a = v.createElement("style"), a.innerHTML = l;
          const r = (n = h.$nonce$) !== null && n !== void 0 ? n : Oe(v);
          r != null && a.setAttribute("nonce", r), t.insertBefore(a, t.querySelector("link"));
        }
        e.$flags$ & 4 && (a.innerHTML += xe), i && i.add(o);
      }
    } else t.adoptedStyleSheets.includes(l) || (t.adoptedStyleSheets = [...t.adoptedStyleSheets, l]);
  return o;
}, Fe = (t) => {
  const e = t.$cmpMeta$, s = t.$hostElement$, n = e.$flags$, o = w("attachStyles", e.$tagName$), l = He(s.shadowRoot ? s.shadowRoot : s.getRootNode(), e, t.$modeName$);
  n & 10 && (s["s-sc"] = l, s.classList.add(l + "-h"), n & 2 && s.classList.add(l + "-s")), o();
}, le = (t, e) => "sc-" + (e && t.$flags$ & 32 ? t.$tagName$ + "-" + e : t.$tagName$), J = (t, e, s, n, o, l) => {
  if (s !== n) {
    let i = te(t, e), a = e.toLowerCase();
    if (e === "class") {
      const r = t.classList, p = Y(s), f = Y(n);
      r.remove(...p.filter((c) => c && !f.includes(c))), r.add(...f.filter((c) => c && !p.includes(c)));
    } else if (e === "style") {
      for (const r in s)
        (!n || n[r] == null) && (r.includes("-") ? t.style.removeProperty(r) : t.style[r] = "");
      for (const r in n)
        (!s || n[r] !== s[r]) && (r.includes("-") ? t.style.setProperty(r, n[r]) : t.style[r] = n[r]);
    } else if (e !== "key")
      if (e === "ref")
        n && n(t);
      else if (!t.__lookupSetter__(e) && e[0] === "o" && e[1] === "n") {
        if (e[2] === "-" ? e = e.slice(3) : te(B, a) ? e = a.slice(2) : e = a[2] + e.slice(3), s || n) {
          const r = e.endsWith(re);
          e = e.replace(Be, ""), s && h.rel(t, e, s, r), n && h.ael(t, e, n, r);
        }
      } else {
        const r = W(n);
        if ((i || r && n !== null) && !o)
          try {
            if (t.tagName.includes("-"))
              t[e] = n;
            else {
              const f = n ?? "";
              e === "list" ? i = !1 : (s == null || t[e] != f) && (t[e] = f);
            }
          } catch {
          }
        let p = !1;
        a !== (a = a.replace(/^xlink\:?/, "")) && (e = a, p = !0), n == null || n === !1 ? (n !== !1 || t.getAttribute(e) === "") && (p ? t.removeAttributeNS(q, e) : t.removeAttribute(e)) : (!i || l & 4 || o) && !r && (n = n === !0 ? "" : n, p ? t.setAttributeNS(q, e, n) : t.setAttribute(e, n));
      }
  }
}, Pe = /\s/, Y = (t) => t ? t.split(Pe) : [], re = "Capture", Be = new RegExp(re + "$"), ae = (t, e, s, n) => {
  const o = e.$elm$.nodeType === 11 && e.$elm$.host ? e.$elm$.host : e.$elm$, l = t && t.$attrs$ || Q, i = e.$attrs$ || Q;
  for (n in l)
    n in i || J(o, n, l[n], void 0, s, e.$flags$);
  for (n in i)
    J(o, n, l[n], i[n], s, e.$flags$);
}, F = (t, e, s, n) => {
  const o = e.$children$[s];
  let l = 0, i, a, r;
  if (ie || (M = !0, o.$tag$ === "slot" && (T && n.classList.add(T + "-s"), o.$flags$ |= o.$children$ ? (
    // slot element has fallback content
    2
  ) : (
    // slot element does not have fallback content
    1
  ))), o.$text$ !== null)
    i = o.$elm$ = v.createTextNode(o.$text$);
  else if (o.$flags$ & 1)
    i = o.$elm$ = v.createTextNode("");
  else {
    if (b || (b = o.$tag$ === "svg"), i = o.$elm$ = v.createElementNS(b ? me : ke, o.$flags$ & 2 ? "slot-fb" : o.$tag$), b && o.$tag$ === "foreignObject" && (b = !1), ae(null, o, b), Se(T) && i["s-si"] !== T && i.classList.add(i["s-si"] = T), o.$children$)
      for (l = 0; l < o.$children$.length; ++l)
        a = F(t, o, l, i), a && i.appendChild(a);
    o.$tag$ === "svg" ? b = !1 : i.tagName === "foreignObject" && (b = !0);
  }
  return i["s-hn"] = E, o.$flags$ & 3 && (i["s-sr"] = !0, i["s-cr"] = U, i["s-sn"] = o.$name$ || "", r = t && t.$children$ && t.$children$[s], r && r.$tag$ === o.$tag$ && t.$elm$ && A(t.$elm$, !1)), i;
}, A = (t, e) => {
  h.$flags$ |= 1;
  const s = t.childNodes;
  for (let n = s.length - 1; n >= 0; n--) {
    const o = s[n];
    o["s-hn"] !== E && o["s-ol"] && (fe(o).insertBefore(o, K(o)), o["s-ol"].remove(), o["s-ol"] = void 0, o["s-sh"] = void 0, M = !0), e && A(o, e);
  }
  h.$flags$ &= -2;
}, ce = (t, e, s, n, o, l) => {
  let i = t["s-cr"] && t["s-cr"].parentNode || t, a;
  for (i.shadowRoot && i.tagName === E && (i = i.shadowRoot); o <= l; ++o)
    n[o] && (a = F(null, s, o, t), a && (n[o].$elm$ = a, i.insertBefore(a, K(e))));
}, de = (t, e, s) => {
  for (let n = e; n <= s; ++n) {
    const o = t[n];
    if (o) {
      const l = o.$elm$;
      ue(o), l && (I = !0, l["s-ol"] ? l["s-ol"].remove() : A(l, !0), l.remove());
    }
  }
}, Ue = (t, e, s, n, o = !1) => {
  let l = 0, i = 0, a = 0, r = 0, p = e.length - 1, f = e[0], c = e[p], $ = n.length - 1, d = n[0], u = n[$], y, g;
  for (; l <= p && i <= $; )
    if (f == null)
      f = e[++l];
    else if (c == null)
      c = e[--p];
    else if (d == null)
      d = n[++i];
    else if (u == null)
      u = n[--$];
    else if (_(f, d, o))
      L(f, d, o), f = e[++l], d = n[++i];
    else if (_(c, u, o))
      L(c, u, o), c = e[--p], u = n[--$];
    else if (_(f, u, o))
      (f.$tag$ === "slot" || u.$tag$ === "slot") && A(f.$elm$.parentNode, !1), L(f, u, o), t.insertBefore(f.$elm$, c.$elm$.nextSibling), f = e[++l], u = n[--$];
    else if (_(c, d, o))
      (f.$tag$ === "slot" || u.$tag$ === "slot") && A(c.$elm$.parentNode, !1), L(c, d, o), t.insertBefore(c.$elm$, f.$elm$), c = e[--p], d = n[++i];
    else {
      for (a = -1, r = l; r <= p; ++r)
        if (e[r] && e[r].$key$ !== null && e[r].$key$ === d.$key$) {
          a = r;
          break;
        }
      a >= 0 ? (g = e[a], g.$tag$ !== d.$tag$ ? y = F(e && e[i], s, a, t) : (L(g, d, o), e[a] = void 0, y = g.$elm$), d = n[++i]) : (y = F(e && e[i], s, i, t), d = n[++i]), y && fe(f.$elm$).insertBefore(y, K(f.$elm$));
    }
  l > p ? ce(t, n[$ + 1] == null ? null : n[$ + 1].$elm$, s, n, i, $) : i > $ && de(e, l, p);
}, _ = (t, e, s = !1) => t.$tag$ === e.$tag$ ? t.$tag$ === "slot" ? t.$name$ === e.$name$ : s ? !0 : t.$key$ === e.$key$ : !1, K = (t) => t && t["s-ol"] || t, fe = (t) => (t["s-ol"] ? t["s-ol"] : t).parentNode, L = (t, e, s = !1) => {
  const n = e.$elm$ = t.$elm$, o = t.$children$, l = e.$children$, i = e.$tag$, a = e.$text$;
  let r;
  a === null ? (b = i === "svg" ? !0 : i === "foreignObject" ? !1 : b, i === "slot" || ae(t, e, b), o !== null && l !== null ? Ue(n, o, e, l, s) : l !== null ? (t.$text$ !== null && (n.textContent = ""), ce(n, null, e, l, 0, l.length - 1)) : o !== null && de(o, 0, o.length - 1), b && i === "svg" && (b = !1)) : (r = n["s-cr"]) ? r.parentNode.textContent = a : t.$text$ !== a && (n.data = a);
}, $e = (t) => {
  const e = t.childNodes;
  for (const s of e)
    if (s.nodeType === 1) {
      if (s["s-sr"]) {
        const n = s["s-sn"];
        s.hidden = !1;
        for (const o of e)
          if (o !== s) {
            if (o["s-hn"] !== s["s-hn"] || n !== "") {
              if (o.nodeType === 1 && (n === o.getAttribute("slot") || n === o["s-sn"])) {
                s.hidden = !0;
                break;
              }
            } else if (o.nodeType === 1 || o.nodeType === 3 && o.textContent.trim() !== "") {
              s.hidden = !0;
              break;
            }
          }
      }
      $e(s);
    }
}, x = [], pe = (t) => {
  let e, s, n;
  for (const o of t.childNodes) {
    if (o["s-sr"] && (e = o["s-cr"]) && e.parentNode) {
      s = e.parentNode.childNodes;
      const l = o["s-sn"];
      for (n = s.length - 1; n >= 0; n--)
        if (e = s[n], !e["s-cn"] && !e["s-nr"] && e["s-hn"] !== o["s-hn"] && !k.experimentalSlotFixes)
          if (Z(e, l)) {
            let i = x.find((a) => a.$nodeToRelocate$ === e);
            I = !0, e["s-sn"] = e["s-sn"] || l, i ? (i.$nodeToRelocate$["s-sh"] = o["s-hn"], i.$slotRefNode$ = o) : (e["s-sh"] = o["s-hn"], x.push({
              $slotRefNode$: o,
              $nodeToRelocate$: e
            })), e["s-sr"] && x.map((a) => {
              Z(a.$nodeToRelocate$, e["s-sn"]) && (i = x.find((r) => r.$nodeToRelocate$ === e), i && !a.$slotRefNode$ && (a.$slotRefNode$ = i.$slotRefNode$));
            });
          } else x.some((i) => i.$nodeToRelocate$ === e) || x.push({
            $nodeToRelocate$: e
          });
    }
    o.nodeType === 1 && pe(o);
  }
}, Z = (t, e) => t.nodeType === 1 ? t.getAttribute("slot") === null && e === "" || t.getAttribute("slot") === e : t["s-sn"] === e ? !0 : e === "", ue = (t) => {
  t.$attrs$ && t.$attrs$.ref && t.$attrs$.ref(null), t.$children$ && t.$children$.map(ue);
}, je = (t, e, s = !1) => {
  var n, o, l, i, a;
  const r = t.$hostElement$, p = t.$cmpMeta$, f = t.$vnode$ || H(null, null), c = Te(e) ? e : O(null, null, e);
  if (E = r.tagName, p.$attrsToReflect$ && (c.$attrs$ = c.$attrs$ || {}, p.$attrsToReflect$.map(([$, d]) => c.$attrs$[d] = r[$])), s && c.$attrs$)
    for (const $ of Object.keys(c.$attrs$))
      r.hasAttribute($) && !["key", "ref", "style", "class"].includes($) && (c.$attrs$[$] = r[$]);
  c.$tag$ = null, c.$flags$ |= 4, t.$vnode$ = c, c.$elm$ = f.$elm$ = r.shadowRoot || r, T = r["s-sc"], U = r["s-cr"], ie = (p.$flags$ & 1) !== 0, I = !1, L(f, c, s);
  {
    if (h.$flags$ |= 1, M) {
      pe(c.$elm$);
      for (const $ of x) {
        const d = $.$nodeToRelocate$;
        if (!d["s-ol"]) {
          const u = v.createTextNode("");
          u["s-nr"] = d, d.parentNode.insertBefore(d["s-ol"] = u, d);
        }
      }
      for (const $ of x) {
        const d = $.$nodeToRelocate$, u = $.$slotRefNode$;
        if (u) {
          const y = u.parentNode;
          let g = u.nextSibling;
          {
            let S = (n = d["s-ol"]) === null || n === void 0 ? void 0 : n.previousSibling;
            for (; S; ) {
              let m = (o = S["s-nr"]) !== null && o !== void 0 ? o : null;
              if (m && m["s-sn"] === d["s-sn"] && y === m.parentNode && (m = m.nextSibling, !m || !m["s-nr"])) {
                g = m;
                break;
              }
              S = S.previousSibling;
            }
          }
          (!g && y !== d.parentNode || d.nextSibling !== g) && d !== g && (!d["s-hn"] && d["s-ol"] && (d["s-hn"] = d["s-ol"].parentNode.nodeName), y.insertBefore(d, g), d.nodeType === 1 && (d.hidden = (l = d["s-ih"]) !== null && l !== void 0 ? l : !1));
        } else
          d.nodeType === 1 && (s && (d["s-ih"] = (i = d.hidden) !== null && i !== void 0 ? i : !1), d.hidden = !0);
      }
    }
    I && $e(c.$elm$), h.$flags$ &= -2, x.length = 0;
  }
  if (k.experimentalScopedSlotChanges && p.$flags$ & 2)
    for (const $ of c.$elm$.childNodes)
      $["s-hn"] !== E && !$["s-sh"] && (s && $["s-ih"] == null && ($["s-ih"] = (a = $.hidden) !== null && a !== void 0 ? a : !1), $.hidden = !0);
  U = void 0;
}, ze = (t, e) => {
}, he = (t, e) => (t.$flags$ |= 16, ze(t, t.$ancestorComponent$), $t(() => Me(t, e))), Me = (t, e) => {
  const s = t.$hostElement$, n = w("scheduleUpdate", t.$cmpMeta$.$tagName$), o = s;
  let l;
  return e ? l = C(o, "componentWillLoad") : l = C(o, "componentWillUpdate"), l = V(l, () => C(o, "componentWillRender")), n(), V(l, () => Ke(t, o, e));
}, V = (t, e) => We(t) ? t.then(e) : e(), We = (t) => t instanceof Promise || t && t.then && typeof t.then == "function", Ke = async (t, e, s) => {
  const n = t.$hostElement$, o = w("update", t.$cmpMeta$.$tagName$);
  n["s-rc"], s && Fe(t);
  const l = w("render", t.$cmpMeta$.$tagName$);
  Ne(t, e, n, s), l(), o(), qe(t);
}, Ne = (t, e, s, n) => {
  try {
    N = e, e = e.render && e.render(), t.$flags$ &= -17, t.$flags$ |= 2, (k.hasRenderFn || k.reflect) && (k.vdomRender || k.reflect) && (k.hydrateServerSide || je(t, e, n));
  } catch (r) {
    D(r, t.$hostElement$);
  }
  return N = null, null;
}, qe = (t) => {
  const e = t.$cmpMeta$.$tagName$, s = t.$hostElement$, n = w("postUpdate", e), o = s;
  t.$ancestorComponent$, C(o, "componentDidRender"), t.$flags$ & 64 ? (C(o, "componentDidUpdate"), n()) : (t.$flags$ |= 64, C(o, "componentDidLoad"), n());
}, C = (t, e, s) => {
  if (t && t[e])
    try {
      return t[e](s);
    } catch (n) {
      D(n);
    }
}, Qe = (t, e) => R(t).$instanceValues$.get(e), Xe = (t, e, s, n) => {
  const o = R(t), l = t, i = o.$instanceValues$.get(e), a = o.$flags$, r = l;
  s = Ae(s, n.$members$[e][0]);
  const p = Number.isNaN(i) && Number.isNaN(s);
  if (s !== i && !p) {
    o.$instanceValues$.set(e, s);
    {
      if (n.$watchers$ && a & 128) {
        const c = n.$watchers$[e];
        c && c.map(($) => {
          try {
            r[$](s, i, e);
          } catch (d) {
            D(d, l);
          }
        });
      }
      if ((a & 18) === 2) {
        if (r.componentShouldUpdate && r.componentShouldUpdate(s, i, e) === !1)
          return;
        he(o, !1);
      }
    }
  }
}, Ge = (t, e, s) => {
  var n;
  const o = t.prototype;
  if (e.$members$) {
    t.watchers && (e.$watchers$ = t.watchers);
    const l = Object.entries(e.$members$);
    l.map(([i, [a]]) => {
      (a & 31 || a & 32) && Object.defineProperty(o, i, {
        get() {
          return Qe(this, i);
        },
        set(r) {
          Xe(this, i, r, e);
        },
        configurable: !0,
        enumerable: !0
      });
    });
    {
      const i = /* @__PURE__ */ new Map();
      o.attributeChangedCallback = function(a, r, p) {
        h.jmp(() => {
          var f;
          const c = i.get(a);
          if (this.hasOwnProperty(c))
            p = this[c], delete this[c];
          else {
            if (o.hasOwnProperty(c) && typeof this[c] == "number" && this[c] == p)
              return;
            if (c == null) {
              const $ = R(this), d = $ == null ? void 0 : $.$flags$;
              if (d && !(d & 8) && d & 128 && p !== r) {
                const y = this, g = (f = e.$watchers$) === null || f === void 0 ? void 0 : f[a];
                g == null || g.forEach((S) => {
                  y[S] != null && y[S].call(y, p, r, a);
                });
              }
              return;
            }
          }
          this[c] = p === null && typeof this[c] == "boolean" ? !1 : p;
        });
      }, t.observedAttributes = Array.from(/* @__PURE__ */ new Set([
        ...Object.keys((n = e.$watchers$) !== null && n !== void 0 ? n : {}),
        ...l.filter(
          ([a, r]) => r[0] & 15
          /* MEMBER_FLAGS.HasAttribute */
        ).map(([a, r]) => {
          var p;
          const f = r[1] || a;
          return i.set(f, a), r[0] & 512 && ((p = e.$attrsToReflect$) === null || p === void 0 || p.push([a, f])), f;
        })
      ]));
    }
  }
  return t;
}, Je = async (t, e, s, n) => {
  let o;
  if (!(e.$flags$ & 32) && (e.$flags$ |= 32, o = t.constructor, customElements.whenDefined(s.$tagName$).then(() => e.$flags$ |= 128), o.style)) {
    let i = o.style;
    typeof i != "string" && (i = i[e.$modeName$ = Ee(t)]);
    const a = le(s, e.$modeName$);
    if (!P.has(a)) {
      const r = w("registerStyles", s.$tagName$);
      Ie(a, i, !!(s.$flags$ & 1)), r();
    }
  }
  e.$ancestorComponent$, he(e, !0);
}, ee = (t) => {
}, Ye = (t) => {
  if (!(h.$flags$ & 1)) {
    const e = R(t), s = e.$cmpMeta$, n = w("connectedCallback", s.$tagName$);
    e.$flags$ & 1 ? (ge(t, e, s.$listeners$), e != null && e.$lazyInstance$ ? ee(e.$lazyInstance$) : e != null && e.$onReadyPromise$ && e.$onReadyPromise$.then(() => ee(e.$lazyInstance$))) : (e.$flags$ |= 1, // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
    s.$flags$ & 12 && Ze(t), s.$members$ && Object.entries(s.$members$).map(([o, [l]]) => {
      if (l & 31 && t.hasOwnProperty(o)) {
        const i = t[o];
        delete t[o], t[o] = i;
      }
    }), Je(t, e, s)), n();
  }
}, Ze = (t) => {
  const e = t["s-cr"] = v.createComment("");
  e["s-cn"] = !0, t.insertBefore(e, t.firstChild);
}, Ve = async (t) => {
  if (!(h.$flags$ & 1)) {
    const e = R(t);
    e.$rmListeners$ && (e.$rmListeners$.map((s) => s()), e.$rmListeners$ = void 0);
  }
}, et = (t, e) => {
  const s = {
    $flags$: e[0],
    $tagName$: e[1]
  };
  s.$members$ = e[2], s.$listeners$ = e[3], s.$watchers$ = t.$watchers$, s.$attrsToReflect$ = [], !se && s.$flags$ & 1 && (s.$flags$ |= 8);
  const n = t.prototype.connectedCallback, o = t.prototype.disconnectedCallback;
  return Object.assign(t.prototype, {
    __registerHost() {
      ot(this, s);
    },
    connectedCallback() {
      Ye(this), n && n.call(this);
    },
    disconnectedCallback() {
      Ve(this), o && o.call(this);
    },
    __attachShadow() {
      se ? this.attachShadow({
        mode: "open",
        delegatesFocus: !!(s.$flags$ & 16)
      }) : this.shadowRoot = this;
    }
  }), t.is = s.$tagName$, Ge(t, s);
}, ge = (t, e, s, n) => {
  s && s.map(([o, l, i]) => {
    const a = st(t, o), r = tt(e, i), p = nt(o);
    h.ael(a, l, r, p), (e.$rmListeners$ = e.$rmListeners$ || []).push(() => h.rel(a, l, r, p));
  });
}, tt = (t, e) => (s) => {
  try {
    k.lazyLoad || t.$hostElement$[e](s);
  } catch (n) {
    D(n);
  }
}, st = (t, e) => e & 4 ? v : e & 8 ? B : e & 16 ? v.body : t, nt = (t) => rt ? {
  passive: (t & 1) !== 0,
  capture: (t & 2) !== 0
} : (t & 2) !== 0, ye = /* @__PURE__ */ new WeakMap(), R = (t) => ye.get(t), ot = (t, e) => {
  const s = {
    $flags$: 0,
    $hostElement$: t,
    $cmpMeta$: e,
    $instanceValues$: /* @__PURE__ */ new Map()
  };
  return ge(t, s, e.$listeners$), ye.set(t, s);
}, te = (t, e) => e in t, D = (t, e) => (0, console.error)(t, e), P = /* @__PURE__ */ new Map(), it = [], B = typeof window < "u" ? window : {}, v = B.document || { head: {} }, lt = B.HTMLElement || class {
}, h = {
  $flags$: 0,
  $resourcesUrl$: "",
  jmp: (t) => t(),
  raf: (t) => requestAnimationFrame(t),
  ael: (t, e, s, n) => t.addEventListener(e, s, n),
  rel: (t, e, s, n) => t.removeEventListener(e, s, n),
  ce: (t, e) => new CustomEvent(t, e)
}, se = (
  // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
  !0
), rt = /* @__PURE__ */ (() => {
  let t = !1;
  try {
    v.addEventListener("e", null, Object.defineProperty({}, "passive", {
      get() {
        t = !0;
      }
    }));
  } catch {
  }
  return t;
})(), at = (t) => Promise.resolve(t), ct = /* @__PURE__ */ (() => {
  try {
    return new CSSStyleSheet(), typeof new CSSStyleSheet().replaceSync == "function";
  } catch {
  }
  return !1;
})(), ne = [], be = [], dt = (t, e) => (s) => {
  t.push(s), j || (j = !0, e && h.$flags$ & 4 ? ft(z) : h.raf(z));
}, oe = (t) => {
  for (let e = 0; e < t.length; e++)
    try {
      t[e](performance.now());
    } catch (s) {
      D(s);
    }
  t.length = 0;
}, z = () => {
  oe(ne), oe(be), (j = ne.length > 0) && h.raf(z);
}, ft = (t) => at().then(t), $t = /* @__PURE__ */ dt(be, !0), pt = ':host{display:block;position:relative;--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:"Inter", sans-serif}@media screen and (max-width: 768px){:host{position:unset}}.dropdown{display:inline-block}.dropbtn{color:var(--nylas-base-800);padding:10px;font-size:16px;font-family:var(--nylas-font-family);cursor:pointer;display:flex;gap:0.5rem;background:transparent;border:none;border-radius:var(--nylas-border-radius-2x);width:50px;padding:14px 16px;border-radius:var(--nylas-border-radius-2x)}.dropbtn.focus{background:transparent}.dropbtn:hover,.dropbtn:active{outline:1px solid var(--nylas-primary)}.dropbtn:active{outline:2px solid var(--nylas-primary)}.dropbtn span.chevron{display:flex;align-self:center}.dropbtn span.open{transform:rotate(90deg)}.dropbtn span.closed{transform:rotate(270deg)}.dropbtn span.selected-option{text-overflow:ellipsis;overflow:hidden;white-space:nowrap;max-width:144px;font-size:14px;line-height:20px}@media screen and (max-width: 768px){.dropbtn span.selected-option{max-width:124px;font-size:16px}}.dropdown-content{display:block;margin-top:0.5rem;background-color:var(--nylas-base-0);max-width:306px;width:max-content;max-height:336px;overflow:auto;z-index:1;border-radius:4px;position:absolute;box-shadow:0px 4px 6px -2px rgba(0, 0, 0, 0.05);box-shadow:0px 10px 15px -3px rgba(0, 0, 0, 0.1)}@media screen and (max-width: 768px){.dropdown-content{right:0;width:325px;max-width:unset}}.search-box{border-bottom:1px solid var(--nylas-base-200);padding:10px;position:sticky;top:0;background:var(--nylas-base-0)}.search-box .icon{position:absolute;top:1.25rem;left:1.25rem;color:var(--nylas-base-300)}.dropdown-content ul{padding:0;list-style-type:none;color:var(--nylas-base-900);max-height:336px}.dropdown-content ul li{padding:16px, 12px, 16px, 12px;color:black;padding:12px 16px;text-decoration:none;display:block;font-family:inherit;font-size:14px;font-weight:400;line-height:20px;letter-spacing:0px;text-align:left;cursor:pointer}.dropdown-content ul li:hover,.dropdown-content ul li:focus{background-color:var(--nylas-base-100)}.dropdown-content .selected{background-color:#e7e7e7}input[type=text]{width:-webkit-fill-available;padding:inherit;border:1px solid #ccc;border-radius:4px;position:sticky;background:no-repeat scroll 7px 7px;padding-left:30px;background-size:16px 16px}', ut = pt, ve = et(class extends lt {
  constructor() {
    super(), this.__registerHost(), this.__attachShadow(), this.inputOptionChanged = De(this, "inputOptionChanged", 7), this.name = void 0, this.options = [], this.defaultInputOption = void 0, this.inputValue = void 0, this.pluralizedLabel = "", this.filterable = !1, this.selectedOption = this.defaultInputOption || null, this.isOpen = !1, this.typedValue = "", this.filteredOptions = [...this.options], this.ariaActivedescendant = "", this.shouldAutoScroll = !1;
  }
  optionsChangedHandler(e, s) {
    e !== s && (this.filteredOptions = this.getFilteredOptions(e));
  }
  defaultSelectedOptionChangedHandler(e, s) {
    (e == null ? void 0 : e.label) !== (s == null ? void 0 : s.label) && (this.selectedOption = e);
  }
  inputValueChangedHandler(e, s) {
    e !== s && (this.filteredOptions = this.getFilteredOptions(this.options));
  }
  componentWillLoad() {
    this.filteredOptions = this.getFilteredOptions(this.options), !this.selectedOption && this.defaultInputOption && (this.selectedOption = this.defaultInputOption), !this.selectedOption && this.options.length > 0 && (this.selectedOption = this.options[0]);
  }
  getFilteredOptions(e) {
    return this.filterable ? e.filter((s) => {
      var n, o, l, i;
      return ((o = s == null ? void 0 : s.value) == null ? void 0 : o.toString().toLowerCase().includes((n = this.typedValue) == null ? void 0 : n.toLowerCase())) || ((i = s == null ? void 0 : s.label) == null ? void 0 : i.toLowerCase().includes((l = this.typedValue) == null ? void 0 : l.toLowerCase()));
    }) : e;
  }
  toggleDropdown() {
    this.isOpen = !this.isOpen;
  }
  selectOption(e) {
    this.selectedOption = e, this.toggleDropdown(), this.inputOptionChanged.emit({
      value: e.value,
      name: this.name
    });
  }
  handleOnInput(e) {
    const s = e.target.value;
    this.typedValue = s;
    const n = this.options.findIndex((o) => o.label.toLowerCase().includes(s.toLowerCase()));
    n > -1 && this.scrollToViewWithinParent(n), this.inputOptionChanged.emit({
      value: s,
      name: this.name
    });
  }
  scrollToViewWithinParent(e) {
    var a;
    const s = this.options[e], n = (a = this.el.shadowRoot) == null ? void 0 : a.getElementById(s.value.toString()), o = this.optionsRef;
    if (this.ariaActivedescendant = s.value.toString(), !n || !o)
      return;
    const l = n.getBoundingClientRect(), i = o.getBoundingClientRect();
    l.top < i.top ? o.scrollTop -= i.top - l.top : l.bottom > i.bottom && (o.scrollTop += l.bottom - i.bottom);
  }
  handleSelectButtonKeyDown(e) {
    var s;
    switch (e.key) {
      case "ArrowDown":
      case "Enter":
        e.preventDefault(), this.isOpen || this.toggleDropdown(), (s = this.inputRef) == null || s.focus();
        break;
      case "Escape":
        this.isOpen = !1;
        break;
    }
  }
  handleClick(e) {
    if (this.isOpen) {
      const s = e.target.value, n = this.options.findIndex((o) => o.label.toLowerCase().includes(s.toLowerCase()));
      n > -1 && setTimeout(() => {
        this.scrollToViewWithinParent(n);
      }, 10);
    }
  }
  handleListboxKeydown(e) {
    var o, l;
    const s = this.filteredOptions, n = s.findIndex((i) => i.value === this.ariaActivedescendant);
    if (e.key === "ArrowDown" || e.key === "Tab" && !e.shiftKey) {
      if (e.preventDefault(), n === s.length - 1) {
        this.ariaActivedescendant = "", (o = this.inputRef) == null || o.focus();
        return;
      }
      const i = n + 1 < s.length ? n + 1 : 0;
      this.ariaActivedescendant = s[i].value, this.focusOption(i);
    } else if (e.key === "ArrowUp" || e.key === "Tab" && e.shiftKey) {
      if (e.preventDefault(), n === 0) {
        this.ariaActivedescendant = "", (l = this.inputRef) == null || l.focus();
        return;
      }
      const i = n - 1 >= 0 ? n - 1 : s.length - 1;
      this.ariaActivedescendant = s[i].value, this.focusOption(i);
    } else e.key === "Enter" ? (e.preventDefault(), this.ariaActivedescendant && this.selectOption(s[n])) : e.key === "Escape" && (this.isOpen = !1);
  }
  focusOption(e) {
    var l;
    const s = this.filteredOptions[e];
    if (!s)
      return;
    const n = s.value, o = (l = this.el.shadowRoot) == null ? void 0 : l.getElementById(n);
    o && (o.focus(), o.scrollIntoView({ behavior: "smooth", block: "nearest" }));
  }
  handleComboboxKeyDown(e) {
    if (e.key === "ArrowDown" || e.key == "Tab" && !e.shiftKey) {
      if (e.preventDefault(), !this.isOpen) {
        this.isOpen = !0, this.shouldAutoScroll = !0;
        return;
      }
      this.ariaActivedescendant = this.filteredOptions[0].value, this.focusOption(0);
    } else e.key === "ArrowUp" || e.key === "Tab" && e.shiftKey ? (e.preventDefault(), this.ariaActivedescendant = this.filteredOptions[this.filteredOptions.length - 1].value, this.focusOption(this.filteredOptions.length - 1)) : e.key === "Escape" && (this.isOpen = !1);
  }
  handleOutsideClick(e) {
    !e.composedPath().includes(this.el) && this.isOpen && (this.isOpen = !1);
  }
  render() {
    return O("div", { key: "9d5c9dfd32cc331198fdda58da51ed89cee2ede0", class: "dropdown", part: "id_dropdown" }, O("input", { key: "6aa03686c990fd7fb44945807b5b67c53a762f91", type: "text", name: this.name, id: this.name, part: "id_dropdown-input", class: { dropbtn: !0, open: this.isOpen }, value: this.inputValue, onClick: (e) => {
      this.toggleDropdown(), this.shouldAutoScroll = !0, this.handleClick(e);
    }, "aria-haspopup": "listbox", "aria-label": this.name, "aria-expanded": this.isOpen ? "true" : "false", onKeyDown: (e) => this.handleComboboxKeyDown(e), onInput: (e) => this.handleOnInput(e) }), this.isOpen ? O("div", { class: "dropdown-content", part: "id_dropdown-content", ref: (e) => this.optionsRef = e }, O("ul", { tabindex: "-1", role: "listbox", "aria-label": this.name, "aria-activedescendant": this.ariaActivedescendant, onKeyDown: (e) => this.handleListboxKeydown(e) }, this.filteredOptions.map((e) => O("li", { tabindex: "0", key: e.value, id: e.value, onClick: () => this.selectOption(e), role: "option", class: {
      focused: this.ariaActivedescendant === e.value.toString()
    } }, e.labelHTML ? e.labelHTML : e.label)))) : null);
  }
  get el() {
    return this;
  }
  static get watchers() {
    return {
      options: ["optionsChangedHandler"],
      defaultInputOption: ["defaultSelectedOptionChangedHandler"],
      inputValue: ["inputValueChangedHandler"]
    };
  }
  static get style() {
    return ut;
  }
}, [1, "input-dropdown", {
  name: [1],
  options: [16],
  defaultInputOption: [16],
  inputValue: [1, "input-value"],
  pluralizedLabel: [1, "pluralized-label"],
  filterable: [4],
  selectedOption: [32],
  isOpen: [32],
  typedValue: [32],
  filteredOptions: [32],
  ariaActivedescendant: [32],
  shouldAutoScroll: [32]
}, [[6, "click", "handleOutsideClick"]], {
  options: ["optionsChangedHandler"],
  defaultInputOption: ["defaultSelectedOptionChangedHandler"],
  inputValue: ["inputValueChangedHandler"]
}]);
function ht() {
  if (typeof customElements > "u")
    return;
  ["input-dropdown"].forEach((e) => {
    switch (e) {
      case "input-dropdown":
        customElements.get(e) || customElements.define(e, ve);
        break;
    }
  });
}
const yt = ve, bt = ht;
export {
  yt as InputDropdown,
  bt as defineCustomElement
};
