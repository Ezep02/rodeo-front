const x = {
  allRenderFn: !1,
  cmpDidLoad: !0,
  cmpDidUnload: !1,
  cmpDidUpdate: !0,
  cmpDidRender: !0,
  cmpWillLoad: !0,
  cmpWillUpdate: !0,
  cmpWillRender: !0,
  connectedCallback: !0,
  disconnectedCallback: !0,
  element: !0,
  event: !0,
  hasRenderFn: !0,
  lifecycle: !0,
  hostListener: !0,
  hostListenerTargetWindow: !0,
  hostListenerTargetDocument: !0,
  hostListenerTargetBody: !0,
  hostListenerTargetParent: !1,
  hostListenerTarget: !0,
  member: !0,
  method: !0,
  mode: !0,
  observeAttribute: !0,
  prop: !0,
  propMutable: !0,
  reflect: !0,
  scoped: !0,
  shadowDom: !0,
  slot: !0,
  cssAnnotations: !0,
  state: !0,
  style: !0,
  formAssociated: !1,
  svg: !0,
  updatable: !0,
  vdomAttribute: !0,
  vdomXlink: !0,
  vdomClass: !0,
  vdomFunctional: !0,
  vdomKey: !0,
  vdomListener: !0,
  vdomRef: !0,
  vdomPropOrAttr: !0,
  vdomRender: !0,
  vdomStyle: !0,
  vdomText: !0,
  watchCallback: !0,
  taskQueue: !0,
  hotModuleReplacement: !1,
  isDebug: !1,
  isDev: !1,
  isTesting: !1,
  hydrateServerSide: !1,
  hydrateClientSide: !1,
  lifecycleDOMEvents: !1,
  lazyLoad: !1,
  profile: !1,
  slotRelocation: !0,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  appendChildSlotFix: !1,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  cloneNodeFix: !1,
  hydratedAttribute: !1,
  hydratedClass: !0,
  scriptDataOpts: !1,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  scopedSlotTextContentFix: !1,
  // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
  shadowDomShim: !1,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  slotChildNodesFix: !1,
  invisiblePrehydration: !0,
  propBoolean: !0,
  propNumber: !0,
  propString: !0,
  constructableCSS: !0,
  cmpShouldUpdate: !0,
  devTools: !1,
  shadowDelegatesFocus: !0,
  initializeNextTick: !1,
  asyncLoading: !1,
  asyncQueue: !1,
  transformTagName: !1,
  attachStyles: !0,
  // TODO(STENCIL-914): remove this option when `experimentalSlotFixes` is the default behavior
  experimentalSlotFixes: !1
};
let E, H, A, oe = !1, D = !1, M = !1, b = !1, G = null, q = !1;
const L = (e, t = "") => () => {
}, ve = "slot-fb{display:contents}slot-fb[hidden]{display:none}", Q = "http://www.w3.org/1999/xlink", X = {}, Se = "http://www.w3.org/2000/svg", ke = "http://www.w3.org/1999/xhtml", xe = (e) => e != null, W = (e) => (e = typeof e, e === "object" || e === "function");
function Te(e) {
  var t, n, s;
  return (s = (n = (t = e.head) === null || t === void 0 ? void 0 : t.querySelector('meta[name="csp-nonce"]')) === null || n === void 0 ? void 0 : n.getAttribute("content")) !== null && s !== void 0 ? s : void 0;
}
const y = (e, t, ...n) => {
  let s = null, l = null, i = null, o = !1, a = !1;
  const r = [], u = (c) => {
    for (let d = 0; d < c.length; d++)
      s = c[d], Array.isArray(s) ? u(s) : s != null && typeof s != "boolean" && ((o = typeof e != "function" && !W(s)) && (s = String(s)), o && a ? r[r.length - 1].$text$ += s : r.push(o ? U(null, s) : s), a = o);
  };
  if (u(n), t) {
    t.key && (l = t.key), t.name && (i = t.name);
    {
      const c = t.className || t.class;
      c && (t.class = typeof c != "object" ? c : Object.keys(c).filter((d) => c[d]).join(" "));
    }
  }
  if (typeof e == "function")
    return e(t === null ? {} : t, r, Re);
  const $ = U(e, null);
  return $.$attrs$ = t, r.length > 0 && ($.$children$ = r), $.$key$ = l, $.$name$ = i, $;
}, U = (e, t) => {
  const n = {
    $flags$: 0,
    $tag$: e,
    $text$: t,
    $elm$: null,
    $children$: null
  };
  return n.$attrs$ = null, n.$key$ = null, n.$name$ = null, n;
}, Le = {}, Ee = (e) => e && e.$tag$ === Le, Re = {
  forEach: (e, t) => e.map(I).forEach(t),
  map: (e, t) => e.map(I).map(t).map(_e)
}, I = (e) => ({
  vattrs: e.$attrs$,
  vchildren: e.$children$,
  vkey: e.$key$,
  vname: e.$name$,
  vtag: e.$tag$,
  vtext: e.$text$
}), _e = (e) => {
  if (typeof e.vtag == "function") {
    const n = Object.assign({}, e.vattrs);
    return e.vkey && (n.key = e.vkey), e.vname && (n.name = e.vname), y(e.vtag, n, ...e.vchildren || []);
  }
  const t = U(e.vtag, e.vtext);
  return t.$attrs$ = e.vattrs, t.$children$ = e.vchildren, t.$key$ = e.vkey, t.$name$ = e.vname, t;
}, Ae = (e) => ot.map((t) => t(e)).find((t) => !!t), Ce = (e, t) => e != null && !W(e) ? t & 4 ? e === "false" ? !1 : e === "" || !!e : t & 2 ? parseFloat(e) : t & 1 ? String(e) : e : e, Fe = (e) => e, Oe = (e, t, n) => {
  const s = Fe(e);
  return {
    emit: (l) => Be(s, t, {
      bubbles: !!(n & 4),
      composed: !!(n & 2),
      cancelable: !!(n & 1),
      detail: l
    })
  };
}, Be = (e, t, n) => {
  const s = h.ce(t, n);
  return e.dispatchEvent(s), s;
}, K = /* @__PURE__ */ new WeakMap(), De = (e, t, n) => {
  let s = P.get(e);
  ct && n ? (s = s || new CSSStyleSheet(), typeof s == "string" ? s = t : s.replaceSync(t)) : s = t, P.set(e, s);
}, Ue = (e, t, n) => {
  var s;
  const l = re(t, n), i = P.get(l);
  if (e = e.nodeType === 11 ? e : v, i)
    if (typeof i == "string") {
      e = e.head || e;
      let o = K.get(e), a;
      if (o || K.set(e, o = /* @__PURE__ */ new Set()), !o.has(l)) {
        {
          a = v.createElement("style"), a.innerHTML = i;
          const r = (s = h.$nonce$) !== null && s !== void 0 ? s : Te(v);
          r != null && a.setAttribute("nonce", r), e.insertBefore(a, e.querySelector("link"));
        }
        t.$flags$ & 4 && (a.innerHTML += ve), o && o.add(l);
      }
    } else e.adoptedStyleSheets.includes(i) || (e.adoptedStyleSheets = [...e.adoptedStyleSheets, i]);
  return l;
}, we = (e) => {
  const t = e.$cmpMeta$, n = e.$hostElement$, s = t.$flags$, l = L("attachStyles", t.$tagName$), i = Ue(n.shadowRoot ? n.shadowRoot : n.getRootNode(), t, e.$modeName$);
  s & 10 && (n["s-sc"] = i, n.classList.add(i + "-h"), s & 2 && n.classList.add(i + "-s")), l();
}, re = (e, t) => "sc-" + (t && e.$flags$ & 32 ? e.$tagName$ + "-" + t : e.$tagName$), J = (e, t, n, s, l, i) => {
  if (n !== s) {
    let o = te(e, t), a = t.toLowerCase();
    if (t === "class") {
      const r = e.classList, u = Y(n), $ = Y(s);
      r.remove(...u.filter((c) => c && !$.includes(c))), r.add(...$.filter((c) => c && !u.includes(c)));
    } else if (t === "style") {
      for (const r in n)
        (!s || s[r] == null) && (r.includes("-") ? e.style.removeProperty(r) : e.style[r] = "");
      for (const r in s)
        (!n || s[r] !== n[r]) && (r.includes("-") ? e.style.setProperty(r, s[r]) : e.style[r] = s[r]);
    } else if (t !== "key")
      if (t === "ref")
        s && s(e);
      else if (!e.__lookupSetter__(t) && t[0] === "o" && t[1] === "n") {
        if (t[2] === "-" ? t = t.slice(3) : te(j, a) ? t = a.slice(2) : t = a[2] + t.slice(3), n || s) {
          const r = t.endsWith(ie);
          t = t.replace(je, ""), n && h.rel(e, t, n, r), s && h.ael(e, t, s, r);
        }
      } else {
        const r = W(s);
        if ((o || r && s !== null) && !l)
          try {
            if (e.tagName.includes("-"))
              e[t] = s;
            else {
              const $ = s ?? "";
              t === "list" ? o = !1 : (n == null || e[t] != $) && (e[t] = $);
            }
          } catch {
          }
        let u = !1;
        a !== (a = a.replace(/^xlink\:?/, "")) && (t = a, u = !0), s == null || s === !1 ? (s !== !1 || e.getAttribute(t) === "") && (u ? e.removeAttributeNS(Q, t) : e.removeAttribute(t)) : (!o || i & 4 || l) && !r && (s = s === !0 ? "" : s, u ? e.setAttributeNS(Q, t, s) : e.setAttribute(t, s));
      }
  }
}, Pe = /\s/, Y = (e) => e ? e.split(Pe) : [], ie = "Capture", je = new RegExp(ie + "$"), ae = (e, t, n, s) => {
  const l = t.$elm$.nodeType === 11 && t.$elm$.host ? t.$elm$.host : t.$elm$, i = e && e.$attrs$ || X, o = t.$attrs$ || X;
  for (s in i)
    s in o || J(l, s, i[s], void 0, n, t.$flags$);
  for (s in o)
    J(l, s, i[s], o[s], n, t.$flags$);
}, w = (e, t, n, s) => {
  const l = t.$children$[n];
  let i = 0, o, a, r;
  if (oe || (M = !0, l.$tag$ === "slot" && (E && s.classList.add(E + "-s"), l.$flags$ |= l.$children$ ? (
    // slot element has fallback content
    2
  ) : (
    // slot element does not have fallback content
    1
  ))), l.$text$ !== null)
    o = l.$elm$ = v.createTextNode(l.$text$);
  else if (l.$flags$ & 1)
    o = l.$elm$ = v.createTextNode("");
  else {
    if (b || (b = l.$tag$ === "svg"), o = l.$elm$ = v.createElementNS(b ? Se : ke, l.$flags$ & 2 ? "slot-fb" : l.$tag$), b && l.$tag$ === "foreignObject" && (b = !1), ae(null, l, b), xe(E) && o["s-si"] !== E && o.classList.add(o["s-si"] = E), l.$children$)
      for (i = 0; i < l.$children$.length; ++i)
        a = w(e, l, i, o), a && o.appendChild(a);
    l.$tag$ === "svg" ? b = !1 : o.tagName === "foreignObject" && (b = !0);
  }
  return o["s-hn"] = A, l.$flags$ & 3 && (o["s-sr"] = !0, o["s-cr"] = H, o["s-sn"] = l.$name$ || "", r = e && e.$children$ && e.$children$[n], r && r.$tag$ === l.$tag$ && e.$elm$ && C(e.$elm$, !1)), o;
}, C = (e, t) => {
  h.$flags$ |= 1;
  const n = e.childNodes;
  for (let s = n.length - 1; s >= 0; s--) {
    const l = n[s];
    l["s-hn"] !== A && l["s-ol"] && ($e(l).insertBefore(l, N(l)), l["s-ol"].remove(), l["s-ol"] = void 0, l["s-sh"] = void 0, M = !0), t && C(l, t);
  }
  h.$flags$ &= -2;
}, ce = (e, t, n, s, l, i) => {
  let o = e["s-cr"] && e["s-cr"].parentNode || e, a;
  for (o.shadowRoot && o.tagName === A && (o = o.shadowRoot); l <= i; ++l)
    s[l] && (a = w(null, n, l, e), a && (s[l].$elm$ = a, o.insertBefore(a, N(t))));
}, fe = (e, t, n) => {
  for (let s = t; s <= n; ++s) {
    const l = e[s];
    if (l) {
      const i = l.$elm$;
      pe(l), i && (D = !0, i["s-ol"] ? i["s-ol"].remove() : C(i, !0), i.remove());
    }
  }
}, He = (e, t, n, s, l = !1) => {
  let i = 0, o = 0, a = 0, r = 0, u = t.length - 1, $ = t[0], c = t[u], d = s.length - 1, f = s[0], p = s[d], m, g;
  for (; i <= u && o <= d; )
    if ($ == null)
      $ = t[++i];
    else if (c == null)
      c = t[--u];
    else if (f == null)
      f = s[++o];
    else if (p == null)
      p = s[--d];
    else if (B($, f, l))
      R($, f, l), $ = t[++i], f = s[++o];
    else if (B(c, p, l))
      R(c, p, l), c = t[--u], p = s[--d];
    else if (B($, p, l))
      ($.$tag$ === "slot" || p.$tag$ === "slot") && C($.$elm$.parentNode, !1), R($, p, l), e.insertBefore($.$elm$, c.$elm$.nextSibling), $ = t[++i], p = s[--d];
    else if (B(c, f, l))
      ($.$tag$ === "slot" || p.$tag$ === "slot") && C(c.$elm$.parentNode, !1), R(c, f, l), e.insertBefore(c.$elm$, $.$elm$), c = t[--u], f = s[++o];
    else {
      for (a = -1, r = i; r <= u; ++r)
        if (t[r] && t[r].$key$ !== null && t[r].$key$ === f.$key$) {
          a = r;
          break;
        }
      a >= 0 ? (g = t[a], g.$tag$ !== f.$tag$ ? m = w(t && t[o], n, a, e) : (R(g, f, l), t[a] = void 0, m = g.$elm$), f = s[++o]) : (m = w(t && t[o], n, o, e), f = s[++o]), m && $e($.$elm$).insertBefore(m, N($.$elm$));
    }
  i > u ? ce(e, s[d + 1] == null ? null : s[d + 1].$elm$, n, s, o, d) : o > d && fe(t, i, u);
}, B = (e, t, n = !1) => e.$tag$ === t.$tag$ ? e.$tag$ === "slot" ? e.$name$ === t.$name$ : n ? !0 : e.$key$ === t.$key$ : !1, N = (e) => e && e["s-ol"] || e, $e = (e) => (e["s-ol"] ? e["s-ol"] : e).parentNode, R = (e, t, n = !1) => {
  const s = t.$elm$ = e.$elm$, l = e.$children$, i = t.$children$, o = t.$tag$, a = t.$text$;
  let r;
  a === null ? (b = o === "svg" ? !0 : o === "foreignObject" ? !1 : b, o === "slot" || ae(e, t, b), l !== null && i !== null ? He(s, l, t, i, n) : i !== null ? (e.$text$ !== null && (s.textContent = ""), ce(s, null, t, i, 0, i.length - 1)) : l !== null && fe(l, 0, l.length - 1), b && o === "svg" && (b = !1)) : (r = s["s-cr"]) ? r.parentNode.textContent = a : e.$text$ !== a && (s.data = a);
}, de = (e) => {
  const t = e.childNodes;
  for (const n of t)
    if (n.nodeType === 1) {
      if (n["s-sr"]) {
        const s = n["s-sn"];
        n.hidden = !1;
        for (const l of t)
          if (l !== n) {
            if (l["s-hn"] !== n["s-hn"] || s !== "") {
              if (l.nodeType === 1 && (s === l.getAttribute("slot") || s === l["s-sn"])) {
                n.hidden = !0;
                break;
              }
            } else if (l.nodeType === 1 || l.nodeType === 3 && l.textContent.trim() !== "") {
              n.hidden = !0;
              break;
            }
          }
      }
      de(n);
    }
}, S = [], ue = (e) => {
  let t, n, s;
  for (const l of e.childNodes) {
    if (l["s-sr"] && (t = l["s-cr"]) && t.parentNode) {
      n = t.parentNode.childNodes;
      const i = l["s-sn"];
      for (s = n.length - 1; s >= 0; s--)
        if (t = n[s], !t["s-cn"] && !t["s-nr"] && t["s-hn"] !== l["s-hn"] && !x.experimentalSlotFixes)
          if (Z(t, i)) {
            let o = S.find((a) => a.$nodeToRelocate$ === t);
            D = !0, t["s-sn"] = t["s-sn"] || i, o ? (o.$nodeToRelocate$["s-sh"] = l["s-hn"], o.$slotRefNode$ = l) : (t["s-sh"] = l["s-hn"], S.push({
              $slotRefNode$: l,
              $nodeToRelocate$: t
            })), t["s-sr"] && S.map((a) => {
              Z(a.$nodeToRelocate$, t["s-sn"]) && (o = S.find((r) => r.$nodeToRelocate$ === t), o && !a.$slotRefNode$ && (a.$slotRefNode$ = o.$slotRefNode$));
            });
          } else S.some((o) => o.$nodeToRelocate$ === t) || S.push({
            $nodeToRelocate$: t
          });
    }
    l.nodeType === 1 && ue(l);
  }
}, Z = (e, t) => e.nodeType === 1 ? e.getAttribute("slot") === null && t === "" || e.getAttribute("slot") === t : e["s-sn"] === t ? !0 : t === "", pe = (e) => {
  e.$attrs$ && e.$attrs$.ref && e.$attrs$.ref(null), e.$children$ && e.$children$.map(pe);
}, qe = (e, t, n = !1) => {
  var s, l, i, o, a;
  const r = e.$hostElement$, u = e.$cmpMeta$, $ = e.$vnode$ || U(null, null), c = Ee(t) ? t : y(null, null, t);
  if (A = r.tagName, u.$attrsToReflect$ && (c.$attrs$ = c.$attrs$ || {}, u.$attrsToReflect$.map(([d, f]) => c.$attrs$[f] = r[d])), n && c.$attrs$)
    for (const d of Object.keys(c.$attrs$))
      r.hasAttribute(d) && !["key", "ref", "style", "class"].includes(d) && (c.$attrs$[d] = r[d]);
  c.$tag$ = null, c.$flags$ |= 4, e.$vnode$ = c, c.$elm$ = $.$elm$ = r.shadowRoot || r, E = r["s-sc"], H = r["s-cr"], oe = (u.$flags$ & 1) !== 0, D = !1, R($, c, n);
  {
    if (h.$flags$ |= 1, M) {
      ue(c.$elm$);
      for (const d of S) {
        const f = d.$nodeToRelocate$;
        if (!f["s-ol"]) {
          const p = v.createTextNode("");
          p["s-nr"] = f, f.parentNode.insertBefore(f["s-ol"] = p, f);
        }
      }
      for (const d of S) {
        const f = d.$nodeToRelocate$, p = d.$slotRefNode$;
        if (p) {
          const m = p.parentNode;
          let g = p.nextSibling;
          {
            let T = (s = f["s-ol"]) === null || s === void 0 ? void 0 : s.previousSibling;
            for (; T; ) {
              let k = (l = T["s-nr"]) !== null && l !== void 0 ? l : null;
              if (k && k["s-sn"] === f["s-sn"] && m === k.parentNode && (k = k.nextSibling, !k || !k["s-nr"])) {
                g = k;
                break;
              }
              T = T.previousSibling;
            }
          }
          (!g && m !== f.parentNode || f.nextSibling !== g) && f !== g && (!f["s-hn"] && f["s-ol"] && (f["s-hn"] = f["s-ol"].parentNode.nodeName), m.insertBefore(f, g), f.nodeType === 1 && (f.hidden = (i = f["s-ih"]) !== null && i !== void 0 ? i : !1));
        } else
          f.nodeType === 1 && (n && (f["s-ih"] = (o = f.hidden) !== null && o !== void 0 ? o : !1), f.hidden = !0);
      }
    }
    D && de(c.$elm$), h.$flags$ &= -2, S.length = 0;
  }
  if (x.experimentalScopedSlotChanges && u.$flags$ & 2)
    for (const d of c.$elm$.childNodes)
      d["s-hn"] !== A && !d["s-sh"] && (n && d["s-ih"] == null && (d["s-ih"] = (a = d.hidden) !== null && a !== void 0 ? a : !1), d.hidden = !0);
  H = void 0;
}, ze = (e, t) => {
}, he = (e, t) => (e.$flags$ |= 16, ze(e, e.$ancestorComponent$), dt(() => Me(e, t))), Me = (e, t) => {
  const n = e.$hostElement$, s = L("scheduleUpdate", e.$cmpMeta$.$tagName$), l = n;
  let i;
  return t ? i = _(l, "componentWillLoad") : i = _(l, "componentWillUpdate"), i = V(i, () => _(l, "componentWillRender")), s(), V(i, () => Ne(e, l, t));
}, V = (e, t) => We(e) ? e.then(t) : t(), We = (e) => e instanceof Promise || e && e.then && typeof e.then == "function", Ne = async (e, t, n) => {
  const s = e.$hostElement$, l = L("update", e.$cmpMeta$.$tagName$);
  s["s-rc"], n && we(e);
  const i = L("render", e.$cmpMeta$.$tagName$);
  Ge(e, t, s, n), i(), l(), Qe(e);
}, Ge = (e, t, n, s) => {
  try {
    G = t, t = t.render && t.render(), e.$flags$ &= -17, e.$flags$ |= 2, (x.hasRenderFn || x.reflect) && (x.vdomRender || x.reflect) && (x.hydrateServerSide || qe(e, t, s));
  } catch (r) {
    O(r, e.$hostElement$);
  }
  return G = null, null;
}, Qe = (e) => {
  const t = e.$cmpMeta$.$tagName$, n = e.$hostElement$, s = L("postUpdate", t), l = n;
  e.$ancestorComponent$, _(l, "componentDidRender"), e.$flags$ & 64 ? (_(l, "componentDidUpdate"), s()) : (e.$flags$ |= 64, _(l, "componentDidLoad"), s());
}, _ = (e, t, n) => {
  if (e && e[t])
    try {
      return e[t](n);
    } catch (s) {
      O(s);
    }
}, Xe = (e, t) => F(e).$instanceValues$.get(t), Ie = (e, t, n, s) => {
  const l = F(e), i = e, o = l.$instanceValues$.get(t), a = l.$flags$, r = i;
  n = Ce(n, s.$members$[t][0]);
  const u = Number.isNaN(o) && Number.isNaN(n);
  if (n !== o && !u) {
    l.$instanceValues$.set(t, n);
    {
      if (s.$watchers$ && a & 128) {
        const c = s.$watchers$[t];
        c && c.map((d) => {
          try {
            r[d](n, o, t);
          } catch (f) {
            O(f, i);
          }
        });
      }
      if ((a & 18) === 2) {
        if (r.componentShouldUpdate && r.componentShouldUpdate(n, o, t) === !1)
          return;
        he(l, !1);
      }
    }
  }
}, Ke = (e, t, n) => {
  var s;
  const l = e.prototype;
  if (t.$members$) {
    e.watchers && (t.$watchers$ = e.watchers);
    const i = Object.entries(t.$members$);
    i.map(([o, [a]]) => {
      (a & 31 || a & 32) && Object.defineProperty(l, o, {
        get() {
          return Xe(this, o);
        },
        set(r) {
          Ie(this, o, r, t);
        },
        configurable: !0,
        enumerable: !0
      });
    });
    {
      const o = /* @__PURE__ */ new Map();
      l.attributeChangedCallback = function(a, r, u) {
        h.jmp(() => {
          var $;
          const c = o.get(a);
          if (this.hasOwnProperty(c))
            u = this[c], delete this[c];
          else {
            if (l.hasOwnProperty(c) && typeof this[c] == "number" && this[c] == u)
              return;
            if (c == null) {
              const d = F(this), f = d == null ? void 0 : d.$flags$;
              if (f && !(f & 8) && f & 128 && u !== r) {
                const m = this, g = ($ = t.$watchers$) === null || $ === void 0 ? void 0 : $[a];
                g == null || g.forEach((T) => {
                  m[T] != null && m[T].call(m, u, r, a);
                });
              }
              return;
            }
          }
          this[c] = u === null && typeof this[c] == "boolean" ? !1 : u;
        });
      }, e.observedAttributes = Array.from(/* @__PURE__ */ new Set([
        ...Object.keys((s = t.$watchers$) !== null && s !== void 0 ? s : {}),
        ...i.filter(
          ([a, r]) => r[0] & 15
          /* MEMBER_FLAGS.HasAttribute */
        ).map(([a, r]) => {
          var u;
          const $ = r[1] || a;
          return o.set($, a), r[0] & 512 && ((u = t.$attrsToReflect$) === null || u === void 0 || u.push([a, $])), $;
        })
      ]));
    }
  }
  return e;
}, Je = async (e, t, n, s) => {
  let l;
  if (!(t.$flags$ & 32) && (t.$flags$ |= 32, l = e.constructor, customElements.whenDefined(n.$tagName$).then(() => t.$flags$ |= 128), l.style)) {
    let o = l.style;
    typeof o != "string" && (o = o[t.$modeName$ = Ae(e)]);
    const a = re(n, t.$modeName$);
    if (!P.has(a)) {
      const r = L("registerStyles", n.$tagName$);
      De(a, o, !!(n.$flags$ & 1)), r();
    }
  }
  t.$ancestorComponent$, he(t, !0);
}, ee = (e) => {
}, Ye = (e) => {
  if (!(h.$flags$ & 1)) {
    const t = F(e), n = t.$cmpMeta$, s = L("connectedCallback", n.$tagName$);
    t.$flags$ & 1 ? (ge(e, t, n.$listeners$), t != null && t.$lazyInstance$ ? ee(t.$lazyInstance$) : t != null && t.$onReadyPromise$ && t.$onReadyPromise$.then(() => ee(t.$lazyInstance$))) : (t.$flags$ |= 1, // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
    n.$flags$ & 12 && Ze(e), n.$members$ && Object.entries(n.$members$).map(([l, [i]]) => {
      if (i & 31 && e.hasOwnProperty(l)) {
        const o = e[l];
        delete e[l], e[l] = o;
      }
    }), Je(e, t, n)), s();
  }
}, Ze = (e) => {
  const t = e["s-cr"] = v.createComment("");
  t["s-cn"] = !0, e.insertBefore(t, e.firstChild);
}, Ve = async (e) => {
  if (!(h.$flags$ & 1)) {
    const t = F(e);
    t.$rmListeners$ && (t.$rmListeners$.map((n) => n()), t.$rmListeners$ = void 0);
  }
}, et = (e, t) => {
  const n = {
    $flags$: t[0],
    $tagName$: t[1]
  };
  n.$members$ = t[2], n.$listeners$ = t[3], n.$watchers$ = e.$watchers$, n.$attrsToReflect$ = [], !se && n.$flags$ & 1 && (n.$flags$ |= 8);
  const s = e.prototype.connectedCallback, l = e.prototype.disconnectedCallback;
  return Object.assign(e.prototype, {
    __registerHost() {
      lt(this, n);
    },
    connectedCallback() {
      Ye(this), s && s.call(this);
    },
    disconnectedCallback() {
      Ve(this), l && l.call(this);
    },
    __attachShadow() {
      se ? this.attachShadow({
        mode: "open",
        delegatesFocus: !!(n.$flags$ & 16)
      }) : this.shadowRoot = this;
    }
  }), e.is = n.$tagName$, Ke(e, n);
}, ge = (e, t, n, s) => {
  n && n.map(([l, i, o]) => {
    const a = st(e, l), r = tt(t, o), u = nt(l);
    h.ael(a, i, r, u), (t.$rmListeners$ = t.$rmListeners$ || []).push(() => h.rel(a, i, r, u));
  });
}, tt = (e, t) => (n) => {
  try {
    x.lazyLoad || e.$hostElement$[t](n);
  } catch (s) {
    O(s);
  }
}, st = (e, t) => t & 4 ? v : t & 8 ? j : t & 16 ? v.body : e, nt = (e) => it ? {
  passive: (e & 1) !== 0,
  capture: (e & 2) !== 0
} : (e & 2) !== 0, ye = /* @__PURE__ */ new WeakMap(), F = (e) => ye.get(e), lt = (e, t) => {
  const n = {
    $flags$: 0,
    $hostElement$: e,
    $cmpMeta$: t,
    $instanceValues$: /* @__PURE__ */ new Map()
  };
  return ge(e, n, t.$listeners$), ye.set(e, n);
}, te = (e, t) => t in e, O = (e, t) => (0, console.error)(e, t), P = /* @__PURE__ */ new Map(), ot = [], j = typeof window < "u" ? window : {}, v = j.document || { head: {} }, rt = j.HTMLElement || class {
}, h = {
  $flags$: 0,
  $resourcesUrl$: "",
  jmp: (e) => e(),
  raf: (e) => requestAnimationFrame(e),
  ael: (e, t, n, s) => e.addEventListener(t, n, s),
  rel: (e, t, n, s) => e.removeEventListener(t, n, s),
  ce: (e, t) => new CustomEvent(e, t)
}, se = (
  // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field
  !0
), it = /* @__PURE__ */ (() => {
  let e = !1;
  try {
    v.addEventListener("e", null, Object.defineProperty({}, "passive", {
      get() {
        e = !0;
      }
    }));
  } catch {
  }
  return e;
})(), at = (e) => Promise.resolve(e), ct = /* @__PURE__ */ (() => {
  try {
    return new CSSStyleSheet(), typeof new CSSStyleSheet().replaceSync == "function";
  } catch {
  }
  return !1;
})(), ne = [], me = [], ft = (e, t) => (n) => {
  e.push(n), q || (q = !0, t && h.$flags$ & 4 ? $t(z) : h.raf(z));
}, le = (e) => {
  for (let t = 0; t < e.length; t++)
    try {
      e[t](performance.now());
    } catch (n) {
      O(n);
    }
  e.length = 0;
}, z = () => {
  le(ne), le(me), (q = ne.length > 0) && h.raf(z);
}, $t = (e) => at().then(e), dt = /* @__PURE__ */ ft(me, !0), ut = '.radio-group{display:flex;flex-direction:column;gap:0.5rem;--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:"Inter", sans-serif}.radio-group slot[name=label]{display:flex;color:var(--nylas-base-800, #293056);font-size:14px;font-style:normal;font-weight:400;line-height:150%;font-size:16px}.radio-group slot[name=label].error{color:var(--nylas-error)}.radio-group slot[name=label] span.required{color:var(--nylas-error);padding:0 0.25rem}.radio-group slot[name=label] p{margin:0}.radio-group slot[name=label] p.error{color:var(--nylas-error)}.radio-group slot[name=label] .error{color:var(--nylas-error)}.radio-group span.error{color:var(--nylas-error);font-size:14px;font-weight:400;line-height:20px;font-family:var(--nylas-font-family)}.radio-group label{display:flex;font-family:var(--nylas-font-family);cursor:pointer}.radio-group label .radio-option{display:flex;align-items:flex-start;gap:0.5rem}.radio-group label .radio-option input[type=radio]{cursor:pointer}.radio-group label .radio-option input[type=radio i]{width:20px;height:20px;color:var(--nylas-primary)}.radio-group label .radio-option p{display:flex;flex-direction:column;gap:0.5rem;margin:0}.radio-group label .radio-option p .title{font-size:16px;font-weight:500;line-height:20px;color:var(--nylas-base-800)}.radio-group label .radio-option p .description{font-size:14px;font-weight:400;line-height:20px;color:var(--nylas-base-600)}', pt = ut, be = et(class extends rt {
  constructor() {
    super(), this.__registerHost(), this.__attachShadow(), this.nylasFormRadioChanged = Oe(this, "nylasFormRadioChanged", 7), this.componentType = "radio-group", this.name = "radio-group", this.options = [], this.defaultSelectedValue = "", this.label = void 0, this.required = !1, this.selectedValue = void 0, this.error = "";
  }
  handleDefaultSelectedValueChange(t) {
    this.selectedValue = t;
  }
  componentDidLoad() {
    this.selectedValue = this.defaultSelectedValue;
  }
  handleBookingFormSubmitted(t) {
    if (this.required && !this.selectedValue) {
      this.error = `${this.label} is required.`;
      return;
    }
    this.error && t.preventDefault();
  }
  componentWillLoad() {
    this.el.setAttribute("component-type", this.componentType);
  }
  handleChange(t) {
    this.error = "", this.selectedValue = t, this.nylasFormRadioChanged.emit({
      value: t,
      name: this.name,
      label: this.label
    });
  }
  render() {
    return y("div", { key: "bb8081c01a8910156ceceb6a84dbd397fd9bd729", class: "radio-group" }, y("slot", { key: "dffac376a2e005f4d039e07c6742ffb5f9bea8b3", name: "label" }, this.label && y("p", { class: { error: !!this.error } }, y("span", { class: "label" }, this.label), this.required && y("span", { class: "required" }, "*"))), this.options.map((t) => y("label", null, y("div", { class: "radio-option" }, y("input", { type: "radio", name: this.name, value: t.value, checked: this.selectedValue === t.value, onChange: () => this.handleChange(t.value) }), y("p", null, y("span", { class: "title" }, t.label), y("span", { class: "description" }, t.description))))), this.error && y("span", { class: "error help-text" }, this.error));
  }
  get el() {
    return this;
  }
  static get watchers() {
    return {
      defaultSelectedValue: ["handleDefaultSelectedValueChange"]
    };
  }
  static get style() {
    return pt;
  }
}, [1, "radio-button-group", {
  name: [1],
  options: [16],
  defaultSelectedValue: [1, "default-selected-value"],
  label: [1],
  required: [4],
  selectedValue: [32],
  error: [32]
}, [[4, "bookingFormSubmitted", "handleBookingFormSubmitted"]], {
  defaultSelectedValue: ["handleDefaultSelectedValueChange"]
}]);
function ht() {
  if (typeof customElements > "u")
    return;
  ["radio-button-group"].forEach((t) => {
    switch (t) {
      case "radio-button-group":
        customElements.get(t) || customElements.define(t, be);
        break;
    }
  });
}
const yt = be, mt = ht;
export {
  yt as RadioButtonGroup,
  mt as defineCustomElement
};
