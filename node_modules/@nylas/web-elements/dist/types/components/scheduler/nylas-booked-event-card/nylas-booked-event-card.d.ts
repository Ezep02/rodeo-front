import { EventEmitter } from '../../../stencil-public-runtime';
import { ConfigSettings, NylasSchedulerBookingData } from '../../..';
import { NylasEvent } from "../../../common/types";
import { NylasSchedulerErrorResponse, ThemeConfig, Timeslot } from '@nylas/core';
export declare class NylasBookedEventCard {
    private host;
    readonly eventInfo: NylasEvent;
    readonly rescheduleBookingId?: string;
    readonly bookingInfo?: NylasSchedulerBookingData;
    readonly configSettings?: ConfigSettings;
    readonly isLoading?: boolean;
    readonly themeConfig?: any;
    readonly selectedTimezone: string;
    readonly selectedTimeslot: Timeslot;
    readonly selectedLanguage: string;
    startTime: string;
    endTime: string;
    readonly cancelBookingButtonClicked: EventEmitter<{
        bookingId: string;
    }>;
    readonly rescheduleButtonClicked: EventEmitter<{
        bookingId: string;
        errorHandler?: (error: NylasSchedulerErrorResponse) => void;
    }>;
    readonly rescheduleBookedEventError: EventEmitter<NylasSchedulerErrorResponse>;
    readonly cancelBookedEventValidationError: EventEmitter<{
        error: {
            title: string;
            message: string;
        };
    }>;
    themeConfigChanged(newThemeConfig: ThemeConfig): void;
    connectedCallback(): void;
    disconnectedCallback(): void;
    componentWillLoad(): Promise<void>;
    componentDidLoad(): Promise<void>;
    applyThemeConfig(themeConfig?: ThemeConfig): void;
    private handleCancelBookingButtonClicked;
    private handleRescheduleButtonClicked;
    getPaticipantType: (type: string) => "" | "Host" | "You";
    render(): any;
}
