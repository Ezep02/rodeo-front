import { EventEmitter } from '../../../stencil-public-runtime';
import { Configuration, EmailTemplate, Participant } from '@nylas/core';
import { LANGUAGE_CODE } from "../../../common/constants";
export declare class NylasConfirmationEmail {
    host: HTMLNylasConfirmationEmailElement;
    selectedConfiguration?: Configuration;
    confirmationEmailTemplate: EmailTemplate;
    participants: Participant[];
    name: string;
    isOpen: boolean;
    selectedLanguage?: LANGUAGE_CODE;
    internals: ElementInternals;
    confirmationEmail: EmailTemplate;
    isConfirmationEmailOpen: boolean;
    participantsState: Participant[];
    valueChanged: EventEmitter<{
        value: string;
        name: string;
        valueChanged?: (event: CustomEvent<{
            value: string;
            name: string;
        }>) => void;
    }>;
    connectedCallback(): void;
    disconnectedCallback(): void;
    componentWillLoad(): void;
    componentDidLoad(): void;
    elementNameChangedHandler(newValue: string): void;
    selectedConfigurationChangedHandler(newValue: Configuration): void;
    selectedLanguageChangedHandler(newVal: LANGUAGE_CODE, oldVal: LANGUAGE_CODE): void;
    nylasFormInputChangeHandler(event: CustomEvent<{
        value: string;
        name: string;
        type?: string;
    }>): Promise<void>;
    valueChangedHandler(event: CustomEvent<{
        value: string;
        name: string;
    }>): void;
    nylasFormInputImageUrlInvalidHandler(event: CustomEvent<{
        value: string;
        name: string;
    }>): Promise<void>;
    nyalsFormSwitchToggledHandler(event: CustomEvent<{
        checked: boolean;
        name: string;
        label: boolean;
    }>): void;
    updateConfirmationFormValue(): void;
    toggleConfirmationEmail(): void;
    handleEmailBodyChange(event: any): void;
    render(): any;
}
