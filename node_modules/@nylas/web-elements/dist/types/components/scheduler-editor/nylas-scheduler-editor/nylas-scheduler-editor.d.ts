import type { SchedulerEditorEventOverride } from "../../../common/component-types";
import { AuthArgs, type NylasApiRequest } from "../../../common/nylas-api-request";
import { RegisteredComponent } from "../../../common/register-component";
import { NylasSchedulerConfigConnector } from "../../../connector/nylas-scheduler-config-connector/index";
import { NylasSchedulerConfigStoreState, NylasSchedulerConfigStoreType } from "../../../stores/scheduler-config-store";
import { Config } from '@nylas/identity';
import { EventEmitter } from '../../../stencil-public-runtime';
import { AdditionalParticipant } from '@nylas/core';
import { Tab } from '../nylas-editor-tabs/tab-contents';
import { LANGUAGE_CODE, Locale } from "../../../common/constants";
export declare class NylasSchedulerEditor {
    private stores?;
    private baseProvider?;
    private nylasSchedulerConfigConnector?;
    private host;
    configurationId?: string;
    nylasApiRequest?: NylasApiRequest;
    nylasSessionsConfig?: Config;
    defaultAuthArgs?: AuthArgs[];
    eventOverrides: SchedulerEditorEventOverride;
    schedulerPreviewLink: string;
    readonly defaultSchedulerConfigState?: Partial<NylasSchedulerConfigStoreState>;
    readonly mode: 'app' | 'composable';
    additionalParticipants?: AdditionalParticipant[];
    hideEditorTabs?: Tab[];
    conferenceProviders?: Record<string, string>;
    requiresSlug: boolean;
    readonly enableUserFeedback?: boolean;
    readonly defaultLanguage?: LANGUAGE_CODE;
    readonly localization?: Partial<Record<LANGUAGE_CODE, Locale>>;
    readonly init: EventEmitter<HTMLNylasSchedulerEditorElement>;
    readonly loggedIn: EventEmitter<HTMLNylasSchedulerEditorElement>;
    readonly loggedOut: EventEmitter<HTMLNylasSchedulerEditorElement>;
    readonly schedulerConfigCloseClicked: EventEmitter<HTMLNylasSchedulerEditorElement>;
    automaticComponentRegistration: boolean;
    selectedLanguage: LANGUAGE_CODE;
    connectedCallback(): void;
    componentWillLoad(): Promise<void>;
    componentDidLoad(): Promise<void>;
    componentDisconnected(): Promise<void>;
    configurationIdChanged(newConfigurationId: string): Promise<void>;
    updateLocalization(newVal?: Partial<Record<LANGUAGE_CODE, Locale>>): void;
    store(): Promise<NylasSchedulerConfigStoreType | undefined>;
    schedulerConnector(): Promise<NylasSchedulerConfigConnector | undefined>;
    registerComponentHandler(event: CustomEvent<RegisteredComponent<any, any>>): Promise<void>;
    unregisterComponentHandler(event: CustomEvent<RegisteredComponent<any, any>>): Promise<void>;
    nylasFormDropdownChangedHandler(event: CustomEvent<{
        value: string;
        name: string;
    }>): void;
    private loggedInHandler;
    private handleSchedulerConfigCloseClicked;
    private authenticationUrl;
    render(): any;
}
