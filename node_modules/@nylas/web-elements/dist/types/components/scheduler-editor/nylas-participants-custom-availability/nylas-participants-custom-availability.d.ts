import { EventEmitter } from '../../../stencil-public-runtime';
import { Configuration, OpenHours, Participant, ParticipantAvailability } from '@nylas/core';
import { LANGUAGE_CODE } from "../../../common/constants";
export declare class NylasParticipantsCustomAvailability {
    host: HTMLNylasParticipantsCustomAvailabilityElement;
    private participantFormRef;
    selectedConfiguration?: Configuration;
    name: string;
    participants: Participant[];
    selectedLanguage?: LANGUAGE_CODE;
    valueChanged: EventEmitter<{
        value: string;
        name: string;
    }>;
    internals: ElementInternals;
    selectedParticipants: {
        [key: string]: {
            setCustom: boolean;
            isOpen: boolean;
            openHours: OpenHours[];
            name: string;
            availability?: ParticipantAvailability;
            timezone?: string;
        };
    };
    elementNameChangedHandler(newValue: string): void;
    participantsChangedHandler(newValue: Participant[], oldValue: Participant[]): void;
    selectedConfigurationChangedHandler(newValue: Configuration, oldValue: Configuration): void;
    selectedLanguageChangedHandler(newVal: LANGUAGE_CODE, oldVal: LANGUAGE_CODE): void;
    connectedCallback(): void;
    disconnectedCallback(): void;
    componentWillLoad(): void;
    componentDidLoad(): void;
    nylasFormSwitchToggledHandler(event: CustomEvent<{
        checked: boolean;
        name: string;
        label: boolean;
    }>): void;
    handleValueChanged(event: CustomEvent): void;
    updateFormValue(): void;
    setParticipants(participants: Participant[]): {};
    get isInternalsAvailable(): boolean;
    render(): any;
}
