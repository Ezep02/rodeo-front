import { EventEmitter } from '../../../stencil-public-runtime';
import { AdditionalParticipant, Calendar, Configuration, Participant } from '@nylas/core';
import { LANGUAGE_CODE } from "../../../common/constants";
export declare class NylasConnectedCalendars {
    host: HTMLNylasConnectedCalendarsElement;
    private connectedCalendarsFormRef;
    name: string;
    selectedConfiguration?: Configuration;
    participants: Participant[];
    calendars?: Calendar[];
    participantOptions?: AdditionalParticipant[];
    selectedLanguage?: LANGUAGE_CODE;
    valueChanged: EventEmitter<{
        value: string;
        name: string;
    }>;
    internals: ElementInternals;
    selectedCalendars: {
        [key: string]: {
            isOpen: boolean;
            name: string;
            calendars?: Calendar[];
        };
    };
    participantCalendars: {
        [key: string]: Calendar[];
    };
    participantDefaultSelectedCalendars: {
        [key: string]: string[];
    };
    elementNameChangedHandler(newValue: string): void;
    calendarsChangedHandler(newValue: Calendar[]): void;
    participantsChangedHandler(newValue: Participant[]): void;
    participantOptionsChangedHandler(newValue: AdditionalParticipant[]): void;
    selectedConfigurationChangedHandler(newValue: Configuration): void;
    selectedLanguageChangedHandler(newVal: LANGUAGE_CODE, oldVal: LANGUAGE_CODE): void;
    getParticipantCalendarOptions(addedParticipants: Participant[], availableParticipantOptions: AdditionalParticipant[] | undefined): {};
    connectedCallback(): void;
    disconnectedCallback(): void;
    componentWillLoad(): void;
    componentDidLoad(): void;
    handleValueChanged(event: CustomEvent): void;
    setParticipants(participants: Participant[]): {};
    render(): any;
}
