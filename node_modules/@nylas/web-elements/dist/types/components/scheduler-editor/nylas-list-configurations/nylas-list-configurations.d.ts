import { EventEmitter } from '../../../stencil-public-runtime';
import { Configuration } from '@nylas/core';
import { LANGUAGE_CODE } from "../../../common/constants";
export declare class NylasListConfigurations {
    host: HTMLNylasListConfigurationsElement;
    configurations: Configuration[];
    selectedLanguage?: LANGUAGE_CODE;
    schedulerPreviewLink: string;
    listConfigurationsNextCursor?: string | null;
    initListConfigurations: EventEmitter<{
        host: HTMLNylasListConfigurationsElement;
        cursor?: string;
    }>;
    createButtonClick: EventEmitter<HTMLNylasListConfigurationsElement>;
    editButtonClick: EventEmitter<{
        host: HTMLNylasListConfigurationsElement;
        configuration: Configuration;
    }>;
    deleteButtonClick: EventEmitter<{
        host: HTMLNylasListConfigurationsElement;
        configuration: Configuration;
    }>;
    private state;
    private error;
    currentCursor: string | null;
    previousCursors: string[];
    disableNextPageButton: boolean;
    deleteConfigurationId: string;
    showDeleteButtonLoading: boolean;
    listConfigurationsNextCursorChangedHandler(newVal: string | null, oldVal: string | null): void;
    selectedLanguageChangedHandler(newVal: LANGUAGE_CODE, oldVal: LANGUAGE_CODE): void;
    connectedCallback(): void;
    componentWillLoad(): void;
    componentDidLoad(): void;
    disconnectedCallback(): void;
    handleNylasFormDropdownChanged(event: CustomEvent): Promise<void>;
    registerCallback(): Promise<void>;
    getState(): Promise<"loading" | "error" | "loaded">;
    setState(state: 'loading' | 'loaded' | 'error'): Promise<void>;
    setError(error: string): Promise<void>;
    hideDeleteConfirmation(): Promise<void>;
    closeModal(e: Event): void;
    handleConfirmDeleteButtonClicked(e: Event): void;
    private getDurationString;
    getActionLabelHTML(action: string): any;
    previousPageClickedHandler(): void;
    nextPageClickedHandler(): void;
    render(): any;
}
