import { EventEmitter } from '../../../stencil-public-runtime';
import { Configuration, EventReminder, Participant } from '@nylas/core';
import { LANGUAGE_CODE } from "../../../common/constants";
export declare class NylasReminderEmails {
    host: HTMLNylasReminderEmailsElement;
    selectedConfiguration?: Configuration;
    eventReminders?: (EventReminder & {
        editing?: boolean;
    })[];
    name: string;
    selectedLanguage?: LANGUAGE_CODE;
    internals: ElementInternals;
    reminders: (EventReminder & {
        editing?: boolean;
    })[];
    reminderErrors: {
        [key: string]: string;
    };
    participants: Participant[];
    valueChanged: EventEmitter<{
        value: string;
        name: string;
        valueChanged?: (event: CustomEvent<{
            value: string;
            name: string;
        }>) => void;
    }>;
    connectedCallback(): void;
    disconnectedCallback(): void;
    componentWillLoad(): void;
    componentDidLoad(): void;
    componentWillUpdate(): void;
    componentDidUpdate(): void;
    componentWillRender(): void;
    componentDidRender(): void;
    elementNameChangedHandler(newValue: string): void;
    selectedConfigurationChangedHandler(newVal: Configuration): void;
    selectedLanguageChangedHandler(newVal: LANGUAGE_CODE, oldVal: LANGUAGE_CODE): void;
    handleValueChanged(event: CustomEvent): void;
    handleNylasFormDropdownChanged(event: CustomEvent): void;
    handleNylasFormInputChanged(event: CustomEvent): void;
    addReminder(): void;
    deleteReminder(index: number): void;
    get isInternalsAvailable(): boolean;
    updateRemindersFormValue(): void;
    formatReminderTime(reminderTime: number): string;
    render(): any;
}
