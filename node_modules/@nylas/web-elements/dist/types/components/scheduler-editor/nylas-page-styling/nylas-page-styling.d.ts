import { EventEmitter } from '../../../stencil-public-runtime';
import { Appearance, Configuration } from '@nylas/core';
import { LANGUAGE_CODE } from "../../../common/constants";
export declare class NylasPageStyling {
    host: HTMLNylasPageStylingElement;
    selectedConfiguration?: Configuration;
    name: string;
    appearance?: Appearance;
    isOpen: boolean;
    selectedLanguage?: LANGUAGE_CODE;
    internals: ElementInternals;
    currentAppearance: Appearance;
    customInputsSlot: Element | null;
    valueChanged: EventEmitter<{
        value: string;
        name: string;
        valueChanged?: (event: CustomEvent<{
            value: string;
            name: string;
        }>) => void;
    }>;
    bookingFormSubmitted: EventEmitter<void>;
    connectedCallback(): void;
    disconnectedCallback(): void;
    componentWillLoad(): void;
    componentDidLoad(): void;
    componentWillUpdate(): void;
    componentDidUpdate(): void;
    componentWillRender(): void;
    componentDidRender(): void;
    elementNameChangedHandler(newValue: string): void;
    selectedLanguageChangedHandler(newVal: LANGUAGE_CODE, oldVal: LANGUAGE_CODE): void;
    customInputsSlotChangedHandler(newValue: Element | null): void;
    cloneAndCopyProps(element: HTMLElement): HTMLElement;
    selectedConfigurationChangedHandler(newValue: Configuration): void;
    checkIfElementIsInSlot(name: string): boolean;
    nylasFormInputChangeHandler(event: CustomEvent<{
        value: string;
        name: string;
        type?: string;
    }>): Promise<void>;
    nylasFormDropdownChangedHandler(event: CustomEvent<{
        value: string;
        name: string;
    }>): void;
    valueChangedHandler(event: CustomEvent<{
        value: string;
        name: string;
    }>): void;
    checkboxToggledHandler(event: CustomEvent<{
        checked: boolean;
        name: string;
        label: string;
    }>): void;
    radioChangedHandler(event: CustomEvent<{
        value: string;
        name: string;
        label: string;
        type: string;
    }>): void;
    updateConfirmationFormValue(): void;
    toggleConfirmationEmail(): void;
    render(): any;
}
