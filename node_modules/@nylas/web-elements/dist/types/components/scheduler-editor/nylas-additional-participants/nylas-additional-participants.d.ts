import { EventEmitter } from '../../../stencil-public-runtime';
import { AdditionalParticipant, Calendar, Configuration } from '@nylas/core';
import { User } from "../../../common/nylas-api-request";
import { LANGUAGE_CODE } from "../../../common/constants";
type Participant = {
    name?: string;
    email: string;
    is_valid?: boolean;
    is_organizer?: boolean;
    availability?: Availability;
    booking?: Booking;
};
type Availability = {
    calendar_ids: string[];
};
type Booking = {
    calendar_id: string;
};
export declare class NylasAdditionalParticipants {
    host: HTMLNylasAdditionalParticipantsElement;
    name: string;
    selectedConfiguration?: Configuration;
    currentUser?: User;
    currentUserCalendars?: Calendar[];
    participantOptions?: AdditionalParticipant[];
    eventParticipants?: Participant[];
    selectedLanguage?: LANGUAGE_CODE;
    internals: ElementInternals;
    participants: Participant[];
    participantErrors: {
        [key: string]: string;
    };
    includeOrganizerAsParticipant: boolean;
    isRoundRobinConfig: boolean;
    error: string;
    valueChanged: EventEmitter<{
        value: string;
        name: string;
    }>;
    elementNameChangedHandler(newValue: string): void;
    selectedConfigurationAndCurrentUserChangedHandler(newValue: unknown, _oldValue: unknown, propName: string): void;
    selectedLanguageChangedHandler(newVal: LANGUAGE_CODE, oldVal: LANGUAGE_CODE): void;
    connectedCallback(): void;
    componentWillLoad(): void;
    componentDidLoad(): void;
    disconnectedCallback(): void;
    private updateState;
    get isInternalsAvailable(): boolean;
    onInputOptionChanged(event: CustomEvent<{
        value: string;
        name: string;
    }>): void;
    updateOrganizerAsParticipant(): void;
    addParticipant(): void;
    removeParticipant(index: number): void;
    updateFormValue(): void;
    getArrayDifference(array1: AdditionalParticipant[], array2: Participant[]): {
        value: string;
        label: string;
    }[];
    render(): any;
}
export {};
