import { DataState, NylasEvent } from "../common/types";
import { AdditionalFields, Appearance, NylasSchedulerBookingData, ThemeConfig, Timeslot } from '@nylas/core';
export type AvailabilityTimeslot = {
    emails: string[];
    start_time: Date;
    end_time: Date;
};
export type LoadingState = {
    api: 'availability' | 'createBooking' | 'cancelBooking' | 'rescheduleBooking';
};
export type ConfigSettings = {
    configuration_id: string;
    booking?: {
        additional_fields: Record<string, string>;
        additional_guests: {
            email: string;
            name: string;
        }[];
        booking_ref: string;
        booking_ref_salt: string;
        guest: {
            email: string;
            name: string;
        };
        timezone: string;
        email_language: string;
        event_data: {
            location: string;
            when: {
                start_time: Date;
                end_time: Date;
                end_timezone: string;
                start_timezone: string;
                object: string;
            };
        };
        event_organizer: {
            name: string;
            email: string;
            is_organizer: boolean;
        };
    };
    scheduler: {
        available_days_in_future: number;
        min_cancellation_notice: number;
        min_booking_notice: number;
        rescheduling_url?: string;
        cancellation_url?: string;
        cancellation_policy?: string;
        hide_additional_guests?: boolean;
        hide_cancellation_options?: boolean;
        hide_rescheduling_options?: boolean;
        additional_fields?: Record<string, AdditionalFields>;
        confirmation_redirect_url?: string;
        organizer_confirmation_url?: string;
    };
    organizer: {
        name: string;
        email: string;
    };
    slug: string;
    appearance: Appearance;
    booking_type: string;
    name: string;
};
export interface NylasSchedulerStoreState {
    selectedDate: Date | null;
    selectedLanguage: string;
    selectedTimezone: string;
    selectedTimeslot: Timeslot | null;
    availabilityOrderEmails: string[];
    showBookingForm: boolean;
    selectableDates: Date[] | null;
    eventDuration: number;
    availability: AvailabilityTimeslot[];
    state: DataState;
    eventInfo: NylasEvent | null;
    cancelledEventInfo: Partial<NylasEvent> | null;
    reschedulingEventInfo?: NylasEvent;
    confirmedEventInfo?: NylasEvent;
    bookingInfo?: NylasSchedulerBookingData;
    rescheduleBookingId?: string;
    cancelBookingId?: string;
    isLoading: boolean;
    nylasBranding?: boolean;
    configSettings?: ConfigSettings;
    organizerConfirmationBookingId?: string;
    rejectBookingId?: string;
    organizerConfirmationSalt?: string;
    themeConfig?: ThemeConfig;
}
export type NylasSchedulerStoreType = ReturnType<typeof CreateNylasSchedulerStore>;
export declare function CreateNylasSchedulerStore(defaultState?: Partial<NylasSchedulerStoreState>): import("@stencil/store").ObservableMap<NylasSchedulerStoreState>;
