import { r as w, c as h, d as c, q as ie, h as a, i as l, k as le, H as k, g as S, s as oe, t as _e, j as se, v as xe, w as we, x as I, y as Ee, z as Te, A as O, C as Be, F as De } from "./index-cd93b584.js";
import { R as L } from "./register-component-a169494c-62768a00.js";
import { T as j, b as de, a as re } from "./constants-91d76d21-1638ead6.js";
import "react";
import "react-dom";
const Se = ':host{display:block;--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:"Inter", sans-serif}.nylas-booked-event-card{height:inherit;display:flex;flex-direction:column;justify-content:space-between;align-items:center;font-family:var(--nylas-font-family)}.event-card-wrapper{display:flex;align-items:center;flex-direction:column;background-color:var(--nylas-base-0);color:var(--nylas-base-900);border-radius:var(--nylas-border-radius-3x);position:relative;margin-top:1rem;margin-bottom:2rem;width:424px;box-shadow:0px 1px 4px rgba(0, 0, 0, 0.1), 0px 3px 6px rgba(0, 0, 0, 0.06)}@media screen and (max-width: 768px){.event-card-wrapper{width:100%;border-radius:0px}}.calendar-icon{display:flex;align-items:center;justify-content:center;width:3rem;height:3rem;border-radius:50%;position:absolute;top:-1.25rem;left:50%;transform:translateX(-50%);background-color:var(--nylas-base-0);border:1px solid var(--nylas-base-200);color:var(--nylas-base-700)}.booked-event-header{margin:1.5rem 0;overflow-wrap:anywhere;display:flex;align-items:center;flex-direction:column;font-size:16px;font-weight:400;border-bottom:1px solid var(--nylas-base-200);width:inherit;padding:0 0 1.5rem}.booked-event-header h2{color:var(--nylas-base-600);margin-top:1.5rem;margin-bottom:0.25rem;font-size:1.125rem;font-weight:600}.booked-event-header .card-description{text-align:center}.booking-date-time,.booking-participants{padding:0 1rem;margin-top:1.5rem;margin-left:3rem;display:flex;flex-direction:column;justify-content:space-between;align-self:flex-start;position:relative}.booking-date-time svg,.booking-participants svg{color:var(--nylas-base-700);position:absolute;left:-10px}.booking-date-time .block,.booking-participants .block{display:block}.booking-date-time h3,.booking-participants h3{color:var(--nylas-base-600);margin:0;font-size:16px;font-weight:600;line-height:1.25rem;text-align:justify;margin-bottom:4px}.booking-date-time p,.booking-participants p{font-size:16px;margin:0;font-weight:400;text-align:justify;color:var(--nylas-base-800)}.booking-participants{margin-bottom:1.5rem}.booked-event-timezone{display:flex;color:var(--nylas-base-600);margin-bottom:1.5rem;gap:4px;margin:2rem;align-items:center;align-self:flex-end}.button-container{width:inherit}.footer{padding:0.5rem;display:grid;grid-template-columns:1fr 1fr;gap:0.5rem;box-sizing:border-box;background-color:var(--nylas-base-25);border-top:1px solid var(--nylas-base-200);width:100%;border-radius:0 0 var(--nylas-border-radius-2x) var(--nylas-border-radius-2x)}.footer.no-template-cols{grid-template-columns:1fr}.footer.no-footer{display:none}sp-divider{background-color:var(--nylas-base-200);height:1px}calendar-check-icon{display:flex;align-items:center;justify-content:center;height:100%}', Le = Se;
var Ie = function(e, t, n, r) {
  var s = arguments.length, i = s < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, n) : r, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(e, t, n, r);
  else
    for (var d = e.length - 1; d >= 0; d--)
      (o = e[d]) && (i = (s < 3 ? o(i) : s > 3 ? o(t, n, i) : o(t, n)) || i);
  return s > 3 && i && Object.defineProperty(t, n, i), i;
}, $ = function(e, t) {
  if (typeof Reflect == "object" && typeof Reflect.metadata == "function")
    return Reflect.metadata(e, t);
};
const ce = class {
  constructor(e) {
    w(this, e), this.cancelBookingButtonClicked = h(this, "cancelBookingButtonClicked", 7), this.rescheduleButtonClicked = h(this, "rescheduleButtonClicked", 7), this.rescheduleBookedEventError = h(this, "rescheduleBookedEventError", 7), this.cancelBookedEventValidationError = h(this, "cancelBookedEventValidationError", 7), this.handleCancelBookingButtonClicked = () => {
      var s, i;
      const t = new Date(this.selectedTimeslot.start_time), n = (i = (s = this.configSettings) == null ? void 0 : s.scheduler) == null ? void 0 : i.min_cancellation_notice;
      t.getTime() - n * 60 * 1e3 < (/* @__PURE__ */ new Date()).getTime() ? this.cancelBookedEventValidationError.emit({
        error: {
          title: "Cancellation Error",
          message: `You cannot cancel the booking within ${n} minutes of the event.`
        }
      }) : this.cancelBookingButtonClicked.emit({ bookingId: this.eventInfo.booking_id });
    }, this.handleRescheduleButtonClicked = () => {
      const t = (n) => {
        this.rescheduleBookedEventError.emit(n);
      };
      this.rescheduleButtonClicked.emit({ bookingId: this.eventInfo.booking_id, errorHandler: t });
    }, this.getPaticipantType = (t) => {
      switch (t) {
        case "host":
          return "Host";
        case "you":
          return "You";
        default:
          return "";
      }
    }, this.eventInfo = void 0, this.rescheduleBookingId = void 0, this.bookingInfo = void 0, this.configSettings = void 0, this.isLoading = void 0, this.themeConfig = void 0, this.selectedTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone, this.selectedTimeslot = void 0, this.selectedLanguage = navigator.language, this.startTime = "", this.endTime = "";
  }
  themeConfigChanged(e) {
    this.applyThemeConfig(e);
  }
  connectedCallback() {
  }
  disconnectedCallback() {
  }
  async componentWillLoad() {
    c("[nylas-booked-event-card] Component will load");
  }
  async componentDidLoad() {
    var e, t;
    c("[nylas-booked-event-card] Component did load"), this.eventInfo || console.warn('[nylas-booked-event-card] "eventInfo" prop missing. Please provide the event info to display the event details in the booked event card component.'), this.bookingInfo || console.warn('[nylas-booked-event-card] "bookingInfo" prop missing. Please provide the booking info to display the guest details in the booked event card component.'), this.applyThemeConfig(this.themeConfig), this.startTime = ie((e = this.selectedTimeslot) == null ? void 0 : e.start_time, this.selectedTimezone), this.endTime = ie((t = this.selectedTimeslot) == null ? void 0 : t.end_time, this.selectedTimezone);
  }
  applyThemeConfig(e) {
    if (e)
      for (const [t, n] of Object.entries(e))
        this.host.style.setProperty(`${t}`, n);
  }
  render() {
    var n, r, s, i, o, d, p, m, y, v, E, T, B, u, f, g;
    const e = (n = this.configSettings) == null ? void 0 : n.booking_type, t = e && e !== "booking";
    return a(k, { key: "5c0d6ded922007d327b55a3536338a82302ca0be", part: "nbec" }, a("div", { key: "a0d3c60605fbf54303527bc6001477db946eb560", class: "nylas-booked-event-card" }, a("div", { key: "043a3aead5724fd56c3075d60ff0cfe470e2d551", class: "booked-event-timezone" }, a("globe-icon", { key: "f21ee01ed85b02982e013d6731bffd8a20ef0ad9" }), j[this.selectedTimezone]), a("div", { key: "5408744046d0b755044db2c88f15dfeed1ac0cd1", class: "event-card-wrapper", part: "nbec__card" }, a("div", { key: "c1e352e8395aa35c9faadadf10a82f04b10cf88e", class: "calendar-icon" }, a("calendar-check-icon", { key: "9e4464eb5a88dafa35340d8441bfc6570c880151" })), a("div", { key: "2265e9737ed82f085e348a6bde53dc68d7d7fc94", class: "booked-event-header" }, a("h2", { key: "30ba50948f9de4ef3f47c72547478c81870d85b2", slot: "card-title", part: "nbec__title" }, this.rescheduleBookingId && !this.isLoading ? `${l.t("bookingRescheduled")}` : t && !this.isLoading ? `${l.t("bookingSent")}` : `${l.t("bookingConfirmed")}`, "!"), a("div", { key: "8ae1ffd38656334a233bca8eb7b25b6e7c03c937", class: "card-description", part: "nbec__description" }, t ? l.t("bookingSentDescription") : a("span", null, l.t("bookingConfirmedDescription")))), a("div", { key: "cf6a84c9dc87e923c21468561a7601f476fd85a1", class: "booking-date-time" }, a("checkmark-circle-icon", { key: "7e42ae42fbe6c87a21f2a6031796132a5562d882" }), a("h3", { key: "d92ede4d9f33a3dd461a0e14c4965e614c23f075" }, l.t("bookingDateAndTimeHeader")), a("p", { key: "1da0c2ff11644c6718e8ca512baffbc0affb3fd5" }, (r = this.selectedTimeslot) != null && r.start_time ? le(new Date((s = this.selectedTimeslot) == null ? void 0 : s.start_time).toLocaleDateString(de[this.selectedLanguage], { dateStyle: "full" })) : "-", " ", a("br", { key: "167cd8c78e97697766713811549588e9d6fd3fcb" }), this.startTime, " - ", this.endTime)), a("div", { key: "61d35600d07d7ffccbce3f3aa93a3bfed385637e", class: "booking-participants" }), !t && a("div", { class: "button-container" }, a("div", { class: {
      footer: !0,
      "no-footer": ((o = (i = this.configSettings) == null ? void 0 : i.scheduler) == null ? void 0 : o.hide_cancellation_options) && ((p = (d = this.configSettings) == null ? void 0 : d.scheduler) == null ? void 0 : p.hide_rescheduling_options) || ((m = this.configSettings) == null ? void 0 : m.booking_type) === "organizer-confirmation",
      "no-template-cols": ((v = (y = this.configSettings) == null ? void 0 : y.scheduler) == null ? void 0 : v.hide_cancellation_options) || ((T = (E = this.configSettings) == null ? void 0 : E.scheduler) == null ? void 0 : T.hide_rescheduling_options)
    } }, !((u = (B = this.configSettings) == null ? void 0 : B.scheduler) != null && u.hide_cancellation_options) && a("button-component", { variant: "destructive", onClick: this.handleCancelBookingButtonClicked, part: "nbec__button-outline nbec__cancel-cta" }, `${l.t("cancelBookingButton")}`), !((g = (f = this.configSettings) == null ? void 0 : f.scheduler) != null && g.hide_rescheduling_options) && a("button-component", { variant: "basic", onClick: this.handleRescheduleButtonClicked, disabled: this.isLoading, part: "nbec__button-outline nbec__reschedule-cta" }, `${l.t("rescheduleBookingButton")}`))))));
  }
  get host() {
    return S(this);
  }
  static get watchers() {
    return {
      themeConfig: ["themeConfigChanged"]
    };
  }
};
Ie([
  L({
    name: "nylas-booked-event-card",
    stateToProps: /* @__PURE__ */ new Map([
      ["scheduler.bookingInfo", "bookingInfo"],
      ["scheduler.rescheduleBookingId", "rescheduleBookingId"],
      ["scheduler.selectedTimezone", "selectedTimezone"],
      ["scheduler.selectedTimeslot", "selectedTimeslot"],
      ["scheduler.isLoading", "isLoading"],
      ["scheduler.selectedLanguage", "selectedLanguage"],
      ["scheduler.configSettings", "configSettings"],
      ["scheduler.themeConfig", "themeConfig"]
    ]),
    eventToProps: {
      cancelBookingButtonClicked: async (e, t) => {
        t.scheduler.setCancel(e.detail.bookingId);
      },
      rescheduleButtonClicked: async (e, t) => {
        const n = await t.scheduler.setReschedule(e.detail.bookingId), { errorHandler: r } = e.detail;
        r && (!n || "error" in n) && r(n);
      },
      rescheduleBookedEventError: async (e, t) => {
        c("nylas-booked-event-card", "rescheduleBookedEventError", e.detail);
      },
      cancelBookedEventValidationError: async (e, t) => {
        c("nylas-booked-event-card", "cancelBookedEventValidationError", e.detail);
      }
    },
    fireRegisterEvent: !0
  }),
  $("design:type", Function),
  $("design:paramtypes", []),
  $("design:returntype", void 0)
], ce.prototype, "render", null);
ce.style = Le;
const ze = ':host{display:block;height:100%;--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:"Inter", sans-serif}.nylas-booking-form{width:100%;padding:1.5rem;box-sizing:border-box;height:450px;overflow-y:auto;height:100%}form{height:100%;display:flex;flex-direction:column;justify-content:space-between;align-items:center}sp-textfield{--spectrum-corner-radius-100:var(--nylas-border-radius-2x);--spectrum-textfield-border-color:var(--nylas-base-300);position:relative;width:100%;height:48px;margin-bottom:16px;color:var(--nylas-base-500)}.cta{width:100%;display:grid;grid-template-columns:1fr 1fr;gap:0.5rem;align-items:flex-start;justify-content:space-between;gap:0.5rem;padding:14px;box-sizing:border-box;border-top:1px solid var(--nylas-base-200)}@media screen and (max-width: 768px){.cta{grid-template-columns:1fr}}.input-wrapper{width:100%;display:flex;flex-direction:column;align-items:flex-start;gap:4px;margin-bottom:1rem}.input-wrapper input::placeholder{color:var(--nylas-base-300)}.input-wrapper label,.input-wrapper input{font-family:var(--nylas-font-family);font-size:16px}.input-wrapper .help-text{margin:0;color:var(--nylas-error)}.button-wrapper{width:100%;align-items:flex-start;height:max-content;position:relative}.button-content{display:flex;gap:4px;align-items:center}sp-infield-button{--spectrum-infield-button-background-color:transparent;--spectrum-infield-button-background-color-hover:transparent;--spectrum-infield-button-background-color-active:transparent;--spectrum-infield-button-border-color:transparent;--spectrum-infield-button-border-width:1px;--spectrum-infield-button-border-radius:0;color:var(--nylas-base-600);background:transparent;border:none;outline:1px solid var(--nylas-base-300);border-radius:0 var(--nylas-border-radius-2x) var(--nylas-border-radius-2x) 0;height:52px;width:52px;display:flex;position:absolute;right:0;align-items:center;justify-content:center;cursor:pointer}sp-infield-button sp-icon-cross300{color:var(--nylas-base-600)}sp-infield-button.error{border-width:2px;border-color:var(--nylas-error)}input[type=text],input[type=email]{display:flex;height:48px;padding-left:16px;align-items:center;gap:8px;align-self:stretch;border-radius:var(--nylas-border-radius-2x);border:1px solid var(--nylas-base-300);background:var(--nylas-base-0);width:-webkit-fill-available;color:var(--nylas-base-900);font-size:16px;font-style:normal;font-weight:400;line-height:150%}input[type=text]:focus,input[type=email]:focus{outline-color:var(--nylas-primary)}input[type=text].error,input[type=email].error{border-radius:var(--nylas-border-radius-2x);font-weight:600;border-color:var(--nylas-error);border-width:2px}input[type=text].error::placeholder,input[type=email].error::placeholder{font-weight:400}input[type=text]::placeholder,input[type=email]::placeholder{color:var(--nylas-base-300)}input[type=text].guest-email,input[type=email].guest-email{color:var(--nylas-base-900);padding-right:52px}label{display:flex;color:var(--nylas-base-800, #293056);font-size:14px;font-style:normal;font-weight:400;line-height:150%}label.error{color:var(--nylas-error)}label span.required{color:var(--nylas-error);padding:0 0.25rem}button-component.remove-guest{position:absolute;height:51px;right:0}button-component.remove-guest.error button{border-color:var(--nylas-error)}button-component.remove-guest button{height:inherit;border-top-left-radius:initial;border-bottom-left-radius:initial;border:none !important;border-left:1px solid var(--nylas-base-300) !important}button-component.remove-guest button:hover,button-component.remove-guest button:focus{outline:1px solid var(--nylas-primary) !important;color:var(--nylas-primary)}button-component.back button{--dot-color:var(--nylas-base-800)}.guest-email-input{position:relative;display:flex;width:100%}multi-select-dropdown::part(msd_dropdown-label){margin-bottom:4px}multi-select-dropdown::part(msd_dropdown_error){font-size:16px}multi-select-dropdown::part(msd_dropdown-button){height:52px;border-color:var(--nylas-base-300)}multi-select-dropdown::part(msd_dropdown-button--error){border-width:2px;border-color:var(--nylas-error)}', je = ze;
var Re = function(e, t, n, r) {
  var s = arguments.length, i = s < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, n) : r, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(e, t, n, r);
  else
    for (var d = e.length - 1; d >= 0; d--)
      (o = e[d]) && (i = (s < 3 ? o(i) : s > 3 ? o(t, n, i) : o(t, n)) || i);
  return s > 3 && i && Object.defineProperty(t, n, i), i;
}, M = function(e, t) {
  if (typeof Reflect == "object" && typeof Reflect.metadata == "function")
    return Reflect.metadata(e, t);
};
const R = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/, fe = class {
  constructor(e) {
    w(this, e), this.nameChanged = h(this, "nameChanged", 7), this.emailChanged = h(this, "emailChanged", 7), this.backButtonClicked = h(this, "backButtonClicked", 7), this.detailsConfirmed = h(this, "detailsConfirmed", 7), this.bookingFormError = h(this, "bookingFormError", 7), this.bookingFormSubmitted = h(this, "bookingFormSubmitted", 7), this.handleGuestChange = (t, n) => {
      this.resetGuestEmailError(t);
      const r = [...this.guestEmails];
      r[t] = oe(n), this.guestEmails = [...r];
    }, this.handleGuestBlur = (t, n) => {
      if (this.resetGuestEmailError(t), n === "") {
        this.guestEmailErrors[t] = l.t("fieldRequired", { field: l.t("email") });
        return;
      }
      if (!R.test(n)) {
        this.guestEmailErrors[t] = l.t("invalidInputFormat", { field: l.t("email") });
        return;
      }
      this.handleGuestChange(t, n);
    }, this.addGuestButtonClickedHandler = (t) => {
      t.preventDefault(), this.guestEmails = [...this.guestEmails, ""];
    }, this.removeGuestButtonClickHandler = (t, n) => {
      t.preventDefault(), this.resetGuestEmailError(n);
      const r = [...this.guestEmails];
      r.splice(n, 1), this.guestEmails = [...r];
    }, this.handleBackButtonClicked = (t) => {
      t.preventDefault(), this.backButtonLoading = !0, this.backButtonClicked.emit();
    }, this.bookButtonClickedHandler = async (t) => {
      var m, y, v, E, T, B, u, f, g, b, C;
      if (t.preventDefault(), this.bookingFormSubmitted.emit().defaultPrevented)
        return;
      c("nylas-booking-form", "bookButtonClickedHandler", this.bookingInfo);
      const r = this.name || ((y = (m = this.bookingInfo) == null ? void 0 : m.primaryParticipant) == null ? void 0 : y.name), s = this.email || ((E = (v = this.bookingInfo) == null ? void 0 : v.primaryParticipant) == null ? void 0 : E.email);
      if (!r || r === "") {
        this.isNameValid = !1, this.validationError.name = l.t("fieldRequired", { field: l.t("name") }) || "Name is required", this.bookingFormError.emit({
          title: "Booking form error",
          description: "Name is required"
        });
        return;
      }
      if (!s || s === "") {
        this.isEmailValid = !1, this.validationError.email = l.t("fieldRequired", { field: l.t("email") }) || "Email is required", this.bookingFormError.emit({
          title: "Booking form error",
          description: "Email is required"
        });
        return;
      }
      if (!R.test(s)) {
        this.isEmailValid = !1, this.validationError.email = l.t("invalidInputFormat", { field: l.t("email") }), this.bookingFormError.emit({
          title: "Booking form error",
          description: l.t("invalidInputFormat", { field: l.t("email") }) || "Invalid email"
        });
        return;
      }
      let i = [];
      if (this.guestEmails.length > 0) {
        let _ = !1;
        if (this.guestEmails.forEach((x, z) => {
          x === "" ? (_ = !0, this.guestEmailErrors = { ...this.guestEmailErrors, [z]: l.t("fieldRequired", { field: l.t("email") }) }) : R.test(x) || (_ = !0, this.guestEmailErrors = { ...this.guestEmailErrors, [z]: l.t("invalidInputFormat", { field: l.t("email") }) });
        }), _) {
          this.bookingFormError.emit({
            title: "Booking form error",
            description: l.t("invalidInputFormat", { field: l.t("guestEmail") }) || "Invalid guest email"
          });
          return;
        }
        i = this.guestEmails.map((x) => ({ name: x.trim(), email: x.trim() }));
      } else
        (T = this.bookingInfo) != null && T.guests && (i = (B = this.bookingInfo) == null ? void 0 : B.guests);
      const o = {}, d = ((f = (u = this.configSettings) == null ? void 0 : u.scheduler) == null ? void 0 : f.additional_fields) || {}, p = ((b = (g = this.configSettings) == null ? void 0 : g.booking) == null ? void 0 : b.additional_fields) || {};
      (C = this.bookingInfo) != null && C.additionalFields && Object.entries(this.bookingInfo.additionalFields).forEach(([_, x]) => {
        _ in d && (o[_] = x.value);
      }), Object.entries(d).forEach(([_, x]) => {
        if (!(_ in o)) {
          const z = p[_] || x.default || "";
          o[_] = z;
        }
      }), this.detailsConfirmed.emit({
        primaryParticipant: {
          name: r,
          email: s
        },
        guests: i,
        additionalFields: { ...o, ...this.additionalFields }
      });
    }, this.updateAdditionalFields = (t, n) => {
      this.additionalFields && (this.additionalFields[t] = n);
    }, this.isLoading = void 0, this.bookingInfo = void 0, this.eventInfo = void 0, this.configSettings = void 0, this.themeConfig = void 0, this.name = "", this.email = "", this.guestEmails = [], this.guestEmailErrors = {}, this.isNameValid = !0, this.isEmailValid = !0, this.additionalFields = {}, this.validationError = { name: "", email: "" }, this.backButtonLoading = !1;
  }
  connectedCallback() {
  }
  disconnectedCallback() {
  }
  componentWillLoad() {
    c("nylas-booking-form", "componentWillLoad", this.bookingInfo);
  }
  componentDidLoad() {
    var e, t, n, r, s, i, o, d, p, m, y, v, E, T, B, u, f;
    c("nylas-booking-form", "componentDidLoad", this.bookingInfo), this.bookingInfo && ((e = this.bookingInfo) != null && e.primaryParticipant) ? (this.name = (t = this.bookingInfo.primaryParticipant) == null ? void 0 : t.name, this.email = (n = this.bookingInfo.primaryParticipant) == null ? void 0 : n.email) : (s = (r = this.configSettings) == null ? void 0 : r.booking) != null && s.guest && (this.name = (d = (o = (i = this.configSettings) == null ? void 0 : i.booking) == null ? void 0 : o.guest) == null ? void 0 : d.name, this.email = (y = (m = (p = this.configSettings) == null ? void 0 : p.booking) == null ? void 0 : m.guest) == null ? void 0 : y.email), (E = (v = this.configSettings) == null ? void 0 : v.booking) != null && E.additional_guests && ((B = (T = this.configSettings) == null ? void 0 : T.booking) == null ? void 0 : B.additional_guests.length) > 0 && (this.guestEmails = (f = (u = this.configSettings) == null ? void 0 : u.booking) == null ? void 0 : f.additional_guests.map((g) => g.email)), this.applyThemeConfig(this.themeConfig);
  }
  bookingInfoChangedHandler(e) {
    e && e.primaryParticipant && (this.name = e.primaryParticipant.name, this.email = e.primaryParticipant.email);
  }
  themeConfigChanged(e) {
    this.applyThemeConfig(e);
  }
  applyThemeConfig(e) {
    if (e)
      for (const [t, n] of Object.entries(e))
        this.host.style.setProperty(`${t}`, n);
  }
  changeName(e) {
    this.isNameValid = !0, this.validationError.name = "", this.name = _e(e), this.nameChanged.emit(e);
  }
  changeEmail(e) {
    this.isEmailValid = !0, this.validationError.email = "", this.email = oe(e), this.emailChanged.emit(e);
  }
  resetGuestEmailError(e) {
    const t = { ...this.guestEmailErrors };
    delete t[e], this.guestEmailErrors = { ...t };
  }
  nylasFormInputChangedHandler(e) {
    switch (e.detail.name) {
      case "name":
        this.changeName(e.detail.value);
        break;
      case "email":
        this.changeEmail(e.detail.value);
        break;
      default:
        if (e.detail.error) {
          this.bookingFormError.emit({
            title: "Booking form error",
            description: e.detail.error
          });
          return;
        }
        this.updateAdditionalFields(e.detail.name, e.detail.value);
        break;
    }
  }
  selectOptionChangedHandler(e) {
    if (e.detail.error) {
      this.bookingFormError.emit({
        title: "Booking form error",
        description: e.detail.error
      });
      return;
    }
    this.updateAdditionalFields(e.detail.name, e.detail.value);
  }
  selecedOptionsChangedHandler(e) {
    if (e.detail.error) {
      this.bookingFormError.emit({
        title: "Booking form error",
        description: e.detail.error
      });
      return;
    }
    const t = e.detail.value.toString();
    this.updateAdditionalFields(e.detail.name, t);
  }
  switchToggledHandler(e) {
    this.updateAdditionalFields(e.detail.name, e.detail.checked ? "true" : "false");
  }
  checkboxToggledHandler(e) {
    this.updateAdditionalFields(e.detail.name, e.detail.checked ? "true" : "false");
  }
  radioChangedHandler(e) {
    this.updateAdditionalFields(e.detail.name, e.detail.value);
  }
  dropdownDefaultSelectedHandler(e) {
    this.updateAdditionalFields(e.detail.name, e.detail.value);
  }
  render() {
    var e, t, n, r, s, i, o, d, p, m, y, v, E, T, B;
    return a(k, { key: "5c6062534cb10178622df56b87e9d27093302f67" }, a("form", { key: "d8fba8dc8b940082f774b1345641bbe6e756c295", onSubmit: (u) => this.bookButtonClickedHandler(u), noValidate: !0 }, a("div", { key: "b3ce646d930f267196eea3dddd45036d6ead5b83", class: "nylas-booking-form", part: "nbf" }, a("div", { key: "8303180ac1fa78c4652e1a5f9b15950840ecfc11", class: "input-wrapper", part: "nbf__input-wrapper" }, a("input-component", { key: "861d9988deae50c98a013e573b04a73283d7ddd3", label: l.t("name"), name: "name", id: "name", defaultValue: ((t = (e = this.bookingInfo) == null ? void 0 : e.primaryParticipant) == null ? void 0 : t.name) || ((s = (r = (n = this.configSettings) == null ? void 0 : n.booking) == null ? void 0 : r.guest) == null ? void 0 : s.name) || this.name, placeholder: l.t("namePlaceholder"), type: "text", required: !0, requiredError: l.t("fieldRequired", { field: l.t("name") }), patternError: l.t("invalidInputFormat", { field: l.t("name") }), part: "nbf__input-textfield" })), a("div", { key: "4badb20b9713d9eb7c40687a830a516eaa057b18", class: "input-wrapper", part: "nbf__input-wrapper" }, a("input-component", { key: "92e5688fef7bf79e73e42c33c89173b0ef027101", label: l.t("email"), name: "email", id: "email", pattern: R, defaultValue: ((o = (i = this.bookingInfo) == null ? void 0 : i.primaryParticipant) == null ? void 0 : o.email) || ((m = (p = (d = this.configSettings) == null ? void 0 : d.booking) == null ? void 0 : p.guest) == null ? void 0 : m.email) || this.email, placeholder: l.t("emailPlaceholder"), type: "email", required: !0, requiredError: l.t("fieldRequired", { field: l.t("email") }), patternError: l.t("invalidInputFormat", { field: l.t("email") }), part: "nbf__input-textfield" })), ((v = (y = this.configSettings) == null ? void 0 : y.scheduler) == null ? void 0 : v.hide_additional_guests) !== !0 && a("div", { class: "input-wrapper", part: "nbf__input-wrapper" }, this.guestEmails.map((u, f) => a("div", { class: "input-wrapper button-wrapper" }, a("label", { class: {
      error: !!this.guestEmailErrors[f]
    } }, l.t("guestEmail")), a("div", { class: "guest-email-input" }, a("input", { type: "email", id: `guest-email-${f}`, maxLength: 100, class: {
      "guest-email": !0,
      error: !!this.guestEmailErrors[f]
    }, placeholder: l.t("guestEmailPlaceholder"), value: u, "data-index": f, part: "nbf__input-textfield", onBlur: (g) => {
      var b;
      return this.handleGuestBlur(f, (b = g.target) == null ? void 0 : b.value);
    }, onInput: (g) => {
      var b;
      return this.handleGuestChange(f, (b = g.target) == null ? void 0 : b.value);
    } }), a("button-component", { variant: "basic", tooltip: "Remove guest", onClick: (g) => this.removeGuestButtonClickHandler(g, f), class: {
      "remove-guest": !0,
      error: !!this.guestEmailErrors[f]
    } }, a("close-icon", null))), a("p", { class: "help-text" }, this.guestEmailErrors[f]))), a("button-component", { class: "add-guest", variant: "invisible", part: "nbf__button-ghost", onClick: (u) => this.addGuestButtonClickedHandler(u) }, a("div", { class: "button-content" }, a("add-circle-icon", { slot: "icon" }), this.guestEmails.length > 0 ? `${l.t("addAnotherGuest")}` : `${l.t("addGuest")}`))), (B = Object.entries(((T = (E = this.configSettings) == null ? void 0 : E.scheduler) == null ? void 0 : T.additional_fields) || {})) == null ? void 0 : B.sort((u, f) => u[1].order - f[1].order).map((u) => {
      var _, x, z, J, K, Q, ee, te, ne, ae;
      const f = u[1], g = f.label, b = u[0], C = ((z = (x = (_ = this.bookingInfo) == null ? void 0 : _.additionalFields) == null ? void 0 : x[b]) == null ? void 0 : z.value) || ((Q = (K = (J = this.configSettings) == null ? void 0 : J.booking) == null ? void 0 : K.additional_fields) == null ? void 0 : Q[b]) || f.default || "";
      switch (f.type) {
        case "dropdown":
          return a("div", { class: "input-wrapper", part: "nbf__input-wrapper" }, a("select-dropdown", { label: g, name: b, id: b, withSearch: !1, defaultSelectedOption: C ? { value: C, label: C } : void 0, options: (ee = f.options) == null ? void 0 : ee.map((D) => ({ value: D, label: D })), required: f.required, exportparts: "sd_dropdown: nbf__dropdown, sd_dropdown-button: nbf__dropdown-button, sd_dropdown-content: nbf__dropdown-content" }));
        case "checkbox":
          return a("div", { class: "input-wrapper", part: "nbf__input-wrapper" }, a("checkbox-component", { label: g, name: b, id: b, checked: C === "true", required: f.required, part: "nbf__checkbox-component" }));
        case "radio_button":
          return a("div", { class: "input-wrapper", part: "nbf__input-wrapper" }, a("radio-button-group", { label: g, name: b, id: b, defaultSelectedValue: C || ((te = f.options) == null ? void 0 : te[0]) || "", options: (ne = f.options) == null ? void 0 : ne.map((D) => ({ value: D, label: D })), required: f.required, part: "nbf__radio-button-group" }));
        case "multi_line_text":
          return a("div", { class: "input-wrapper", part: "nbf__input-wrapper" }, a("textarea-component", { label: g, defaultValue: C, name: b, id: b, required: f.required, part: "nbf__textarea-component" }));
        case "date":
          return a("div", { class: "input-wrapper", part: "nbf__input-wrapper" }, a("nylas-date-component", { label: g, defaultValue: C, name: b, id: b, required: f.required, part: "nbf__date-component" }));
        case "multi_select":
          const Ce = (C == null ? void 0 : C.split(",").map((D) => D.trim())) || [];
          return a("div", null, a("multi-select-dropdown", { label: g, name: b, id: b, options: (ae = f.options) == null ? void 0 : ae.map((D) => ({ value: D, label: D, selected: Ce.includes(D) })), required: f.required, exportparts: "msd_dropdown: nbf__ms_dropdown, msd_dropdown-label: nbf__ms_dropdown-label, msd_dropdown-button: nbf__ms_dropdown-button, msd_dropdown-content: nbf__ms_dropdown-content, msd_dropdown_error: nbf__ms_dropdown_error, msd_dropdown-button--error: nbf__ms_dropdown-button--error" }));
        case "metadata":
          return null;
        default:
          return a("div", { class: "input-wrapper", part: "nbf__input-wrapper" }, a("input-component", { label: g, name: b, id: b, type: f.type, defaultValue: C || "", requiredError: l.t("fieldRequired", { field: g }), required: f.required, part: "nbf__input-textfield" }));
      }
    })), a("div", { key: "6f7a32f05fdf35515851598001ebb18b4a2b52ee", class: "cta" }, a("button-component", { key: "de9548b9fab9475596750725fb9498940cde29b1", variant: "basic", class: "back", part: "nbf__button-outline", isLoading: this.backButtonLoading && this.isLoading, onClick: this.handleBackButtonClicked }, a("slot", { key: "e5fdb427c7b6e25b20c439b5edaa8e545d49cb44", name: "booking-form-back-label" }, `${l.t("backButton")}`)), a("button-component", { key: "688a5974bc75ce734a4409e33d379384a1840ff8", variant: "primary", isLoading: !this.backButtonLoading && this.isLoading, disabled: this.isLoading, part: "nbf__button-primary", type: "submit" }, a("slot", { key: "a588fa553809bb9042db4b06bb0072fbb1cafc15", name: "booking-form-book-label" }, `${l.t("bookNowButton")}`)))));
  }
  get host() {
    return S(this);
  }
  static get watchers() {
    return {
      bookingInfo: ["bookingInfoChangedHandler"],
      themeConfig: ["themeConfigChanged"]
    };
  }
};
Re([
  L({
    name: "nylas-booking-form",
    stateToProps: /* @__PURE__ */ new Map([
      ["scheduler.isLoading", "isLoading"],
      ["scheduler.bookingInfo", "bookingInfo"],
      ["scheduler.eventInfo", "eventInfo"],
      ["scheduler.configSettings", "configSettings"],
      ["scheduler.themeConfig", "themeConfig"]
    ]),
    eventToProps: {
      backButtonClicked: async (e, t) => {
        t.scheduler.toggleAdditionalData(!1);
      },
      nameChanged: async (e, t) => {
        t.scheduler.setParticipantName(e.detail);
      },
      emailChanged: async (e, t) => {
        t.scheduler.setParticipantEmail(e.detail);
      },
      detailsConfirmed: async (e, t) => {
        c("nylas-booking-form", "detailsConfirmed", e.detail);
      },
      bookingFormSubmitted: async (e, t) => {
        c("nylas-booking-form", "bookingFormSubmitted", e.detail);
      },
      bookingFormError: async (e, t) => {
        c("nylas-booking-form", "bookingFormError", e.detail);
      }
    },
    fireRegisterEvent: !0
  }),
  M("design:type", Function),
  M("design:paramtypes", []),
  M("design:returntype", void 0)
], fe.prototype, "render", null);
fe.style = je;
const Fe = ':host{--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:"Inter", sans-serif;display:block;width:400px;font-family:var(--nylas-font-family)}.nylas-cancel-booking-form{display:flex;align-items:center;flex-direction:column;background-color:var(--nylas-base-0);color:var(--nylas-base-800);border-radius:var(--nylas-border-radius-2x);padding:1.5rem;position:relative;box-shadow:0px 1px 4px rgba(0, 0, 0, 0.1), 0px 3px 6px rgba(0, 0, 0, 0.06)}.nylas-cancel-booking-form form{width:100%}.nylas-cancel-booking-form__title{font-size:18px;font-weight:600;margin-bottom:0;color:var(--nylas-base-900)}.nylas-cancel-booking-form__description{font-size:16px;font-style:normal;font-weight:400;line-height:140%;color:var(--nylas-base-600);padding-bottom:1.25rem}.nylas-cancel-booking-form__calendar-icon{width:3rem;height:3rem;border-radius:50%;position:absolute;top:-1.25rem;left:50%;transform:translateX(-50%);background-color:var(--nylas-base-0);border:1px solid var(--nylas-base-200)}calendar-cancel-icon{display:flex;align-items:center;justify-content:center;height:100%}.footer{display:grid;grid-template-columns:1fr 1fr;width:100%;padding-top:1.25rem;gap:1rem;border-top:1px solid var(--nylas-base-200);margin-top:1.25rem}', Pe = Fe;
var Oe = function(e, t, n, r) {
  var s = arguments.length, i = s < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, n) : r, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(e, t, n, r);
  else
    for (var d = e.length - 1; d >= 0; d--)
      (o = e[d]) && (i = (s < 3 ? o(i) : s > 3 ? o(t, n, i) : o(t, n)) || i);
  return s > 3 && i && Object.defineProperty(t, n, i), i;
}, N = function(e, t) {
  if (typeof Reflect == "object" && typeof Reflect.metadata == "function")
    return Reflect.metadata(e, t);
};
const he = class {
  constructor(e) {
    var t, n;
    w(this, e), this.goBackButtonClicked = h(this, "goBackButtonClicked", 7), this.cancelBookingFormSubmitted = h(this, "cancelBookingFormSubmitted", 7), this.triggerValidation = h(this, "triggerValidation", 7), this.cancelBookedEventError = h(this, "cancelBookedEventError", 7), this.cancelBookingFormError = h(this, "cancelBookingFormError", 7), this.handleGoBackClicked = () => {
      this.goBackButtonClicked.emit();
    }, this.handleSubmitCancelBooking = (r) => {
      var o, d, p;
      if (this.triggerValidation.emit({}), r.preventDefault(), !this.cancellationReason) {
        this.cancellationError = l.t("cancellationErrorMessage"), this.cancelBookingFormError.emit({ title: l.t("cancelBokingFormError"), description: l.t("cancellationErrorMessage") });
        return;
      }
      const s = (d = (o = this.configSettings) == null ? void 0 : o.scheduler) == null ? void 0 : d.min_cancellation_notice;
      if (this.selectedTimeslot && s && new Date((p = this.selectedTimeslot) == null ? void 0 : p.start_time).getTime() - s * 60 * 1e3 < (/* @__PURE__ */ new Date()).getTime()) {
        this.cancelBookedEventError.emit({
          error: {
            title: l.t("cancellationErrorTitle"),
            message: l.t("minimumCancellationNoticeErrorMessage", { minCancellationNotice: s })
          }
        });
        return;
      }
      c(`[nylas-cancel-booking-form] Cancel booking form submitted with reason: ${this.cancellationReason}`);
      const i = (m) => {
        this.cancelBookedEventError.emit(m);
      };
      this.cancelBookingId ? this.cancelBookingFormSubmitted.emit({ bookingId: this.cancelBookingId, action: "cancel", reason: this.cancellationReason, errorHandler: i }) : this.rejectBookingId && this.cancelBookingFormSubmitted.emit({ bookingId: this.rejectBookingId, action: "reject", reason: this.cancellationReason, errorHandler: i });
    }, this.cancelBookingId = void 0, this.rejectBookingId = void 0, this.selectedTimeslot = void 0, this.configSettings = void 0, this.eventInfo = void 0, this.isLoading = void 0, this.themeConfig = void 0, this.cancellationReason = "", this.cancellationError = "", this.cancellationPolicy = ((n = (t = this.configSettings) == null ? void 0 : t.scheduler) == null ? void 0 : n.cancellation_policy) || "Your current timeslot will become available to others.";
  }
  configSettingsChangedHandler(e) {
    var t;
    this.cancellationPolicy = ((t = e == null ? void 0 : e.scheduler) == null ? void 0 : t.cancellation_policy) || "Your current timeslot will become available to others.";
  }
  themeConfigChanged(e) {
    this.applyThemeConfig(e);
  }
  connectedCallback() {
    c("[nylas-cancel-booking-form] Component connected");
  }
  async componentWillLoad() {
    c("[nylas-cancel-booking-form] Component will load");
  }
  async componentDidLoad() {
    c("[nylas-cancel-booking-form] Component did load"), this.cancelBookingId || console.warn('[nylas-cancel-booking-form] No booking ID provided, "cancelBookingId" prop is required.'), this.applyThemeConfig(this.themeConfig);
  }
  disconnectedCallback() {
    c("[nylas-cancel-booking-form] Component disconnected");
  }
  applyThemeConfig(e) {
    if (e)
      for (const [t, n] of Object.entries(e))
        this.host.style.setProperty(`${t}`, n);
  }
  handleNylasFormInputChanged(e) {
    this.triggerValidation.emit({}), e.detail.name === "cancel-reason" && (this.cancellationReason = e.detail.value, this.cancellationError = e.detail.error);
  }
  render() {
    var e, t;
    return a(k, { key: "a883955600837a2006648886cc55ac8bd0ea0076", part: "ncbf" }, a("div", { key: "868e3b711cd18b2fabc29d5d179255ed1d9ba0dc", class: "nylas-cancel-booking-form", part: "ncbf__card" }, a("div", { key: "20dabbd57825f213f7a7f1700de22cd8228409b8", class: "nylas-cancel-booking-form__calendar-icon", part: "ncbf__icon" }, a("calendar-cancel-icon", { key: "d6bab72a846359fdec0e0ee30c23c4ab41f33a8e" })), a("h3", { key: "ac741c5913c7977bb411f6dec7ca25ce498a875a", class: "nylas-cancel-booking-form__title", part: "ncbf__title" }, l.t("cancelBookingTitle")), a("div", { key: "4938ceba259171a7b73465ee1979f7f42d99110f", class: "nylas-cancel-booking-form__description", part: "ncbf__description" }, (t = (e = this.configSettings) == null ? void 0 : e.scheduler) != null && t.cancellation_policy ? this.cancellationPolicy : `${l.t("cancelBookingMessage")}`), a("form", { key: "7b33c284b2c9ee3aa92b5faf1f9b25acb5cacd2e", onSubmit: this.handleSubmitCancelBooking }, a("textarea-component", { key: "c2cdfac338d6af301c84ce5120d79e0eba92f56a", id: "cancel-reason", name: "cancel-reason", required: !0, label: l.t("reasonForCancellation"), class: this.cancellationError ? "error" : "", part: "ncbf__reason-textarea", defaultValue: this.cancellationReason }), a("div", { key: "675ccb5dc874a97d05cacde94fec4b17c95c2e07", class: "footer" }, a("button-component", { key: "2dcba1cec03a6f21766dc1bc3f10aa8790dcc022", variant: "destructive", class: "cancel", type: "submit", part: "ncbf__button-cta", disabled: this.isLoading }, l.t("cancelBookingButton")), !!this.eventInfo && a("button-component", { variant: "basic", class: "back", part: "ncbf__button-outline", onClick: this.handleGoBackClicked }, l.t("goBackButton"))))));
  }
  get host() {
    return S(this);
  }
  static get watchers() {
    return {
      configSettings: ["configSettingsChangedHandler"],
      themeConfig: ["themeConfigChanged"]
    };
  }
};
Oe([
  L({
    name: "nylas-cancel-booking-form",
    stateToProps: /* @__PURE__ */ new Map([
      ["scheduler.configSettings", "configSettings"],
      ["scheduler.selectedTimeslot", "selectedTimeslot"],
      ["scheduler.eventInfo", "eventInfo"],
      ["scheduler.isLoading", "isLoading"],
      ["scheduler.cancelBookingId", "cancelBookingId"],
      ["scheduler.rejectBookingId", "rejectBookingId"],
      ["scheduler.themeConfig", "themeConfig"]
    ]),
    eventToProps: {
      cancelBookingFormSubmitted: async (e, t) => {
        const { action: n, errorHandler: r } = e.detail;
        if (n === "cancel") {
          const s = await t.scheduler.cancelBooking(e.detail.bookingId, e.detail.reason);
          r && (!s || "error" in s) && r(s);
        } else if (n === "reject") {
          const s = await t.scheduler.updateBooking({
            bookingId: e.detail.bookingId,
            status: "cancelled",
            reason: e.detail.reason
          });
          r && (!s || "error" in s) && r(s);
        }
      },
      goBackButtonClicked: async (e, t) => {
        c("nylas-cancel-booking-form", "goBackButtonClicked", e.detail), t.scheduler.goBack();
      },
      cancelBookedEventError: async (e, t) => {
        c("nylas-cancel-booking-form", "cancelBookedEventError", e.detail);
      },
      cancelBookingFormError: async (e, t) => {
        c("nylas-cancel-booking-form", "cancelBookingFormError", e.detail);
      }
    },
    fireRegisterEvent: !0
  }),
  N("design:type", Function),
  N("design:paramtypes", []),
  N("design:returntype", void 0)
], he.prototype, "render", null);
he.style = Pe;
const $e = ':host{display:block;--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:"Inter", sans-serif}.nylas-cancelled-event-card{height:inherit;display:flex;flex-direction:column;justify-content:space-between;align-items:center;font-family:var(--nylas-font-family);width:400px;background-color:var(--nylas-base-0);color:var(--nylas-base-800);border-radius:var(--nylas-border-radius-2x);padding:1.5rem;position:relative;box-shadow:0px 1px 4px rgba(0, 0, 0, 0.1), 0px 3px 6px rgba(0, 0, 0, 0.06)}@media screen and (max-width: 768px){.nylas-cancelled-event-card{width:inherit}}.nylas-cancelled-event-card__title{font-size:18px;font-weight:600;line-height:24px;color:var(--nylas-base-900);text-align:center}.nylas-cancelled-event-description{font-size:16px;font-weight:500;color:var(--nylas-base-600)}.nylas-cancelled-event-card__calendar-icon{width:3rem;height:3rem;border-radius:50%;position:absolute;top:-1.25rem;left:50%;transform:translateX(-50%);background-color:var(--nylas-base-0);border:1px solid var(--nylas-base-200)}.nylas-cancelled-event-card__cta{width:100%;display:flex;flex-direction:row;align-items:flex-start;margin-top:1rem}calendar-cancel-icon{display:flex;align-items:center;justify-content:center;height:100%}button-component{width:100%}', Me = $e;
var Ne = function(e, t, n, r) {
  var s = arguments.length, i = s < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, n) : r, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(e, t, n, r);
  else
    for (var d = e.length - 1; d >= 0; d--)
      (o = e[d]) && (i = (s < 3 ? o(i) : s > 3 ? o(t, n, i) : o(t, n)) || i);
  return s > 3 && i && Object.defineProperty(t, n, i), i;
}, H = function(e, t) {
  if (typeof Reflect == "object" && typeof Reflect.metadata == "function")
    return Reflect.metadata(e, t);
};
const be = class {
  constructor(e) {
    w(this, e), this.closeCancelEventCardClicked = h(this, "closeCancelEventCardClicked", 7), this.cancelledEventCardError = h(this, "cancelledEventCardError", 7), this.handleCloseClicked = () => {
      this.isClosing = !0;
      const t = (n) => {
        this.cancelledEventCardError.emit(n), this.isClosing = !1;
      };
      this.closeCancelEventCardClicked.emit({ errorHandler: t });
    }, this.configSettings = void 0, this.themeConfig = void 0, this.cancelledEventInfo = void 0, this.isClosing = !1;
  }
  themeConfigChanged(e) {
    this.applyThemeConfig(e);
  }
  connectedCallback() {
    c("[nylas-cancelled-event-card] Component connected");
  }
  async componentWillLoad() {
    c("[nylas-cancelled-event-card] Component will load");
  }
  async componentDidLoad() {
    c("[nylas-cancelled-event-card] Component did load"), this.cancelledEventInfo || console.warn('[nylas-cancelled-event-card] No cancelled event info provided, "cancelledEventInfo" prop is required.'), this.applyThemeConfig(this.themeConfig);
  }
  disconnectedCallback() {
    c("[nylas-cancelled-event-card] Component disconnected");
  }
  applyThemeConfig(e) {
    if (e)
      for (const [t, n] of Object.entries(e))
        this.host.style.setProperty(`${t}`, n);
  }
  render() {
    var e, t;
    return a(k, { key: "da9997f15e2a3b54e88cecda75b989ff1a929a17", part: "ncec" }, a("div", { key: "8e516fdf70349c1c677f9f43373b513a2777b281", class: "nylas-cancelled-event-card", part: "ncec__card" }, a("div", { key: "2bd793e49e60204dc0b5ec6e2ed60aa8f57e50b5", class: "nylas-cancelled-event-card__calendar-icon", part: "ncec__icon" }, a("calendar-cancel-icon", { key: "36b868641475fa3b2ac6be2d98c2f8b2c51c5538" })), a("h3", { key: "3c2416240fc848487681adbb90eab89877178071", class: "nylas-cancelled-event-card__title", part: "ncec__title" }, l.t("bookingCancelledTitle"), "!"), a("div", { key: "b725c7e2599a5924426a9b37e896cc64095d994a", class: "nylas-cancelled-event-card__description", part: "ncec__description" }, l.t("bookingCancelledMessage"), " ", ((t = (e = this.configSettings) == null ? void 0 : e.organizer) == null ? void 0 : t.name) || "the participants", "."), a("div", { key: "e23d97e0f59dac5373c652bcfc29b414bafcf099", class: "nylas-cancelled-event-card__cta" }, a("button-component", { key: "7cac75bbdc25ae48051d00fccfc5e322b86c2832", variant: "basic", disabled: this.isClosing, part: "ncec__button-outline", onClick: this.handleCloseClicked }, this.isClosing ? `${l.t("closingButton")}...` : `${l.t("closeButton")}`))));
  }
  get host() {
    return S(this);
  }
  static get watchers() {
    return {
      themeConfig: ["themeConfigChanged"]
    };
  }
};
Ne([
  L({
    name: "nylas-cancelled-event-card",
    stateToProps: /* @__PURE__ */ new Map([
      ["scheduler.configSettings", "configSettings"],
      ["scheduler.themeConfig", "themeConfig"],
      ["scheduler.themeConfig", "themeConfig"]
    ]),
    eventToProps: {
      closeCancelEventCardClicked: async (e, t) => {
        const n = await t.scheduler.resetCancel(), { errorHandler: r } = e.detail;
        r && (!n || "error" in n) && r(n);
      },
      cancelledEventCardError: async (e, t) => {
        c("nylas-cancelled-event-card", "cancelledEventCardError", e.detail);
      }
    },
    fireRegisterEvent: !0
  }),
  H("design:type", Function),
  H("design:paramtypes", []),
  H("design:returntype", void 0)
], be.prototype, "render", null);
be.style = Me;
const He = ':host{display:block;--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:"Inter", sans-serif}.nylas-confirmed-event-card{height:inherit;display:flex;flex-direction:column;justify-content:space-between;align-items:center;font-family:var(--nylas-font-family);width:400px;background-color:var(--nylas-base-0);color:var(--nylas-base-800);border-radius:var(--nylas-border-radius-2x);padding:1.5rem;position:relative;box-shadow:0px 1px 4px rgba(0, 0, 0, 0.1), 0px 3px 6px rgba(0, 0, 0, 0.06)}@media screen and (max-width: 768px){.nylas-confirmed-event-card{width:inherit}}.nylas-confirmed-event-card__title{font-size:18px;font-weight:600;line-height:24px;color:var(--nylas-base-900);text-align:center}.nylas-confirmed-event-description{font-size:16px;font-weight:500;color:var(--nylas-base-600)}.nylas-confirmed-event-card__calendar-icon{width:3rem;height:3rem;border-radius:50%;position:absolute;top:-1.25rem;left:50%;transform:translateX(-50%);background-color:var(--nylas-base-0);border:1px solid var(--nylas-base-200)}.nylas-confirmed-event-card__cta{width:100%;display:flex;flex-direction:row;align-items:flex-start;margin-top:1rem}calendar-cancel-icon{display:flex;align-items:center;justify-content:center;height:100%}button-component{width:100%}', qe = He;
var Ae = function(e, t, n, r) {
  var s = arguments.length, i = s < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, n) : r, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(e, t, n, r);
  else
    for (var d = e.length - 1; d >= 0; d--)
      (o = e[d]) && (i = (s < 3 ? o(i) : s > 3 ? o(t, n, i) : o(t, n)) || i);
  return s > 3 && i && Object.defineProperty(t, n, i), i;
}, q = function(e, t) {
  if (typeof Reflect == "object" && typeof Reflect.metadata == "function")
    return Reflect.metadata(e, t);
};
const me = class {
  constructor(e) {
    w(this, e), this.closeConfirmEventCardClicked = h(this, "closeConfirmEventCardClicked", 7), this.confirmedEventCardError = h(this, "confirmedEventCardError", 7), this.handleCloseClicked = () => {
      this.isClosing = !0;
      const t = (n) => {
        this.confirmedEventCardError.emit(n), this.isClosing = !1;
      };
      this.closeConfirmEventCardClicked.emit({ errorHandler: t });
    }, this.configSettings = void 0, this.themeConfig = void 0, this.confirmedEventInfo = void 0, this.isClosing = !1;
  }
  themeConfigChanged(e) {
    this.applyThemeConfig(e);
  }
  connectedCallback() {
    c("[nylas-confirmed-event-card] Component connected");
  }
  async componentWillLoad() {
    c("[nylas-confirmed-event-card] Component will load");
  }
  async componentDidLoad() {
    c("[nylas-confirmed-event-card] Component did load"), this.confirmedEventInfo || console.warn('[nylas-confirmed-event-card] No confirmed event info provided, "confirmedEventInfo" prop is required.'), this.applyThemeConfig(this.themeConfig);
  }
  disconnectedCallback() {
    c("[nylas-confirmed-event-card] Component disconnected");
  }
  applyThemeConfig(e) {
    if (e)
      for (const [t, n] of Object.entries(e))
        this.host.style.setProperty(`${t}`, n);
  }
  render() {
    var e, t;
    return a(k, { key: "32150831bc61cda8bee5b633cf9f25d13adb50be", part: "ncec" }, a("div", { key: "ced74e070e338973dcf89c61c010357940448dc3", class: "nylas-confirmed-event-card", part: "ncec__card" }, a("div", { key: "3aa9395069cab31c0a586405b1cbff880e175f83", class: "nylas-confirmed-event-card__calendar-icon", part: "ncec__icon" }, a("calendar-cancel-icon", { key: "97fd8d2aacca8fb53c0dccb3b043d2b2e1208b09" })), a("h3", { key: "6e4c56557ca295159a6f3a4c56e181f0da17bf07", class: "nylas-confirmed-event-card__title", part: "ncec__title" }, l.t("confirmedEventCardTitle"), "!"), a("div", { key: "631dd06c937cc87e54efc9a02aed1ca37b457593", class: "nylas-confirmed-event-card__description", part: "ncec__description" }, l.t("confirmedEventCardDescription"), " ", ((t = (e = this.configSettings) == null ? void 0 : e.organizer) == null ? void 0 : t.name) || "the participants", "."), a("div", { key: "e348ce191e32a00c54e0952ec512776cb1f3c02c", class: "nylas-confirmed-event-card__cta" }, a("button-component", { key: "fc97c826564685ee51facea882aa4cf0a7b01608", variant: "basic", disabled: this.isClosing, part: "ncec__button-outline", onClick: this.handleCloseClicked }, this.isClosing ? `${l.t("closingButton")}...` : `${l.t("closeButton")}`))));
  }
  get host() {
    return S(this);
  }
  static get watchers() {
    return {
      themeConfig: ["themeConfigChanged"]
    };
  }
};
Ae([
  L({
    name: "nylas-confirmed-event-card",
    stateToProps: /* @__PURE__ */ new Map([
      ["scheduler.configSettings", "configSettings"],
      ["scheduler.themeConfig", "themeConfig"]
    ]),
    eventToProps: {
      closeConfirmEventCardClicked: async (e, t) => {
        const n = await t.scheduler.resetConfirm(), { errorHandler: r } = e.detail;
        r && (!n || "error" in n) && r(n);
      }
    },
    fireRegisterEvent: !0
  }),
  q("design:type", Function),
  q("design:paramtypes", []),
  q("design:returntype", void 0)
], me.prototype, "render", null);
me.style = qe;
const A = /* @__PURE__ */ new Date(), Z = /* @__PURE__ */ new Date();
function P(e, t, n, r) {
  function s(i) {
    return e(i = arguments.length === 0 ? /* @__PURE__ */ new Date() : /* @__PURE__ */ new Date(+i)), i;
  }
  return s.floor = (i) => (e(i = /* @__PURE__ */ new Date(+i)), i), s.ceil = (i) => (e(i = new Date(i - 1)), t(i, 1), e(i), i), s.round = (i) => {
    const o = s(i), d = s.ceil(i);
    return i - o < d - i ? o : d;
  }, s.offset = (i, o) => (t(i = /* @__PURE__ */ new Date(+i), o == null ? 1 : Math.floor(o)), i), s.range = (i, o, d) => {
    const p = [];
    if (i = s.ceil(i), d = d == null ? 1 : Math.floor(d), !(i < o) || !(d > 0))
      return p;
    let m;
    do
      p.push(m = /* @__PURE__ */ new Date(+i)), t(i, d), e(i);
    while (m < i && i < o);
    return p;
  }, s.filter = (i) => P((o) => {
    if (o >= o)
      for (; e(o), !i(o); )
        o.setTime(o - 1);
  }, (o, d) => {
    if (o >= o)
      if (d < 0)
        for (; ++d <= 0; )
          for (; t(o, -1), !i(o); )
            ;
      else
        for (; --d >= 0; )
          for (; t(o, 1), !i(o); )
            ;
  }), n && (s.count = (i, o) => (A.setTime(+i), Z.setTime(+o), e(A), e(Z), Math.floor(n(A, Z))), s.every = (i) => (i = Math.floor(i), !isFinite(i) || !(i > 0) ? null : i > 1 ? s.filter(r ? (o) => r(o) % i === 0 : (o) => s.count(0, o) % i === 0) : s)), s;
}
const Ze = 1e3, pe = Ze * 60, Ge = pe * 60, F = Ge * 24, G = P(
  (e) => e.setHours(0, 0, 0, 0),
  (e, t) => e.setDate(e.getDate() + t),
  (e, t) => (t - e - (t.getTimezoneOffset() - e.getTimezoneOffset()) * pe) / F,
  (e) => e.getDate() - 1
);
P((e) => {
  e.setUTCHours(0, 0, 0, 0);
}, (e, t) => {
  e.setUTCDate(e.getUTCDate() + t);
}, (e, t) => (t - e) / F, (e) => e.getUTCDate() - 1);
P((e) => {
  e.setUTCHours(0, 0, 0, 0);
}, (e, t) => {
  e.setUTCDate(e.getUTCDate() + t);
}, (e, t) => (t - e) / F, (e) => Math.floor(e / F));
const We = ':host{display:block;min-height:444px;--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:"Inter", sans-serif}@media screen and (max-width: 768px){:host{min-height:auto}}.nylas-date-picker{display:flex;gap:1rem;flex-direction:column}.header{margin:0 0.5rem;height:48px}.header h2{font-size:1.3125rem;font-weight:400;line-height:1rem;color:var(--nylas-base-800)}.header h2 strong{font-weight:600}.title{margin:0 -1.25rem;display:flex;flex-direction:column;padding:0 1.5rem;gap:0.5rem;border-bottom:1px solid var(--nylas-base-200);font-family:var(--nylas-font-family)}.title h1{max-width:376px;margin-bottom:0;font-size:18px;line-height:20px;font-weight:600;display:flex;gap:0.5rem;align-items:center}.title p{margin-top:0;font-size:16px;display:flex;gap:0.5rem;align-items:center}@keyframes pulsate{0%{background-color:var(--nylas-base-50)}50%{background-color:var(--nylas-base-100)}100%{background-color:var(--nylas-base-50)}}.dates{display:grid;justify-items:center;grid-template-columns:repeat(7, 1fr);gap:0.5rem;margin-bottom:24px}.dates .date{position:relative;display:flex;flex-direction:row;justify-content:center;align-items:center;height:48px;width:48px;min-width:2rem;min-height:2rem;cursor:pointer;border-radius:var(--nylas-border-radius-2x);font-size:16px;font-weight:600;font-family:inherit;color:var(--nylas-base-text);background-color:var(--nylas-base-100);cursor:pointer;border:none}@media screen and (max-width: 412px){.dates .date{width:38px;height:38px;min-width:none}}.dates .date:hover:not(:disabled){box-shadow:0 0 0 2px var(--nylas-base-500) inset}.dates .date.date.current-month{color:var(--nylas-base-800)}.dates .date.date.selected{background-color:var(--nylas-primary);color:var(--nylas-base-0);font-weight:700}.dates .date.date.day-skeleton{color:var(--nylas-base-300)}.dates .date:disabled{color:var(--nylas-base-300);background-color:transparent;font-weight:400;cursor:not-allowed}.dates .day{font-size:12px;color:var(--nylas-base-800);font-weight:600;letter-spacing:0.5px;height:32px;display:flex;align-items:center}@media screen and (max-width: 768px){.dates .day{font-size:14px}}.dates .date.day-skeleton{height:48px;width:48px;border-radius:var(--nylas-border-radius-2x);animation:pulsate 1.5s infinite ease-in-out;background-color:var(--nylas-base-50)}@media screen and (max-width: 412px){.dates .date.day-skeleton{width:38px;height:38px;min-width:none}}.dates .date.current-day::after{content:"";position:absolute;bottom:6px;left:50%;transform:translateX(-50%);width:6px;height:6px;border-radius:50%;background-color:var(--nylas-base-500)}.dates .date.current-day.selected::after{background-color:var(--nylas-base-100)}.pagination{display:flex;flex-direction:row;justify-content:space-between;align-items:center;min-width:92px}.pagination .chevron-right{transform:rotate(180deg)}.pagination .button{display:flex;flex-direction:row;justify-content:center;align-items:center;height:3vh;width:3vh;min-width:3em;min-height:3em;cursor:pointer;border-radius:var(--nylas-border-radius-2x);background-color:transparent;color:var(--nylas-base-800);cursor:pointer;border:none}.pagination .button:hover{background-color:var(--nylas-base-50)}.pagination .button:active{background-color:var(--nylas-base-100)}.pagination .button:disabled{background-color:transparent;color:var(--nylas-base-300);cursor:not-allowed}.flex-row{display:flex;flex-direction:row;justify-content:space-between;align-items:center;color:var(--nylas-base-500)}', Ve = We;
var Ue = function(e, t, n, r) {
  var s = arguments.length, i = s < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, n) : r, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(e, t, n, r);
  else
    for (var d = e.length - 1; d >= 0; d--)
      (o = e[d]) && (i = (s < 3 ? o(i) : s > 3 ? o(t, n, i) : o(t, n)) || i);
  return s > 3 && i && Object.defineProperty(t, n, i), i;
}, W = function(e, t) {
  if (typeof Reflect == "object" && typeof Reflect.metadata == "function")
    return Reflect.metadata(e, t);
};
const ge = class {
  constructor(e) {
    w(this, e), this.dateSelected = h(this, "dateSelected", 7), this.monthChanged = h(this, "monthChanged", 7), this.selectableDates = void 0, this.configSettings = void 0, this.themeConfig = void 0, this.selectedDate = void 0, this.selectedLanguage = void 0, this.isLoading = void 0, this.eventDuration = void 0, this.month = this.selectedDate || /* @__PURE__ */ new Date(), this.dates = this.getDates(), this.disableNextMonthButton = !1;
  }
  configSettingsChanged(e) {
    var s;
    const t = new Date(this.month.getFullYear(), this.month.getMonth() + 1, 1), n = (s = e == null ? void 0 : e.scheduler) == null ? void 0 : s.available_days_in_future;
    if (n === void 0)
      return;
    se(/* @__PURE__ */ new Date(), n).getTime() < t.getTime() ? this.disableNextMonthButton = !0 : this.disableNextMonthButton = !1;
  }
  selectedLanguageChanged(e) {
    l.changeLanguage(e);
  }
  themeConfigChanged(e) {
    this.applyThemeConfig(e);
  }
  connectedCallback() {
  }
  disconnectedCallback() {
  }
  componentWillLoad() {
  }
  componentDidLoad() {
    c("[nylas-date-picker] Component did load"), this.applyThemeConfig(this.themeConfig);
  }
  applyThemeConfig(e) {
    if (e)
      for (const [t, n] of Object.entries(e))
        this.host.style.setProperty(`${t}`, n);
  }
  getDates() {
    const e = xe(this.month), t = we(this.month);
    return G.range(G.offset(t, -t.getDay()), G.offset(e, 7 - e.getDay()));
  }
  selectDate(e) {
    this.dateSelected.emit(e);
  }
  changeMonth(e) {
    var s, i;
    this.month = new Date(this.month.getFullYear(), this.month.getMonth() + e, 1);
    const t = new Date(this.month.getFullYear(), this.month.getMonth() + 1, 1), n = (i = (s = this.configSettings) == null ? void 0 : s.scheduler) == null ? void 0 : i.available_days_in_future;
    se(/* @__PURE__ */ new Date(), n).getTime() < t.getTime() ? this.disableNextMonthButton = !0 : this.disableNextMonthButton = !1, this.dates = this.getDates(), this.monthChanged.emit(this.month);
  }
  isSelected(e, t, n) {
    return e && t && I(e, t) && n && (n == null ? void 0 : n.length) > 0;
  }
  isDisabled(e, t) {
    return e && (t == null ? void 0 : t.find((n) => I(n, e))) === void 0;
  }
  render() {
    var e, t, n, r, s, i;
    return a(k, { key: "4c20e8d37a61de3397cac0625884fdd9c11cc8af", part: "ndp" }, a("div", { key: "44174b6408db8263ab96c9acb57985af0d0780d2", class: "nylas-date-picker" }, a("div", { key: "962fc8b1ab8d8794df5838e16a477b8f705e4e6f", class: "title", part: "ndp__title" }, (e = this.configSettings) != null && e.name ? a("h1", null, (t = this.configSettings) == null ? void 0 : t.name) : ((r = (n = this.configSettings) == null ? void 0 : n.organizer) == null ? void 0 : r.name) && a("h1", null, a("person-icon", null), ((i = (s = this.configSettings) == null ? void 0 : s.organizer) == null ? void 0 : i.name) || "Organizer"), a("p", { key: "422505548dffc0ee5a70811415ff030641faeeff" }, a("clock-icon", { key: "ef51faa1c20ef5caf3f3a8f7ff619c619ba72401" }), this.eventDuration ? Ee(this.eventDuration) : `- ${l.t("time.minutes")}`)), a("div", { key: "f593d3bbcb954bd863381e445cff053ce0085714", class: "header flex-row" }, a("h2", { key: "bc844a479c3d7e7b4a2065e91aa79baace20b302", part: "ndp__month-header" }, a("strong", { key: "da5035f141b874d58f626426b71ee7e9dd0b6424" }, Te(this.month.toLocaleDateString(void 0, { month: "long" }).toLocaleLowerCase())), " ", this.month.toLocaleDateString(void 0, { year: "numeric" })), a("div", { key: "a2721542d5155de0072aa8a191b111b7d8cd7eea", class: "pagination" }, a("button", { key: "ad051ec43c6eb386ddefcab4db66932b079d75e0", title: "Previous month", onClick: () => this.changeMonth(-1), class: { "chevron-left": !0, button: !0 }, disabled: this.month <= /* @__PURE__ */ new Date(), part: "ndp__month-button" }, a("chevron-icon", { key: "29cc3852bddacb1d4dd014aceb061d6baa27bfb4" })), a("button", { key: "92de9256c6c89f2dde6c59717bc9866a122e455c", title: "Next month", onClick: () => this.changeMonth(1), class: { "chevron-right": !0, button: !0 }, disabled: this.disableNextMonthButton, part: "ndp__month-button" }, a("chevron-icon", { key: "98e5e9d80629c9e86767ba151e88b20fb1a188b7" })))), a("div", { key: "a63a1331d33c6f1b79d0e2f99e06c8ad0e4a2e50", class: "dates" }, [
      l.t("days.sunday"),
      l.t("days.monday"),
      l.t("days.tuesday"),
      l.t("days.wednesday"),
      l.t("days.thursday"),
      l.t("days.friday"),
      l.t("days.saturday")
    ].map((o) => a("div", { class: "day", part: "ndp__day" }, o)), this.dates.map((o, d) => {
      var m;
      const p = this.isDisabled(o, this.selectableDates);
      return this.isLoading ? a("button", { disabled: !0, class: {
        "date day-skeleton": !0,
        "current-month": O(o, this.month)
      }, style: { animationDelay: `${d * 20}ms` }, part: "ndp__date ndp__date--disabled" }, o.getDate()) : a("button", { class: {
        date: !0,
        selected: !!(this.selectedDate && I(o, this.selectedDate) && this.selectableDates && ((m = this.selectableDates) == null ? void 0 : m.length) > 0),
        "current-day": I(o, /* @__PURE__ */ new Date()),
        "current-month": O(o, this.month)
      }, "aria-label": o.toLocaleDateString(void 0, { dateStyle: "full" }), disabled: p, onClick: () => this.selectDate(o), part: `ndp__date ${this.isSelected(o, this.selectedDate, this.selectableDates) ? "ndp__date--selected" : ""} ${I(o, /* @__PURE__ */ new Date()) ? "ndp__date--current-day" : ""} ${O(o, this.month) ? "ndp__date--current-month" : ""}` }, o.getDate());
    }))));
  }
  get host() {
    return S(this);
  }
  static get watchers() {
    return {
      configSettings: ["configSettingsChanged"],
      selectedLanguage: ["selectedLanguageChanged"],
      themeConfig: ["themeConfigChanged"]
    };
  }
};
Ue([
  L({
    name: "nylas-date-picker",
    stateToProps: /* @__PURE__ */ new Map([
      ["scheduler.selectableDates", "selectableDates"],
      ["scheduler.selectedDate", "selectedDate"],
      ["scheduler.isLoading", "isLoading"],
      ["scheduler.configSettings", "configSettings"],
      ["scheduler.eventDuration", "eventDuration"],
      ["scheduler.selectedLanguage", "selectedLanguage"],
      ["scheduler.themeConfig", "themeConfig"]
    ]),
    eventToProps: {
      dateSelected: async (e, t) => {
        c("nylas-date-picker", "dateSelected", e.detail), t.scheduler.selectDate(e.detail);
      },
      monthChanged: async (e, t) => {
        c("nylas-date-picker", "monthChanged", e.detail);
      }
    },
    fireRegisterEvent: !0
  }),
  W("design:type", Function),
  W("design:paramtypes", []),
  W("design:returntype", void 0)
], ge.prototype, "render", null);
ge.style = Ve;
const Xe = ':host{display:block;--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:"Inter", sans-serif}.nylas-locale-switch{display:flex;flex-direction:row;justify-content:space-between;align-items:center;border-left:none;border-right:none;color:var(--nylas-base-50);font-size:14px;font-weight:600;cursor:pointer;transition:all 0.2s ease-in-out;font-family:inherit}@media screen and (max-width: 768px){.nylas-locale-switch{font-size:16px}}.select-wrapper{display:flex;align-items:center;gap:0.5rem}select{border:none;background:transparent;cursor:pointer;outline:none;background-color:transparent;margin:0 0 1px;padding:4px;vertical-align:middle}select#timezone{width:140px}select#language{width:80px}span.timezone-label{display:flex;width:-webkit-fill-available;justify-content:space-between}select-dropdown{width:auto}select-dropdown::part(sd_dropdown-button){border:none;padding:10px}select-dropdown::part(sd_dropdown-content){max-width:306px}', Ye = Xe;
var Je = function(e, t, n, r) {
  var s = arguments.length, i = s < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, n) : r, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(e, t, n, r);
  else
    for (var d = e.length - 1; d >= 0; d--)
      (o = e[d]) && (i = (s < 3 ? o(i) : s > 3 ? o(t, n, i) : o(t, n)) || i);
  return s > 3 && i && Object.defineProperty(t, n, i), i;
}, V = function(e, t) {
  if (typeof Reflect == "object" && typeof Reflect.metadata == "function")
    return Reflect.metadata(e, t);
};
const ue = class {
  constructor(e) {
    var t, n;
    w(this, e), this.timezoneChanged = h(this, "timezoneChanged", 7), this.languageChanged = h(this, "languageChanged", 7), this.themeConfig = void 0, this.bookingInfo = void 0, this.selectedTimezone = ((t = this.bookingInfo) == null ? void 0 : t.timezone) || Intl.DateTimeFormat().resolvedOptions().timeZone, this.selectedLanguage = ((n = this.bookingInfo) == null ? void 0 : n.language) || navigator.language;
  }
  themeConfigChanged(e) {
    this.applyThemeConfig(e);
  }
  bookingInfoChangedHandler(e) {
    e && (e != null && e.timezone) && this.changeTimezone(e.timezone), e && (e != null && e.language) && this.changeLanguage(e.language);
  }
  connectedCallback() {
  }
  disconnectedCallback() {
  }
  componentWillLoad() {
  }
  componentDidLoad() {
    var e, t;
    c("[nylas-locale-switch] Component did load"), this.applyThemeConfig(this.themeConfig), this.bookingInfo && ((e = this.bookingInfo) != null && e.timezone) && this.changeTimezone(this.bookingInfo.timezone), this.bookingInfo && ((t = this.bookingInfo) != null && t.language) && this.changeLanguage(this.bookingInfo.language);
  }
  applyThemeConfig(e) {
    if (e)
      for (const [t, n] of Object.entries(e))
        this.host.style.setProperty(`${t}`, n);
  }
  changeTimezone(e) {
    this.selectedTimezone = e, this.timezoneChanged.emit(e);
  }
  changeLanguage(e) {
    this.selectedLanguage = e, this.languageChanged.emit(e);
  }
  nylasFormDropdownChangedHandler(e) {
    const { name: t, value: n } = e.detail;
    t === "timezone" ? this.changeTimezone(n) : t === "language" && this.changeLanguage(n);
  }
  getTimezoneLabelHTML(e) {
    const t = Be(e);
    return a("span", { class: "timezone-label", style: {
      display: "flex",
      alignItems: "center",
      justifyContent: "space-between",
      width: "-webkit-fill-available"
    } }, j[e], " ", a("span", { class: "timezone-offset", style: {
      fontSize: "14px",
      fontWeight: "400",
      color: "var(--nylas-base-500)"
    } }, t));
  }
  render() {
    const e = Object.keys(j).map((n) => ({
      labelHTML: this.getTimezoneLabelHTML(n),
      label: j[n],
      value: n
    })), t = Object.keys(re).map((n) => ({
      label: re[n],
      value: n
    }));
    return a(k, { key: "00af320c95ef648f69c9ebde6d741df848190059" }, a("div", { key: "56998ac07ecebb57f763852ea1c46b11328d4d15", class: "nylas-locale-switch", part: "nls" }, a("div", { key: "ba294660f0716060787c9034010ad26b133338f5", class: {
      "select-wrapper": !0,
      timezone: !0
    }, part: "nls__timezone" }, a("select-dropdown", { key: "e3d1a121cb6230c32ad2e4cf9aeffa4395bd635c", name: "timezone", options: e, defaultSelectedOption: e.find((n) => n.value == this.selectedTimezone), exportparts: "sd_dropdown: nls__timezone-dropdown, sd_dropdown-button: nls__timezone-drop-button, sd_dropdown-button-selected-label: nls__timezone-drop-button-selected-label, sd_dropdown-content: nls__timezone-drop-content, sd_dropdown_label: nls__timezone-drop-label" }, a("span", { key: "cc7bb4f138747aab7c5cf673c1b7b3ed09fb9de5", slot: "select-icon" }, a("globe-icon", { key: "717894778dc82c415eab8f764c2c18afc3636ee3", width: "20", height: "20" })))), a("div", { key: "d0a64b3910138c1764e17e2be841dbd3fb746f3d", class: {
      "select-wrapper": !0,
      language: !0
    }, part: "nls__language" }, a("select-dropdown", { key: "86b417f7b62a0e6c74383e3315e1c6dfdfa09868", name: "language", options: t, defaultSelectedOption: t.find((n) => n.value == this.selectedLanguage), exportparts: "sd_dropdown: nls__language-dropdown, sd_dropdown-button: nls__language-drop-button, sd_dropdown-content: nls__language-drop-content, sd_dropdown_label: nls__language-drop-label" }, a("span", { key: "0f1c14fae74a2543fcc57358c507d1288b02ba9c", slot: "select-icon" }, a("translate-icon", { key: "f5a373fff866cf48f39e5bb3b2aa0f6567044433", width: "20", height: "20" }))))));
  }
  get host() {
    return S(this);
  }
  static get watchers() {
    return {
      themeConfig: ["themeConfigChanged"],
      bookingInfo: ["bookingInfoChangedHandler"]
    };
  }
};
Je([
  L({
    name: "nylas-locale-switch",
    stateToProps: /* @__PURE__ */ new Map([
      ["scheduler.selectedLanguage", "selectedLanguage"],
      ["scheduler.selectedTimezone", "selectedTimezone"],
      ["scheduler.bookingInfo", "bookingInfo"],
      ["scheduler.themeConfig", "themeConfig"]
    ]),
    eventToProps: {
      timezoneChanged: async (e, t) => {
        c("nylas-locale-switch", "timezoneChanged", e.detail), t.scheduler.selectTimezone(e.detail);
      },
      languageChanged: async (e, t) => {
        c("nylas-locale-switch", "languageChanged", e.detail), t.scheduler.selectLanguage(e.detail);
      }
    },
    fireRegisterEvent: !0
  }),
  V("design:type", Function),
  V("design:paramtypes", []),
  V("design:returntype", void 0)
], ue.prototype, "render", null);
ue.style = Ye;
const Ke = ".sc-nylas-logo-h{display:flex}", Qe = Ke, et = class {
  constructor(e) {
    w(this, e), this.width = "69", this.height = "24";
  }
  render() {
    return a("svg", { key: "99d3ef972eb18b7beebcd264c3863762f20db756", width: this.width, height: this.height, viewBox: "0 0 69 20", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, a("g", { key: "855b23e638e91b1142b7fb47c17a4763d1e0302f", "clip-path": "url(#clip0_455_3543)" }, a("path", { key: "da34ed8ca958f7424e91b1414c4d4e339b7a703c", d: "M15.8092 3.03248C14.6497 1.86996 13.1076 1.23047 11.4646 1.23047C9.82156 1.23047 8.27753 1.86996 7.11999 3.03248L0.835347 9.33381C0.686846 9.4827 0.60498 9.68123 0.60498 9.89312C0.60498 10.105 0.686846 10.3035 0.835347 10.4524C0.983848 10.6013 1.18185 10.6834 1.39318 10.6834C1.60451 10.6834 1.80251 10.6013 1.95101 10.4524L8.23374 4.15111C10.0139 2.36627 12.9134 2.36627 14.6935 4.15111C16.4736 5.93785 16.4756 8.84322 14.6935 10.6281L8.4108 16.9275C8.10428 17.2348 8.10428 17.7368 8.4108 18.0461C8.5593 18.195 8.75731 18.2771 8.96863 18.2771C9.17996 18.2771 9.37796 18.195 9.52646 18.0461L15.8092 11.7467C16.9687 10.5841 17.6064 9.03793 17.6064 7.39053C17.6064 5.74314 16.9687 4.19501 15.8092 3.03439V3.03248Z", fill: "currentColor" }), a("path", { key: "bd3f95628660594d607d45a000a9c745db80fa74", d: "M14.9296 7.39038C14.9296 6.46074 14.5698 5.58837 13.9148 4.93361C12.5631 3.57828 10.3641 3.57828 9.01239 4.93361L0.663961 13.3023C0.51546 13.4512 0.433594 13.6497 0.433594 13.8616C0.433594 14.0735 0.51546 14.272 0.663961 14.4209C0.812462 14.5698 1.01046 14.6519 1.22179 14.6519C1.43312 14.6519 1.63112 14.5698 1.77962 14.4209L10.0367 6.1515L10.05 6.13623C10.0747 6.10759 10.1014 6.07705 10.128 6.05033C10.1585 6.01978 10.1928 5.99115 10.2251 5.96252L10.2442 5.94534C10.9886 5.31349 12.1119 5.3593 12.8011 6.05033C13.4903 6.74135 13.536 7.78171 12.9705 8.53192L12.9648 8.53955C12.9058 8.61591 12.8544 8.67699 12.8011 8.73044C12.7497 8.78198 12.6906 8.83352 12.6069 8.90033L4.45264 17.0991C4.30414 17.248 4.22227 17.4465 4.22227 17.6584C4.22227 17.8703 4.30414 18.0689 4.45264 18.2177C4.60114 18.3666 4.79914 18.4487 5.01047 18.4487C5.2218 18.4487 5.4198 18.3666 5.5683 18.2177L13.9167 9.84716C14.5698 9.1924 14.9315 8.31812 14.9315 7.39038H14.9296Z", fill: "currentColor" }), a("path", { key: "6dcc6994d434f6d92f6f8977a262072c5442425b", d: "M10.6821 9.11238C10.4727 9.01694 10.2861 8.88904 10.1281 8.7306C9.97008 8.57216 9.84252 8.38508 9.74733 8.1751L9.69021 8.05103L0.467916 17.2978C0.287049 17.4792 0.174721 17.7082 0.149971 17.9411C0.125221 18.1778 0.19376 18.3897 0.344165 18.5405C0.471724 18.6684 0.65259 18.739 0.850592 18.739C1.11142 18.739 1.37796 18.6207 1.58358 18.4145L10.8059 9.16774L10.6821 9.11047V9.11238Z", fill: "currentColor" }), a("path", { key: "16c56405f07d879815be6befad1770575c800d7b", d: "M68.401 10.6185C68.2126 10.2692 67.9593 9.97334 67.6433 9.73854C67.3235 9.49993 66.956 9.31094 66.5486 9.17541C66.1316 9.03606 65.7033 8.91771 65.2749 8.81844C64.7951 8.70582 64.3039 8.57983 63.8165 8.44811C63.3196 8.31258 62.9065 8.14269 62.5905 7.94225C62.4743 7.88689 62.3391 7.76663 62.3391 7.50129C62.3391 7.39821 62.3639 7.29704 62.4153 7.19587L62.4248 7.18059C62.5352 7.02216 62.7142 6.8828 62.975 6.75109C63.234 6.62128 63.609 6.55829 64.1231 6.55829C64.5286 6.55829 64.877 6.61365 65.1569 6.72436C65.4348 6.83508 65.6652 6.96871 65.8442 7.12524C66.0212 7.27986 66.1659 7.45357 66.2782 7.63873C66.3563 7.76854 66.4267 7.89262 66.4858 8.00525L68.2754 6.84081C68.1669 6.59456 68.0146 6.33495 67.8204 6.0677C67.6033 5.768 67.3254 5.4893 66.9922 5.23732C66.659 4.98534 66.2516 4.77345 65.7813 4.60929C65.3111 4.44512 64.7532 4.36304 64.1231 4.36304C63.3844 4.36304 62.7599 4.46421 62.2706 4.66083C61.7813 4.85935 61.3815 5.09988 61.0845 5.37667C60.7875 5.65346 60.5628 5.95125 60.4143 6.2605C60.2639 6.57547 60.1611 6.85799 60.1078 7.10233C60.0945 7.18059 60.0812 7.27031 60.0678 7.36767C60.0545 7.4593 60.0469 7.5452 60.0469 7.62537C60.0469 8.13314 60.1745 8.56074 60.4239 8.89671C60.679 9.24222 61.0045 9.53429 61.391 9.76336C61.7813 9.99624 62.2116 10.1852 62.6704 10.3227C63.1388 10.462 63.5862 10.5823 64.0012 10.6796C64.4067 10.777 64.7932 10.8782 65.1531 10.9774C65.5224 11.0786 65.8289 11.2122 66.0631 11.3745C66.2801 11.5425 66.3887 11.7448 66.3887 11.9777C66.3887 12.2278 66.2916 12.4263 66.0993 12.5695C65.9279 12.6954 65.7261 12.7985 65.4958 12.8711C65.273 12.9436 65.0407 12.9913 64.8066 13.0142C64.58 13.0352 64.3915 13.0467 64.2468 13.0467C63.8032 13.0467 63.4224 13.0028 63.1197 12.915C62.8151 12.8272 62.5638 12.7241 62.3734 12.6057C62.1811 12.4874 62.0288 12.3614 61.9222 12.2316C61.8213 12.1094 61.747 12.0082 61.7014 11.9319L61.4957 11.6303L59.708 12.7928C59.8508 13.0161 60.0298 13.2643 60.2392 13.5296C60.4772 13.8293 60.7837 14.1138 61.153 14.3734C61.5224 14.633 61.966 14.8525 62.4724 15.0243C62.9788 15.1961 63.5748 15.282 64.2468 15.282C64.797 15.282 65.2901 15.2324 65.7166 15.137C66.1412 15.0396 66.5162 14.9117 66.8285 14.7552C67.1388 14.6005 67.4015 14.4192 67.6109 14.2149C67.8223 14.0107 67.9974 13.8026 68.1326 13.6003C68.4563 13.1135 68.6409 12.5504 68.6828 11.9262C68.6828 11.4069 68.5876 10.9641 68.401 10.6166V10.6185Z", fill: "currentColor" }), a("path", { key: "3de8d99ca731b16e8828eca2959e9673830f8e33", d: "M26.3585 4.27905C23.7901 4.27905 21.6997 6.37504 21.6997 8.95017V15.0701H23.9291V8.95017C23.9291 7.6082 25.0181 6.5163 26.3565 6.5163C27.695 6.5163 28.784 7.6082 28.784 8.95017V15.0701H31.0134V8.95017C31.0134 6.37504 28.9229 4.27905 26.3546 4.27905H26.3585Z", fill: "currentColor" }), a("path", { key: "d03b5475a651095cc139a63bc5edeb510ffa803d", d: "M53.4522 4.27905C50.4251 4.27905 47.9634 6.74728 47.9634 9.78245C47.9634 12.8176 50.427 15.2859 53.4522 15.2859C54.5545 15.2859 55.6188 14.9594 56.5288 14.3409L56.7116 14.2169V15.0682H58.941V9.78245C58.941 6.74728 56.4793 4.27905 53.4522 4.27905ZM53.4522 13.0505C51.655 13.0505 50.1928 11.5845 50.1928 9.78245C50.1928 7.98044 51.655 6.51439 53.4522 6.51439C55.2494 6.51439 56.7116 7.98044 56.7116 9.78245C56.7116 11.5845 55.2494 13.0505 53.4522 13.0505Z", fill: "currentColor" }), a("path", { key: "97c2129d3c1de6065d31419fdbf9003a898c2ce8", d: "M45.5795 10.6166V0.356201H43.3501V10.6166C43.3501 13.1517 45.3758 15.2228 47.8908 15.2858V13.0486C46.6057 12.9875 45.5795 11.9204 45.5795 10.6166Z", fill: "currentColor" }), a("path", { key: "4d3686bc5f9c1ce78816523cd32a13c9d7220468", d: "M39.5428 4.4967V10.63C39.5428 11.6761 38.8669 12.621 37.9016 12.9284C37.1249 13.1746 36.3157 13.0486 35.6817 12.5829C35.0592 12.1247 34.6879 11.3917 34.6879 10.6186V4.4967H32.4585V10.5995C32.4585 12.7165 33.8388 14.57 35.8131 15.1084C37.0354 15.4424 38.2995 15.2973 39.3695 14.7037L39.5428 14.6063V14.9747C39.5428 16.2766 38.5166 17.3437 37.2315 17.4067V19.6439C39.7465 19.5809 41.7722 17.5117 41.7722 14.9747V4.4967H39.5428Z", fill: "currentColor" })), a("defs", { key: "9900a72ad101d4d2cb635fad18af7e491487f290" }, a("clipPath", { key: "9afa44c94e88b8929ac91ebe6d6258d9dc92342f", id: "clip0_455_3543" }, a("rect", { key: "bd688e672d4113e964c6fe2e79d50757b5415353", width: "68.7123", height: "19.2877", fill: "white", transform: "translate(0.144043 0.356201)" }))));
  }
};
et.style = Qe;
const tt = ':host{display:block;margin-bottom:-12px;width:100%;z-index:1;--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:"Inter", sans-serif}.notif{display:flex;padding:17px;align-items:flex-start;justify-content:space-between;gap:16px;border-radius:var(--nylas-border-radius-2x);border:1.5px solid var(--nylas-error);background:var(--nylas-base-0)}@media screen and (max-width: 768px){.notif{width:auto}}.notif .content{display:flex;flex-direction:row;gap:8px}.notif .content .message{font-size:14px;font-weight:400;color:var(--nylas-base-800)}.notif .content .message .title{font-size:16px;font-weight:600;color:var(--nylas-base-950);display:block}.notif .content .message .description{font-size:14px;font-weight:400;color:var(--nylas-base-800);display:block}.notif .content .icon.error{color:var(--nylas-error)}.notif.error{border-color:var(--nylas-error);background:rgb(255, 248, 248)}.notif.warning{border-color:var(--nylas-warning)}.notif.info{border-color:var(--nylas-info)}.notif.success{border-color:var(--nylas-success)}.notif .dismiss-btn{background:none;border:none;color:var(--nylas-base-950);cursor:pointer}', nt = tt, at = class {
  constructor(e) {
    w(this, e), this.ttl = 5e3, this.allowedCategories = ["component", "api", "validation", "invalid_session"], this.notifications = [];
  }
  onError(e) {
    c(`[nylas-notification] Error: ${e.detail.notification.title}`), this.handleNotification(e);
  }
  onWarning(e) {
    c(`[nylas-notification] Warning: ${e.detail.notification.title}`), this.handleNotification(e);
  }
  onInfo(e) {
    c(`[nylas-notification] Info: ${e.detail.notification.title}`), this.handleNotification(e);
  }
  onSuccess(e) {
    c(`[nylas-notification] Success: ${e.detail.notification.title}`), this.handleNotification(e);
  }
  isChildOf(e) {
    let t = this.host.parentNode;
    for (; t; ) {
      if (t === e)
        return !0;
      t instanceof ShadowRoot ? t = t.host : t = t.parentNode;
    }
    return !1;
  }
  handleNotification(e) {
    const t = e.detail.host;
    if (e.defaultPrevented) {
      c("[nylas-notification] Event default prevented");
      return;
    }
    if (t && !this.isChildOf(t)) {
      c("[nylas-notification] Host not a parent");
      return;
    }
    if (this.ttl === 0) {
      c("[nylas-notification] TTL is 0");
      return;
    }
    if (this.allowedCategories.length > 0 && !this.allowedCategories.includes(e.detail.notification.category)) {
      c("[nylas-notification] Category not allowed");
      return;
    }
    if (this.notifications = [...this.notifications, { ...e.detail.notification }], e.detail.notification.ttl !== "none") {
      const n = e.detail.notification.ttl ? e.detail.notification.ttl : this.ttl;
      window.setTimeout(() => {
        this.notifications = this.notifications.filter((r) => r.id !== e.detail.notification.id);
      }, n);
    }
  }
  dismissNotification(e) {
    this.notifications = this.notifications.filter((t) => t.id !== e);
  }
  render() {
    return a(k, { key: "37c8f79eb1bb1e30512bda57012ac12edf925955" }, a(De, { key: "6d991acafb35a569a091409cb73de7e0ce048024" }, this.notifications.map((e) => a("div", { class: `notif ${e.type}`, key: e.id }, a("div", { class: "content" }, a("span", { class: `icon ${e.type}` }, (e.type === "error" || e.type === "warning") && a("warning-icon", null)), a("span", { class: "message" }, a("span", { class: "title" }, e.title), e.description && a("span", { class: "description" }, e.description))), a("button", { class: "dismiss-btn", onClick: () => this.dismissNotification(e.id) }, a("close-icon", null)))), a("slot", { key: "37e8972883dac4e8fe1b9d58e53ee8792e4ae94b" })));
  }
  get host() {
    return S(this);
  }
};
at.style = nt;
const it = ':host{display:block;--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:"Inter", sans-serif}.event-card-wrapper{height:inherit;display:flex;flex-direction:column;justify-content:space-between;align-items:center;font-family:var(--nylas-font-family);background-color:var(--nylas-base-0);color:var(--nylas-base-900);border-radius:var(--nylas-border-radius-3x);position:relative;margin-top:1rem;width:424px;box-shadow:0px 1px 4px rgba(0, 0, 0, 0.1), 0px 3px 6px rgba(0, 0, 0, 0.06)}@media screen and (max-width: 768px){.event-card-wrapper{width:100%;border-radius:0px}}.calendar-icon{display:flex;align-items:center;justify-content:center;width:3rem;height:3rem;border-radius:50%;position:absolute;top:-1.25rem;left:50%;transform:translateX(-50%);background-color:var(--nylas-base-0);border:1px solid var(--nylas-base-200);color:var(--nylas-base-700)}.booked-event-header{margin:1.5rem 4rem;overflow-wrap:anywhere;display:flex;align-items:center;flex-direction:column;font-size:16px;font-weight:400}.booked-event-header h2{color:var(--nylas-base-600);margin-top:1.5rem;margin-bottom:0.25rem;font-size:1.125rem;font-weight:600}.manage-booking-description{border-top:1px solid var(--nylas-base-200)}.manage-booking-description p{font-size:16px;margin:1rem;padding:0.5rem 1rem;font-weight:400;color:var(--nylas-base-800)}.footer{padding:0.5rem;display:grid;grid-template-columns:1fr 1fr;gap:0.5rem;box-sizing:border-box;background-color:var(--nylas-base-25);width:100%;border-radius:0 0 var(--nylas-border-radius-2x) var(--nylas-border-radius-2x)}.footer.no-template-cols{grid-template-columns:1fr}.footer.no-footer{display:none}sp-divider{background-color:var(--nylas-base-200);height:1px}calendar-check-icon{display:flex;align-items:center;justify-content:center;height:100%}button-component{--dot-color:var(--nylas-base-700)}', ot = it;
var st = function(e, t, n, r) {
  var s = arguments.length, i = s < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, n) : r, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(e, t, n, r);
  else
    for (var d = e.length - 1; d >= 0; d--)
      (o = e[d]) && (i = (s < 3 ? o(i) : s > 3 ? o(t, n, i) : o(t, n)) || i);
  return s > 3 && i && Object.defineProperty(t, n, i), i;
}, U = function(e, t) {
  if (typeof Reflect == "object" && typeof Reflect.metadata == "function")
    return Reflect.metadata(e, t);
};
const ye = class {
  constructor(e) {
    w(this, e), this.rejectBookingButtonClicked = h(this, "rejectBookingButtonClicked", 7), this.confirmBookingButtonClicked = h(this, "confirmBookingButtonClicked", 7), this.confirmBookingError = h(this, "confirmBookingError", 7), this.handleConfirmBookingButtonClicked = () => {
      this.action = "confirm";
      const t = (n) => {
        this.confirmBookingError.emit(n);
      };
      this.organizerConfirmationBookingId && !this.isLoading && this.confirmBookingButtonClicked.emit({ bookingId: this.organizerConfirmationBookingId, host: this.host, errorHandler: t });
    }, this.handleRejectBookingButtonClicked = () => {
      this.action = "reject", this.organizerConfirmationBookingId && !this.isLoading && this.rejectBookingButtonClicked.emit({ bookingId: this.organizerConfirmationBookingId, host: this.host });
    }, this.configSettings = void 0, this.isLoading = void 0, this.themeConfig = void 0, this.organizerConfirmationBookingId = void 0, this.selectedLanguage = navigator.language, this.action = null;
  }
  themeConfigChanged(e) {
    this.applyThemeConfig(e);
  }
  connectedCallback() {
  }
  disconnectedCallback() {
  }
  async componentWillLoad() {
    c("[nylas-organizer-confirmation-card] Component will load");
  }
  async componentDidLoad() {
    c("[nylas-organizer-confirmation-card] Component did load"), this.applyThemeConfig(this.themeConfig);
  }
  applyThemeConfig(e) {
    if (e)
      for (const [t, n] of Object.entries(e))
        this.host.style.setProperty(`${t}`, n);
  }
  async resetAction() {
    this.action = null;
  }
  render() {
    var e, t, n, r, s, i, o, d, p, m, y, v;
    return a(k, { key: "b4c323bc2244bedc43ffea38922a0ba97424b5bf", part: "nmcc" }, a("div", { key: "d7b9bea1042b6c23497c4a34a730884d1581f7a1", class: "event-card-wrapper", part: "nmccc__card" }, a("div", { key: "c62045056e85744d1b94ae14b926aed48b821fdd", class: "calendar-icon" }, a("calendar-check-icon", { key: "38e95954bf2695949935b6998f5b5422ac2120ef" })), a("div", { key: "9bf921461d40ffe93856da6aa3dd6b29bcdf366e", class: "booked-event-header" }, a("h2", { key: "27beea17ad61d225cd1448b1a1e22c3089bfea6c", slot: "card-title", part: "nmcc__title" }, !!this.organizerConfirmationBookingId && `${l.t("bookingPendingTitle")}!`)), a("div", { key: "49a8c37598e7cc0b9148441db85a5f3b9c59cfcb", class: "manage-booking-description" }, a("p", { key: "bba62e3fb07460d9ea1dd0bfa507a2aa29cd3ad8" }, l.t("bookingPendingnDescription"))), a("div", { key: "1d9b9e5965133b7863cc3aca80c73b88e2455dab", class: {
      footer: !0,
      "no-footer": ((t = (e = this.configSettings) == null ? void 0 : e.scheduler) == null ? void 0 : t.hide_cancellation_options) && ((r = (n = this.configSettings) == null ? void 0 : n.scheduler) == null ? void 0 : r.hide_rescheduling_options),
      "no-template-cols": ((i = (s = this.configSettings) == null ? void 0 : s.scheduler) == null ? void 0 : i.hide_cancellation_options) || ((d = (o = this.configSettings) == null ? void 0 : o.scheduler) == null ? void 0 : d.hide_rescheduling_options)
    } }, !((m = (p = this.configSettings) == null ? void 0 : p.scheduler) != null && m.hide_cancellation_options) && a("button-component", { variant: "destructive", onClick: this.handleRejectBookingButtonClicked, isLoading: this.isLoading && this.action === "reject", part: "nmcc__button-outline nmcc__cancel-cta" }, `${l.t("rejectBookingButton")}`), !((v = (y = this.configSettings) == null ? void 0 : y.scheduler) != null && v.hide_rescheduling_options) && a("button-component", { variant: "basic", onClick: this.handleConfirmBookingButtonClicked, isLoading: this.isLoading && this.action === "confirm", part: "nmcc__button-outline nmcc__reschedule-cta" }, `${l.t("confirmBookingButton")}`))));
  }
  get host() {
    return S(this);
  }
  static get watchers() {
    return {
      themeConfig: ["themeConfigChanged"]
    };
  }
};
st([
  L({
    name: "nylas-organizer-confirmation-card",
    stateToProps: /* @__PURE__ */ new Map([
      ["scheduler.organizerConfirmationBookingId", "organizerConfirmationBookingId"],
      ["scheduler.configSettings", "configSettings"],
      ["scheduler.isLoading", "isLoading"],
      ["scheduler.selectedLanguage", "selectedLanguage"],
      ["scheduler.themeConfig", "themeConfig"]
    ]),
    eventToProps: {
      rejectBookingButtonClicked: async (e, t) => {
        t.scheduler.setReject(e.detail.bookingId);
      },
      confirmBookingButtonClicked: async (e, t) => {
        const { host: n } = e.detail, r = await t.scheduler.updateBooking({
          bookingId: e.detail.bookingId,
          status: "confirmed"
        }), { errorHandler: s } = e.detail;
        s && (!r || "error" in r) && s(r), await n.resetAction();
      }
    },
    fireRegisterEvent: !0
  }),
  U("design:type", Function),
  U("design:paramtypes", []),
  U("design:returntype", void 0)
], ye.prototype, "render", null);
ye.style = ot;
const rt = ':host{--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:"Inter", sans-serif;display:block;position:relative;height:inherit;display:flex;flex-direction:column;justify-content:center;align-items:center;font-family:var(--nylas-font-family)}.event-card{display:flex;align-items:center;flex-direction:column;width:calc(100% - 3rem);background-color:var(--nylas-base-0);color:var(--nylas-base-800);border-radius:var(--nylas-border-radius-2x);padding:3rem 1.5rem 1.5rem 1.5rem;position:relative;box-shadow:0px 1px 3px 0px rgba(0, 0, 0, 0.1), 0px 1px 2px 0px rgba(0, 0, 0, 0.06)}@media screen and (max-width: 768px){.event-card{margin-bottom:2rem}}.nylas-selected-event-card__date{font-size:min(max(16px, 3vw), 18px);font-weight:600}.nylas-selected-event-card__time{font-size:16px;font-weight:500}.calendar-icon{width:3rem;height:3rem;border-radius:50%;position:absolute;top:-1.25rem;left:50%;transform:translateX(-50%);background-color:var(--nylas-base-0);border:1px solid var(--nylas-base-200)}calendar-icon{display:flex;align-items:center;justify-content:center;height:100%}.event-timezone{display:flex;color:var(--nylas-base-600);margin-bottom:8px;gap:4px;align-items:center}@media screen and (max-width: 768px){.event-timezone{margin-bottom:16px}}', lt = rt;
var dt = function(e, t, n, r) {
  var s = arguments.length, i = s < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, n) : r, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(e, t, n, r);
  else
    for (var d = e.length - 1; d >= 0; d--)
      (o = e[d]) && (i = (s < 3 ? o(i) : s > 3 ? o(t, n, i) : o(t, n)) || i);
  return s > 3 && i && Object.defineProperty(t, n, i), i;
}, X = function(e, t) {
  if (typeof Reflect == "object" && typeof Reflect.metadata == "function")
    return Reflect.metadata(e, t);
};
const ke = class {
  constructor(e) {
    w(this, e), this.themeConfig = void 0, this.selectedDate = void 0, this.selectedTimeslot = void 0, this.selectedTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone, this.selectedLanguage = void 0, this.startTime = "", this.endTime = "";
  }
  themeConfigChanged(e) {
    this.applyThemeConfig(e);
  }
  connectedCallback() {
  }
  disconnectedCallback() {
  }
  async componentWillLoad() {
    c("[nylas-selected-event-card] Component will load");
  }
  async componentDidLoad() {
    var t, n;
    c("[nylas-selected-event-card] Component did load"), this.selectedDate || console.warn('[nylas-selected-event-card] "selectedDate" prop is not provided.'), this.selectedTimeslot || console.warn('[nylas-selected-event-card] "selectedTimeslot" prop is not provided.'), this.applyThemeConfig(this.themeConfig);
    const e = new Intl.DateTimeFormat("en-US", {
      hour: "2-digit",
      minute: "2-digit",
      timeZone: this.selectedTimezone
    });
    this.startTime = e.format(new Date((t = this.selectedTimeslot) == null ? void 0 : t.start_time)), this.endTime = e.format(new Date((n = this.selectedTimeslot) == null ? void 0 : n.end_time));
  }
  applyThemeConfig(e) {
    if (e)
      for (const [t, n] of Object.entries(e))
        this.host.style.setProperty(`${t}`, n);
  }
  render() {
    var e;
    return a(k, { key: "e03c7985396173ef1d2bb0ba02ea88e958811a35", part: "nsec" }, a("div", { key: "017d6ce8fc92ef11070d94038e80095acbd90f29", class: "event-card", part: "nsec__card" }, a("div", { key: "b475d6d8481d4e85a383822ed34139a2838a686c", class: "calendar-icon", part: "nsec__icon" }, a("calendar-icon", { key: "83df23c0d499b2932c84175c45c05bb589294f74" })), a("div", { key: "e11fe3c83e6cf3fa926ec3b7e0e381625cb98b0f", class: "nylas-selected-event-card__date", part: "nsec__date" }, this.selectedDate ? le((e = this.selectedDate) == null ? void 0 : e.toLocaleDateString(de[this.selectedLanguage || navigator.language], { dateStyle: "full", timeZone: this.selectedTimezone })) : "-"), a("div", { key: "ed9773f2567782ab354ffe28fbbc365d3d2effa5", class: "nylas-selected-event-card__time", part: "nsec__time" }, this.startTime, " - ", this.endTime)), a("div", { key: "16389c36fe0ab7c55e5f71ab22ad8576dc509cae", class: "event-timezone", part: "nsec__timezone" }, a("globe-icon", { key: "2c6d9e03e0687a5912e1f674c08c19b6e612e90a" }), j[this.selectedTimezone]));
  }
  get host() {
    return S(this);
  }
  static get watchers() {
    return {
      themeConfig: ["themeConfigChanged"]
    };
  }
};
dt([
  L({
    name: "nylas-selected-event-card",
    stateToProps: /* @__PURE__ */ new Map([
      ["scheduler.selectedDate", "selectedDate"],
      ["scheduler.selectedTimeslot", "selectedTimeslot"],
      ["scheduler.selectedTimezone", "selectedTimezone"],
      ["scheduler.selectedLanguage", "selectedLanguage"],
      ["scheduler.themeConfig", "themeConfig"]
    ]),
    eventToProps: {},
    fireRegisterEvent: !0
  }),
  X("design:type", Function),
  X("design:paramtypes", []),
  X("design:returntype", void 0)
], ke.prototype, "render", null);
ke.style = lt;
const ct = ':host{display:block;height:calc(100% - 48px);--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:"Inter", sans-serif}.time-picker-wrapper{display:flex;flex-direction:column;height:100%}.timeslots{position:relative;display:flex;flex-direction:column;gap:0.75rem;align-items:center;overflow-y:scroll;padding:0.5rem 1.5rem 1.5rem;flex:1}.time{box-sizing:border-box;display:flex;flex-direction:column;justify-content:center;align-items:center;padding:4px 12px;gap:0.5rem;font-size:16px;font-weight:500;font-family:inherit;width:100%;height:48px;color:var(--nylas-base-800);background:var(--nylas-base-0);border:none;outline:1.5px solid var(--nylas-base-200);border-radius:var(--nylas-border-radius-2x);flex:none;order:4;align-self:stretch;flex-grow:0;cursor:pointer}.time:hover,.time:focus{color:var(--nylas-primary);outline-color:var(--nylas-primary)}.time.selected{font-weight:600;color:var(--nylas-primary);outline:2px solid var(--nylas-primary);border-color:transparent;box-shadow:0 0 0 2px var(--nylas-primary)}.empty{text-align:center;padding:0 1.5rem;color:var(--nylas-base-600);font-size:min(max(12px, 2vw), 14px);height:450px;display:flex;align-items:center;justify-content:center}@keyframes pulsate{0%{background-color:var(--nylas-base-50)}50%{background-color:var(--nylas-base-100)}100%{background-color:var(--nylas-base-50)}}.loading{padding:0 1.5rem}.loading .timeslot-skeleton{width:100%;height:4rem;background-color:var(--nylas-base-50);margin-bottom:0.5rem;border-radius:var(--nylas-border-radius-2x);animation:pulsate 1.5s infinite ease-in-out}.footer{width:100%;padding:14px;box-sizing:border-box;border-top:1px solid var(--nylas-base-200)}', ft = ct;
var ht = function(e, t, n, r) {
  var s = arguments.length, i = s < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, n) : r, o;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    i = Reflect.decorate(e, t, n, r);
  else
    for (var d = e.length - 1; d >= 0; d--)
      (o = e[d]) && (i = (s < 3 ? o(i) : s > 3 ? o(t, n, i) : o(t, n)) || i);
  return s > 3 && i && Object.defineProperty(t, n, i), i;
}, Y = function(e, t) {
  if (typeof Reflect == "object" && typeof Reflect.metadata == "function")
    return Reflect.metadata(e, t);
};
const ve = class {
  constructor(e) {
    w(this, e), this.timeslotSelected = h(this, "timeslotSelected", 7), this.timeslotConfirmed = h(this, "timeslotConfirmed", 7), this.handleConfirmedTimeslot = async (t, n) => {
      t.preventDefault(), c("[nylas-timeslot-picker] Confirm timeslot", n), this.timeslotConfirmed.emit(n);
    }, this.handleMouseEnter = (t) => {
      this.hoveredTimeslotIndex = t;
    }, this.handleMouseLeave = () => {
      this.hoveredTimeslotIndex = -1;
    }, this.availability = void 0, this.isLoading = void 0, this.themeConfig = void 0, this.selectedTimeslot = void 0, this.selectedTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone, this.selectedDate = /* @__PURE__ */ new Date(), this.selectedLanguage = void 0, this.times = [], this.hoveredTimeslotIndex = void 0, this.selectedTimeslotIndex = void 0;
  }
  selectedLanguageChanged(e) {
    l.changeLanguage(e);
  }
  selectedDateChanged(e) {
    var t;
    if (c("[nylas-timeslot-picker] Selected date changed", { newVal: e }), e && (this.selectedTimeslotIndex = "", typeof e < "u")) {
      const n = (t = this.availability) == null ? void 0 : t.filter((r) => I(r.start_time, e)).map((r) => r);
      this.times = n || [];
    }
  }
  availabilityChanged(e) {
    if (c("[nylas-timeslot-picker] Available times changed", { newVal: e, selectedDate: this.selectedDate }), typeof e < "u") {
      const t = e == null ? void 0 : e.filter((n) => this.selectedDate && I(n.start_time, this.selectedDate)).map((n) => n);
      this.times = t || [];
    }
  }
  themeConfigChanged(e) {
    this.applyThemeConfig(e);
  }
  connectedCallback() {
  }
  disconnectedCallback() {
  }
  async componentWillLoad() {
    c("[nylas-timeslot-picker] Component will load", { selectedDate: this.selectedDate, availability: this.availability, times: this.times });
  }
  async componentDidLoad() {
    var t;
    c("[nylas-timeslot-picker] Component did load");
    const e = (t = this.availability) == null ? void 0 : t.filter((n) => this.selectedDate && I(n.start_time, this.selectedDate)).map((n) => n);
    this.times = e || [], this.applyThemeConfig(this.themeConfig);
  }
  applyThemeConfig(e) {
    if (e)
      for (const [t, n] of Object.entries(e))
        this.host.style.setProperty(`${t}`, n);
  }
  getTimeslotId(e, t) {
    return `${e.toLocaleDateString()}-${t}`;
  }
  onClickSelectTime(e, t) {
    c("[nylas-timeslot-picker] Time selected", e, t), this.selectedTimeslotIndex = this.getTimeslotId(e.start_time, t), this.timeslotSelected.emit({
      start_time: e.start_time,
      end_time: e.end_time,
      emails: e.emails
    });
  }
  getTimeSlotLabel(e) {
    const t = new Intl.DateTimeFormat("en-US", {
      hour: "2-digit",
      minute: "2-digit",
      timeZone: this.selectedTimezone
    });
    return `${t.format(e.start_time)} - ${t.format(e.end_time)}`;
  }
  render() {
    return this.isLoading ? a(k, null, a("div", { class: "loading" }, new Array(6).fill(0).map((e, t) => a("div", { class: "timeslot-skeleton", style: { animationDelay: `${t * 20}ms` } })))) : this.availability && this.availability.length === 0 ? a(k, null, a("div", { class: "empty" }, a("span", null, "No dates available"))) : (!this.times || this.times.length === 0) && this.selectedDate ? a(k, null, a("div", { class: "empty" }, a("span", null, "No time slots available for selected date"))) : this.selectedDate ? a(k, { part: "ntp" }, a("div", { class: "time-picker-wrapper", part: "ntp__time-picker-wrapper" }, a("div", { class: "timeslots", part: "ntp__timeslots" }, this.times.map((e, t) => {
      var n, r, s, i;
      return a("button", { part: `ntp__timeslot ${((r = (n = this.selectedTimeslot) == null ? void 0 : n.start_time) == null ? void 0 : r.getTime()) === e.start_time.getTime() ? "ntp__timeslot--selected" : ""}`, class: {
        time: !0,
        selected: typeof this.selectedTimeslot < "u" && ((i = (s = this.selectedTimeslot) == null ? void 0 : s.start_time) == null ? void 0 : i.getTime()) === e.start_time.getTime()
      }, onClick: () => this.onClickSelectTime(e, t), onMouseEnter: () => this.handleMouseEnter(t), onMouseLeave: () => this.handleMouseLeave() }, this.hoveredTimeslotIndex == t || this.selectedTimeslotIndex == this.getTimeslotId(e.start_time, t) ? this.getTimeSlotLabel(e) : e.start_time.toLocaleTimeString([], { hour: "2-digit", minute: "2-digit", timeZone: this.selectedTimezone }));
    })), this.selectedTimeslot && a("div", { class: "footer" }, a("button-component", { variant: "primary", onClick: (e) => this.handleConfirmedTimeslot(e, this.selectedTimeslot), part: "ntp__button-primary" }, a("slot", { name: "timeslot-picker-cta-label" }, l.t("nextButton")))))) : a(k, null);
  }
  get host() {
    return S(this);
  }
  static get watchers() {
    return {
      selectedLanguage: ["selectedLanguageChanged"],
      selectedDate: ["selectedDateChanged"],
      availability: ["availabilityChanged"],
      themeConfig: ["themeConfigChanged"]
    };
  }
};
ht([
  L({
    name: "nylas-timeslot-picker",
    stateToProps: /* @__PURE__ */ new Map([
      ["scheduler.selectedDate", "selectedDate"],
      ["scheduler.availability", "availability"],
      ["scheduler.selectedTimeslot", "selectedTimeslot"],
      ["scheduler.selectedTimezone", "selectedTimezone"],
      ["scheduler.selectedLanguage", "selectedLanguage"],
      ["scheduler.isLoading", "isLoading"],
      ["scheduler.themeConfig", "themeConfig"]
    ]),
    eventToProps: {
      timeslotSelected: async (e, t) => {
        c("nylas-timeslot-picker", "timeslotSelected", e.detail), t.scheduler.selectTime(e.detail);
      },
      timeslotConfirmed: async (e, t) => {
        c("nylas-timeslot-picker", "timeslotConfirmed", e.detail), e.detail && t.scheduler.toggleAdditionalData(!0);
      }
    },
    fireRegisterEvent: !0
  }),
  Y("design:type", Function),
  Y("design:paramtypes", []),
  Y("design:returntype", void 0)
], ve.prototype, "render", null);
ve.style = ft;
export {
  ce as nylas_booked_event_card,
  fe as nylas_booking_form,
  he as nylas_cancel_booking_form,
  be as nylas_cancelled_event_card,
  me as nylas_confirmed_event_card,
  ge as nylas_date_picker,
  ue as nylas_locale_switch,
  et as nylas_logo,
  at as nylas_notification,
  ye as nylas_organizer_confirmation_card,
  ke as nylas_selected_event_card,
  ve as nylas_timeslot_picker
};
