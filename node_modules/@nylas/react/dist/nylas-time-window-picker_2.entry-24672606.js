import { b as oe, Q as Y, r as q, c as U, R as Z, S as B, T as G, U as Q, h as f, H as le, g as he } from "./index-cd93b584.js";
import "react";
import "react-dom";
var J = { exports: {} };
(function(e, t) {
  (function(n, i) {
    e.exports = i();
  })(oe, function() {
    var n = { LTS: "h:mm:ss A", LT: "h:mm A", L: "MM/DD/YYYY", LL: "MMMM D, YYYY", LLL: "MMMM D, YYYY h:mm A", LLLL: "dddd, MMMM D, YYYY h:mm A" }, i = /(\[[^[]*\])|([-_:/.,()\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g, a = /\d\d/, o = /\d\d?/, x = /\d*[^-_:/,()\s\d]+/, v = {}, V = function(s) {
      return (s = +s) + (s > 68 ? 1900 : 2e3);
    }, c = function(s) {
      return function(r) {
        this[s] = +r;
      };
    }, X = [/[+-]\d\d:?(\d\d)?|Z/, function(s) {
      (this.zone || (this.zone = {})).offset = function(r) {
        if (!r || r === "Z")
          return 0;
        var l = r.match(/([+-]|\d\d)/g), h = 60 * l[1] + (+l[2] || 0);
        return h === 0 ? 0 : l[0] === "+" ? -h : h;
      }(s);
    }], F = function(s) {
      var r = v[s];
      return r && (r.indexOf ? r : r.s.concat(r.f));
    }, j = function(s, r) {
      var l, h = v.meridiem;
      if (h) {
        for (var p = 1; p <= 24; p += 1)
          if (s.indexOf(h(p, 0, r)) > -1) {
            l = p > 12;
            break;
          }
      } else
        l = s === (r ? "pm" : "PM");
      return l;
    }, ee = { A: [x, function(s) {
      this.afternoon = j(s, !1);
    }], a: [x, function(s) {
      this.afternoon = j(s, !0);
    }], S: [/\d/, function(s) {
      this.milliseconds = 100 * +s;
    }], SS: [a, function(s) {
      this.milliseconds = 10 * +s;
    }], SSS: [/\d{3}/, function(s) {
      this.milliseconds = +s;
    }], s: [o, c("seconds")], ss: [o, c("seconds")], m: [o, c("minutes")], mm: [o, c("minutes")], H: [o, c("hours")], h: [o, c("hours")], HH: [o, c("hours")], hh: [o, c("hours")], D: [o, c("day")], DD: [a, c("day")], Do: [x, function(s) {
      var r = v.ordinal, l = s.match(/\d+/);
      if (this.day = l[0], r)
        for (var h = 1; h <= 31; h += 1)
          r(h).replace(/\[|\]/g, "") === s && (this.day = h);
    }], M: [o, c("month")], MM: [a, c("month")], MMM: [x, function(s) {
      var r = F("months"), l = (F("monthsShort") || r.map(function(h) {
        return h.slice(0, 3);
      })).indexOf(s) + 1;
      if (l < 1)
        throw new Error();
      this.month = l % 12 || l;
    }], MMMM: [x, function(s) {
      var r = F("months").indexOf(s) + 1;
      if (r < 1)
        throw new Error();
      this.month = r % 12 || r;
    }], Y: [/[+-]?\d+/, c("year")], YY: [a, function(s) {
      this.year = V(s);
    }], YYYY: [/\d{4}/, c("year")], Z: X, ZZ: X };
    function te(s) {
      var r, l;
      r = s, l = v && v.formats;
      for (var h = (s = r.replace(/(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g, function(I, w, u) {
        var d = u && u.toUpperCase();
        return w || l[u] || n[u] || l[d].replace(/(\[[^\]]+])|(MMMM|MM|DD|dddd)/g, function(k, T, C) {
          return T || C.slice(1);
        });
      })).match(i), p = h.length, y = 0; y < p; y += 1) {
        var L = h[y], S = ee[L], b = S && S[0], g = S && S[1];
        h[y] = g ? { regex: b, parser: g } : L.replace(/^\[|\]$/g, "");
      }
      return function(I) {
        for (var w = {}, u = 0, d = 0; u < p; u += 1) {
          var k = h[u];
          if (typeof k == "string")
            d += k.length;
          else {
            var T = k.regex, C = k.parser, E = I.slice(d), M = T.exec(E)[0];
            C.call(w, M), I = I.replace(M, "");
          }
        }
        return function(D) {
          var m = D.afternoon;
          if (m !== void 0) {
            var A = D.hours;
            m ? A < 12 && (D.hours += 12) : A === 12 && (D.hours = 0), delete D.afternoon;
          }
        }(w), w;
      };
    }
    return function(s, r, l) {
      l.p.customParseFormat = !0, s && s.parseTwoDigitYear && (V = s.parseTwoDigitYear);
      var h = r.prototype, p = h.parse;
      h.parse = function(y) {
        var L = y.date, S = y.utc, b = y.args;
        this.$u = S;
        var g = b[1];
        if (typeof g == "string") {
          var I = b[2] === !0, w = b[3] === !0, u = I || w, d = b[2];
          w && (d = b[2]), v = this.$locale(), !I && d && (v = l.Ls[d]), this.$d = function(E, M, D) {
            try {
              if (["x", "X"].indexOf(M) > -1)
                return new Date((M === "X" ? 1e3 : 1) * E);
              var m = te(M)(E), A = m.year, O = m.month, ie = m.day, se = m.hours, ne = m.minutes, ae = m.seconds, re = m.milliseconds, N = m.zone, P = /* @__PURE__ */ new Date(), _ = ie || (A || O ? 1 : P.getDate()), z = A || P.getFullYear(), $ = 0;
              A && !O || ($ = O > 0 ? O - 1 : P.getMonth());
              var H = se || 0, K = ne || 0, R = ae || 0, W = re || 0;
              return N ? new Date(Date.UTC(z, $, _, H, K, R, W + 60 * N.offset * 1e3)) : D ? new Date(Date.UTC(z, $, _, H, K, R, W)) : new Date(z, $, _, H, K, R, W);
            } catch {
              return /* @__PURE__ */ new Date("");
            }
          }(L, g, S), this.init(), d && d !== !0 && (this.$L = this.locale(d).$L), u && L != this.format(g) && (this.$d = /* @__PURE__ */ new Date("")), v = {};
        } else if (g instanceof Array)
          for (var k = g.length, T = 1; T <= k; T += 1) {
            b[1] = g[T - 1];
            var C = l.apply(this, b);
            if (C.isValid()) {
              this.$d = C.$d, this.$L = C.$L, this.init();
              break;
            }
            T === k && (this.$d = /* @__PURE__ */ new Date(""));
          }
        else
          p.call(this, y);
      };
    };
  });
})(J);
const ce = J.exports, de = ':host{display:block;position:relative;--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:"Inter", sans-serif}.time-picker{display:inline-block;width:150px;font-family:var(--nylas-font-family);position:relative}@media screen and (max-width: 768px){.time-picker{width:auto}}.time-picker input{width:150px;height:48px;text-align:center;font-size:16px;font-family:inherit;cursor:pointer;background:transparent;border:1px solid var(--nylas-base-200);border-radius:var(--nylas-border-radius-2x)}@media screen and (max-width: 768px){.time-picker input{width:88px}}@media screen and (max-width: 504px){.time-picker input{width:68px;font-size:15px}}.time-picker input.focus{background:transparent}.time-picker input:hover,.time-picker input:active{border:1px solid var(--nylas-primary)}.time-picker input:active{outline:2px solid var(--nylas-primary)}.time-picker input span.open{transform:rotate(90deg)}.time-picker input span.closed{transform:rotate(270deg)}.time-picker input.error{border:1px solid var(--nylas-error)}.time-picker p.error{color:var(--nylas-error);font-size:0.875rem;margin:0}.times{display:block;margin-top:0.5rem;background-color:var(--nylas-base-0);width:100%;max-height:336px;overflow:auto;border:1px solid #ddd;z-index:1;border-radius:4px;position:absolute;box-shadow:0px 4px 6px -2px rgba(0, 0, 0, 0.0509803922);box-shadow:0px 10px 15px -3px rgba(0, 0, 0, 0.1019607843)}.times ul{padding:0;list-style-type:none;color:var(--nylas-base-900);max-height:336px}.times ul li{padding:16px, 12px, 16px, 12px;color:black;padding:12px 16px;text-decoration:none;display:block;font-family:inherit;font-size:14px;font-weight:400;line-height:20px;letter-spacing:0px;text-align:center;cursor:pointer}.times ul li.focused{background-color:var(--nylas-base-100)}.times ul li:hover,.times ul li:focus{background-color:var(--nylas-base-100)}.times ul li label{display:flex;align-items:center;gap:0.5rem}.times ul li label input{margin:0}', me = de;
Y.extend(ce);
const fe = class {
  constructor(e) {
    q(this, e), this.timeChange = U(this, "timeChange", 7), this.formError = U(this, "formError", 7), this.time = void 0, this.minimumStartTime = null, this.placeholder = "hh:mmam/pm", this.name = void 0, this.hasError = !1, this.err = "", this.showTimes = !1, this.ariaActivedescendant = "", this.times = this.generateTimes(), this.shouldAutoScroll = !1;
  }
  handleOutsideClick(e) {
    !e.composedPath().includes(this.el) && this.showTimes && (this.showTimes = !1);
  }
  minimumStartTimeChangedHandler() {
    if (this.minimumStartTime) {
      let e = Y().hour(parseInt(this.minimumStartTime)).minute(parseInt(this.minimumStartTime.slice(-4, -2)));
      this.minimumStartTime.slice(-2).toLowerCase() === "pm" && parseInt(this.minimumStartTime) !== 12 ? e = e.add(12, "hour") : this.minimumStartTime.slice(-2).toLowerCase() === "am" && parseInt(this.minimumStartTime) === 12 && (e = e.subtract(12, "hour")), this.times = this.generateTimes();
      const t = Y(this.times[0].value, "hh:mma");
      Y(this.time, "hh:mma").isBefore(t) && (this.err = "Invalid", this.formError.emit({
        key: this.el.id,
        message: "Invalid"
      }));
    }
  }
  componentDidRender() {
    if (this.showTimes && this.shouldAutoScroll) {
      const e = Z(this.time), t = this.times.findIndex((n) => n.value === e);
      t > -1 && (this.shouldAutoScroll = !1, this.scrollToViewWithinParent(t));
      return;
    }
  }
  handleTimeChange(e, t) {
    const n = t.split(":");
    n[0] === "00" && n[1].slice(-2) == "pm" && (this.err = "Invalid", this.formError.emit({
      key: this.el.id,
      message: "Invalid"
    })), B(t) ? (this.err = "", this.formError.emit({
      key: this.el.id,
      message: ""
    })) : (this.err = "Invalid", this.formError.emit({
      key: this.el.id,
      message: "Invalid"
    })), this.timeChange.emit({
      key: this.el.id,
      value: t
    });
  }
  handleTimeAutocomplete(e) {
    var n;
    const t = (n = e.target) == null ? void 0 : n.value;
    if (!B(t)) {
      this.err = "Invalid", this.formError.emit({
        key: this.el.id,
        message: "Invalid"
      });
      return;
    }
    if (t === "") {
      const i = G().format("hh:mma");
      this.timeChange.emit({
        key: this.el.id,
        value: i
      });
      return;
    }
    if (!Q(t)) {
      const i = Z(t);
      this.timeChange.emit({
        key: this.el.id,
        value: i
      });
      return;
    }
    this.timeChange.emit({
      key: this.el.id,
      value: t
    });
  }
  handleOnInput(e) {
    var n;
    const t = (n = e.target) == null ? void 0 : n.value;
    if (B(t)) {
      if (t === "") {
        const i = G().format("hh:mma"), a = this.times.findIndex((o) => o.value === i);
        a > -1 && this.scrollToViewWithinParent(a);
        return;
      }
      if (!Q(t)) {
        const i = Z(t), a = this.times.findIndex((o) => o.value === i);
        a > -1 && this.scrollToViewWithinParent(a);
        return;
      }
    }
  }
  generateTimes() {
    const e = [];
    let t = Y().set("hour", 0).set("minute", 0).set("second", 0);
    this.minimumStartTime && (t = Y(this.minimumStartTime, "hh:mma"));
    const n = t.endOf("day").diff(t, "minutes"), i = Math.round(n / 15);
    for (let a = 0; a < i + 1; a++) {
      const o = t.add(a * 15, "minute");
      if (a == i && o.format("hh:mma").includes("am"))
        break;
      e.push({ id: a, value: o.format("hh:mma") });
    }
    return e;
  }
  handleComboboxKeyDown(e) {
    if (e.key === "ArrowDown") {
      if (e.preventDefault(), !this.showTimes) {
        this.showTimes = !0, this.shouldAutoScroll = !0;
        return;
      }
      if (this.ariaActivedescendant === "")
        this.ariaActivedescendant = this.times[0].id.toString(), this.focusOption(0);
      else {
        const t = this.times.findIndex((i) => i.id.toString() === this.ariaActivedescendant), n = t + 1 < this.times.length ? t + 1 : 0;
        this.ariaActivedescendant = this.times[n].id.toString(), this.focusOption(n);
      }
    } else if (e.key === "ArrowUp")
      if (e.preventDefault(), this.ariaActivedescendant === "")
        this.ariaActivedescendant = this.times[this.times.length - 1].id.toString(), this.focusOption(this.times.length - 1);
      else {
        const t = this.times.findIndex((i) => i.id.toString() === this.ariaActivedescendant), n = t - 1 >= 0 ? t - 1 : this.times.length - 1;
        this.ariaActivedescendant = this.times[n].id.toString(), this.focusOption(n);
      }
    else
      e.key === "Escape" && (this.showTimes = !1, this.timeInput.focus());
  }
  handleListboxKeydown(e) {
    const t = this.times, n = t.findIndex((i) => i.id.toString() === this.ariaActivedescendant);
    if (e.key === "ArrowDown" || e.key === "Tab" && !e.shiftKey) {
      e.preventDefault();
      const i = n + 1 < t.length ? n + 1 : 0;
      this.ariaActivedescendant = t[i].id.toString(), this.focusOption(i);
    } else if (e.key === "ArrowUp" || e.key === "Tab" && e.shiftKey) {
      e.preventDefault();
      const i = n - 1 >= 0 ? n - 1 : t.length - 1;
      this.ariaActivedescendant = t[i].id.toString(), this.focusOption(i);
    } else if (e.key === "Enter") {
      if (e.preventDefault(), this.ariaActivedescendant) {
        const i = t[n];
        this.handleTimeChange(e, i.value), this.showTimes = !1, this.ariaActivedescendant = "", this.timeInput.focus();
      }
    } else
      e.key === "Escape" && (this.showTimes = !1, this.timeInput.focus());
  }
  scrollToViewWithinParent(e) {
    var x;
    const t = this.times[e], n = (x = this.el.shadowRoot) == null ? void 0 : x.getElementById(t.id.toString()), i = this.timeMenu;
    this.ariaActivedescendant = t.id.toString();
    const a = n.getBoundingClientRect(), o = i.getBoundingClientRect();
    a.top < o.top ? i.scrollTop -= o.top - a.top : a.bottom > o.bottom && (i.scrollTop += a.bottom - o.bottom), a.left < o.left ? i.scrollLeft -= o.left - a.left : a.right > o.right && (i.scrollLeft += a.right - o.right);
  }
  focusOption(e) {
    var a;
    const t = this.times[e];
    if (!t)
      return;
    const n = t.id.toString(), i = (a = this.el.shadowRoot) == null ? void 0 : a.getElementById(n);
    i && (i.focus(), i.scrollIntoView({ behavior: "smooth", block: "nearest" }));
  }
  render() {
    return f(le, { key: "08c910b64f1990194d69892923e03e8cf2967853" }, f("div", { key: "8580adca9096558b400d9fc1ceaac1807345a4bf", class: "time-picker", part: "time-picker" }, f("input", { key: "922200c3ba40d880f368f06dba3a2c2549cfa9d6", type: "text", name: this.name, id: this.name, part: "time-input", class: {
      "time-input": !0,
      error: !!this.err || this.hasError
    }, ref: (e) => this.timeInput = e, value: this.time, onClick: () => {
      this.showTimes = !this.showTimes, this.shouldAutoScroll = !0;
    }, "aria-haspopup": "listbox", "aria-label": this.name, "aria-expanded": this.showTimes ? "true" : "false", placeholder: this.placeholder, onKeyDown: (e) => this.handleComboboxKeyDown(e), onInput: (e) => this.handleOnInput(e), onBlur: (e) => this.handleTimeAutocomplete(e) }), this.err && f("div", { class: "invalid-time-icon" }), this.showTimes && f("div", { class: "times", part: "times", ref: (e) => this.timeMenu = e }, f("ul", { tabindex: "-1", role: "listbox", "aria-label": this.name, "aria-activedescendant": this.ariaActivedescendant, onKeyDown: (e) => this.handleListboxKeydown(e) }, this.times.map((e) => f("li", { tabindex: "0", key: e.id, id: e.id.toString(), class: {
      focused: this.ariaActivedescendant === e.id.toString()
    }, onClick: (t) => {
      this.handleTimeChange(t, e.value), this.showTimes = !1, this.timeInput.focus();
    }, role: "option" }, `${e.value}`)))), !this.showTimes && this.err && f("p", { class: "error", id: "email-error" }, this.err)));
  }
  get el() {
    return he(this);
  }
  static get watchers() {
    return {
      minimumStartTime: ["minimumStartTimeChangedHandler"]
    };
  }
};
fe.style = me;
const ue = '.switch{--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:"Inter", sans-serif;display:inline-block;height:34px;position:relative;width:60px}.switch input{display:none}.slider{background-color:var(--nylas-base-300);bottom:0;cursor:pointer;left:0;position:absolute;right:0;top:0;transition:0.4s}.slider:before{background-color:var(--nylas-base-0);bottom:4px;content:"";height:32px;left:4px;position:absolute;transition:0.4s;width:32px}input:checked+.slider{background-color:var(--nylas-success)}input:checked+.slider:before{transform:translateX(32px)}.slider.round{border-radius:35px;width:72px;height:40px}.slider.round:before{border-radius:50%}', pe = ue, ye = class {
  constructor(e) {
    q(this, e), this.nylasFormSwitchToggled = U(this, "nylasFormSwitchToggled", 7), this.name = "toggle-switch", this.checked = !1, this.label = "", this.isChecked = this.checked;
  }
  componentWillLoad() {
    this.isChecked = this.checked;
  }
  toggleCheck() {
    this.isChecked = !this.isChecked, this.nylasFormSwitchToggled.emit({
      checked: this.isChecked,
      name: this.name,
      label: this.label
    });
  }
  render() {
    return f("label", { key: "1586b4b0484716254ad8befbd9f99f7956e9c129", class: "switch", part: "ts_label" }, f("input", { key: "c7e9432dfe88d4c27bb146c3816f750fb7dc6851", type: "checkbox", part: "ts_input", name: this.name, checked: this.isChecked, onChange: () => this.toggleCheck() }), f("div", { key: "08980c1db3849f197b1780caa55bfe8e84ce0a92", class: "slider round", part: "ts_slider" }));
  }
};
ye.style = pe;
export {
  fe as nylas_time_window_picker,
  ye as toggle_switch
};
